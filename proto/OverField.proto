syntax = "proto3";
option java_package = "cyt.kfkj.proto";
option java_multiple_files = true;
message SceneConfig {
	repeated SceneInfo scenes = 1;
	repeated SceneInfo dungeons = 2;
	int64 scene_config_version = 3;
}
message SceneInfo {
	int32 id = 1;
	repeated BornInfo born = 2;
	repeated GatherPointSetInfo gather_point_set_info = 3;
	repeated CollectionTreasureInfo collection_treasure_infos = 4;
	repeated DungeonCoinInfo coin_infos = 5;
	repeated DungeonInfo dungeon_infos = 6;
	repeated DungeonMonsterInfo monster_infos = 7;
}
message BornInfo {
	Vector3 position = 1;
	Vector4 rotation = 2;
}
message Vector3 {
	float x = 1;
	float y = 2;
	float z = 3;
}
message Vector4 {
	float x = 1;
	float y = 2;
	float z = 3;
	float w = 4;
}
message VectorInt3 {
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
}
message GatherPointSetInfo {
	Vector3 min_start_point = 1;
	float cell_size = 2;
	int32 random_count = 3;
	repeated GatherSet gather_point_sets = 4;
	int32 index = 5;
}
message GatherSet {
	int32 index = 1;
	Vector3 set_index = 2;
	repeated GatherPointInfo life_gather_pointers = 3;
	repeated int32 neighbor = 4;
}
message GatherPointInfo {
	int32 index = 1;
	int32 gather_id = 2;
}
message CollectionTreasureInfo {
	int32 index = 1;
	int32 id = 2;
}
message RiddleInfo {
	int32 id = 1;
}
message DungeonCoinInfo {
	int32 index = 1;
	int32 id = 2;
}
message DungeonInfo {
	int32 id = 1;
}
message DungeonMonsterInfo {
	int32 index = 1;
	int32 unit_id = 2;
}
enum FriendHandleType {
  FriendHandleType_None = 0;
  FriendHandleType_Add = 1;
  FriendHandleType_Apply = 2;
  FriendHandleType_Del = 3;
}
enum FriendListType {
  FriendListType_None = 0;
  FriendListType_Apply = 1;
  FriendListType_Friend = 2;
  FriendListType_Black = 3;
}
enum FriendStatus {
  FriendStatus_None = 0;
  FriendStatus_Apply = 1;
  FriendStatus_Friend = 2;
  FriendStatus_Black = 3;
}
enum ChatChannelType {
  ChatChannelType_ChatChannelDefault = 0;
  ChatChannelType_ChatChannelChatRoom = 1;
  ChatChannelType_ChatChannelPrivate = 2;
  ChatChannelType_ChatChannelSystem = 3;
  ChatChannelType_ChatChannelNotice = 4;
  ChatChannelType_ChatChannelTeam = 5;
  ChatChannelType_ChatChannelGuild = 6;
  ChatChannelType_ChatChannelHorn = 7;
}
enum StatusCode {
  StatusCode_None = 0;
  StatusCode_Ok = 1;
  StatusCode_Fail = 2;
  StatusCode_BadReq = 3;
  StatusCode_SysErr = 4;
  StatusCode_AccountUnauth = 5;
  StatusCode_IllegalLen = 6;
  StatusCode_IllegalChar = 7;
  StatusCode_BadWord = 8;
  StatusCode_DuplicatedName = 9;
  StatusCode_ServerIsFull = 10;
  StatusCode_PlayerNotFound = 11;
  StatusCode_CfgNotFound = 12;
  StatusCode_ItemNotEnough = 13;
  StatusCode_AccountBanned = 14;
  StatusCode_RegisterLimit = 15;
  StatusCode_PlayerNotInChannelWait = 16;
  StatusCode_PlayerNotInChannel = 17;
  StatusCode_QuickCheckFail = 20;
  StatusCode_InvalidToken = 21;
  StatusCode_AccountNameNotBind = 22;
  StatusCode_AccountNameRepeatBind = 23;
  StatusCode_AccountNameBindFail = 24;
  StatusCode_Ignore = 25;
  StatusCode_Serverundermaintenance = 205;
  StatusCode_RepeatGetReward = 207;
  StatusCode_MutedPlayerChatFail = 210;
  StatusCode_FriendSearchFail = 211;
  StatusCode_FriendAddFail = 212;
  StatusCode_PlayerLevelLimit = 220;
  StatusCode_SceneChannelIsFull = 226;
  StatusCode_SceneNotUnlock = 234;
  StatusCode_SceneChannelPrivate = 235;
  StatusCode_SceneChannelNotExist = 236;
  StatusCode_ScenePublicChannelNotUnlock = 237;
  StatusCode_ChatChannelNotExist = 238;
  StatusCode_PlayerLifeSkillNotExist = 250;
  StatusCode_LifeLvNotEnough = 251;
  StatusCode_AreaUnlock = 282;
  StatusCode_DungeonUnlock = 302;
  StatusCode_PlayerNotInDungeon = 305;
  StatusCode_DungeonTeamFull = 303;
  StatusCode_DungeonTeamError = 304;
  StatusCode_DungeonCantReward = 308;
  StatusCode_DungeonCheat = 309;
  StatusCode_PosterMaxStar = 380;
  StatusCode_PosterIllustrationNotActive = 381;
  StatusCode_PosterIllustrationRewarded = 382;
  StatusCode_MailNoReward = 421;
  StatusCode_MailNotExist = 422;
  StatusCode_CharNotExist = 430;
  StatusCode_ChallengeNotEnd = 470;
  StatusCode_ChallengeNotStart = 471;
  StatusCode_ShopItemAlreadyInBag = 491;
  StatusCode_ShopSingleBuyNumLimit = 493;
  StatusCode_ShopGridBuyNumLimit = 494;
  StatusCode_GamePlayRewardLimit = 510;
  StatusCode_RiddleNotEnd = 515;
  StatusCode_RiddleNotStart = 516;
  StatusCode_HasUnlocked = 570;
  StatusCode_ChairSeatTaken = 581;
  StatusCode_PlayerSitOtherChair = 582;
  StatusCode_PlayerChairRemoved = 583;
  StatusCode_WorldLevelNowIn = 641;
  StatusCode_WorldLevelLocked = 642;
  StatusCode_WorldSwitchFail = 643;
  StatusCode_WorldLevelAlreadyUnlock = 644;
  StatusCode_WorldLevelAchieveNotFinish = 645;
  StatusCode_WorldLevelUnlockFail = 646;
  StatusCode_NotFinishAllTask = 660;
  StatusCode_AlreadyGotReward = 661;
  StatusCode_ExploreInProgress = 693;
  StatusCode_ExploreNumLimit = 692;
  StatusCode_ExploreNotExists = 695;
  StatusCode_ExploreMaxTimes = 697;
  StatusCode_ExploreNotFinish = 698;
  StatusCode_ExploreCollectNotFinish = 699;
  StatusCode_IntervalOverdue = 711;
  StatusCode_IntervalNotExists = 717;
  StatusCode_IntervalFinish = 718;
  StatusCode_IntervalNotFinish = 719;
  StatusCode_ReportTimeLimit = 752;
  StatusCode_FriendNotExist = 780;
  StatusCode_FriendExist = 782;
  StatusCode_FriendLimit = 783;
  StatusCode_FriendApplyLimit = 784;
  StatusCode_FriendOtherLimit = 786;
  StatusCode_FriendNotApply = 789;
  StatusCode_FriendBlack = 790;
  StatusCode_FriendApplyExist = 791;
  StatusCode_EnergyNotEnough = 827;
  StatusCode_IsFishing = 828;
  StatusCode_TreasureBoxNotExist = 841;
  StatusCode_CharacterSkillLvIsMax = 853;
  StatusCode_EnergyBuyTimesLimit = 865;
  StatusCode_RedemptionCodeNotExist = 890;
  StatusCode_RedemptionCodeUsed = 891;
  StatusCode_RedemptionCodeNumIsMax = 892;
  StatusCode_RedemptionCodeFail = 893;
  StatusCode_FurnitureNumLimit = 902;
  StatusCode_TipsLikesNumLimit = 903;
  StatusCode_FunctionUnlock = 1310;
  StatusCode_GachaCardPoolFail = 1318;
  StatusCode_GachaCardRewardFail = 1319;
  StatusCode_GachaErr = 1320;
  StatusCode_GachaUnlock = 1321;
  StatusCode_GachaFreeTimeNotReady = 1322;
  StatusCode_GachaTypeNotExist = 1323;
  StatusCode_GachaNotFree = 1324;
  StatusCode_GachaNumMax = 1325;
  StatusCode_GachaAlreadyFullPick = 1326;
  StatusCode_GachaFullPickNotExist = 1327;
  StatusCode_GachaItemNotExist = 1329;
  StatusCode_HeadNotUnlock = 1330;
  StatusCode_ActionNotUnlock = 1331;
  StatusCode_PhoneBackgroundNotUnlock = 1332;
  StatusCode_GachaOptional = 1333;
  StatusCode_ActionStudyTimeOut = 1334;
  StatusCode_AbilityNotUnlock = 1340;
  StatusCode_AbilityLevelLimit = 1341;
  StatusCode_ItemGetFail = 1350;
  StatusCode_VitalityFull = 1360;
  StatusCode_VitalityBuyNumLimit = 1361;
  StatusCode_IsLearning = 1373;
  StatusCode_CantLearningTwoSkill = 1374;
  StatusCode_SkillAlreadyStudy = 1375;
  StatusCode_ProficiencyNotEnough = 1376;
  StatusCode_LifeSkillMaxLv = 1377;
  StatusCode_LifeMaxLv = 1378;
  StatusCode_AbilityBadgeNotUnlock = 1390;
  StatusCode_AbilityBadgeBoxAlreadyActive = 1391;
  StatusCode_AbilityBadgeActivePreConditionNotFinish = 1392;
  StatusCode_AbilityBadgePageRewarded = 1393;
  StatusCode_AbilityBadgePageBoxActiveLimit = 1394;
  StatusCode_AbilityBadgeAchieveNotComplete = 1395;
  StatusCode_AbilityBadgeAchieveRewarded = 1396;
  StatusCode_RandomDyeStuffNotRandomColor = 1400;
  StatusCode_OutfitSchemeIndexNotUnlock = 1401;
  StatusCode_OutfitTypeDiffer = 1402;
  StatusCode_OutfitSexTypeDiffer = 1403;
  StatusCode_NotDye = 1404;
  StatusCode_OutfitSchemeIndexHasUnlocked = 1405;
  StatusCode_TempPackIsFull = 1410;
  StatusCode_AreaNotUnlock = 1420;
  StatusCode_AreaAlreadyUnlock = 1421;
  StatusCode_AreaLevelLimit = 1422;
  StatusCode_AreaLevelQuestNotFinish = 1423;
  StatusCode_RegionVoiceCollected = 1424;
  StatusCode_MapCompletenessNotEnough = 1430;
  StatusCode_PreChapterNotFinish = 1431;
  StatusCode_PreStoryNotFinish = 1432;
  StatusCode_LvNotEnough = 1433;
  StatusCode_NotCollected = 1440;
  StatusCode_AlreadyCollected = 1441;
  StatusCode_CollectionAlreadyRewarded = 1442;
  StatusCode_GatherWeaponNotWear = 1443;
  StatusCode_GatherWeaponTypeDiffer = 1444;
  StatusCode_GatherLimit = 1445;
  StatusCode_QuestNotFinish = 1450;
  StatusCode_NotPayment = 1451;
  StatusCode_AlreadyAcceptQuest = 1452;
  StatusCode_ManualNotUnlock = 1460;
  StatusCode_ManualAlreadyUnlock = 1461;
  StatusCode_ManualRewarded = 1462;
  StatusCode_CampFireTooClose = 1470;
  StatusCode_PartialEquipDisassembleFailed = 1471;
  StatusCode_WeaponMaxStrengthLevel = 1480;
  StatusCode_ArmorMaxStrengthLevel = 1481;
  StatusCode_CreateOrderSpeedError = 1490;
  StatusCode_BattlePassNotBuy = 1500;
  StatusCode_BattlePassQuestRewarded = 1501;
  StatusCode_BattlePassMaxLevel = 1502;
  StatusCode_BattlePassLevelLimit = 1503;
  StatusCode_BattlePassLvRewarded = 1504;
  StatusCode_BattlePassHasBuy = 1505;
  StatusCode_ActivityGiftRewarded = 1506;
  StatusCode_ActivityGiftHasBuy = 1507;
  StatusCode_ActivityInviteNotOpen = 1510;
  StatusCode_InviteCodeAlreadyFilled = 1511;
  StatusCode_InviteCodeNotExist = 1512;
  StatusCode_ActivityInviteTaskClaimed = 1513;
  StatusCode_ActivityInviteTaskNotCompleted = 1514;
  StatusCode_CantRepeatedPlacedInOtherChannel = 1520;
}
enum AccountOSType {
  AccountOSType_Windows = 0;
  AccountOSType_Android = 1;
  AccountOSType_Ios = 2;
  AccountOSType_Mac = 3;
  AccountOSType_Gava = 4;
  AccountOSType_BliBliPc = 5;
  AccountOSType_WeGame = 6;
}
enum PlayerOfflineReason {
  PlayerOfflineReason_None = 0;
  PlayerOfflineReason_Disconnect = 1;
  PlayerOfflineReason_ServerShutdown = 2;
  PlayerOfflineReason_Kick = 3;
  PlayerOfflineReason_AnotherLogin = 4;
  PlayerOfflineReason_AntiAddiction = 5;
  PlayerOfflineReason_Logout = 6;
  PlayerOfflineReason_AccountCancelBind = 7;
}
enum OperateCmdType {
  OperateCmdType_None = 0;
  OperateCmdType_GmCode = 1;
  OperateCmdType_QuestionnaireSubmit = 2;
  OperateCmdType_TaskUpdateBatch = 3;
}
enum MailState {
  MailState_Unread = 0;
  MailState_Readed = 1;
  MailState_Unclaim = 2;
  MailState_Claimed = 3;
}
enum MailType {
  MailType_None = 0;
  MailType_Global = 1;
  MailType_Player = 2;
}
enum MailContentType {
  MailContentType_None = 0;
  MailContentType_Text = 1;
  MailContentType_TextId = 2;
}
enum LifeType {
  LifeType_None = 0;
  LifeType_Cooking = 1;
  LifeType_Fishing = 2;
  LifeType_Making = 3;
  LifeType_Handicraft = 4;
  LifeType_Sewing = 5;
  LifeType_Gathering = 6;
}
enum SceneActionType {
  SceneActionType_None = 0;
  SceneActionType_Enter = 1;
  SceneActionType_Leave = 2;
  SceneActionType_UpdateEquip = 3;
  SceneActionType_UpdateFashion = 4;
  SceneActionType_UpdateTeam = 5;
  SceneActionType_UpdateAppearance = 6;
  SceneActionType_UpdateNickname = 7;
  SceneActionType_UpdateCharacterDead = 8;
  SceneActionType_UpdateCharacterLv = 9;
  SceneActionType_UpdateCharacterStar = 10;
  SceneActionType_UpdateWeaponStar = 11;
  SceneActionType_UpdateArmor = 12;
  SceneActionType_UpdateInscription = 13;
  SceneActionType_AddFoodBuff = 14;
  SceneActionType_RemoveFoodBuff = 15;
  SceneActionType_UpdatePoster = 16;
  SceneActionType_UpdateCharacterBreakLv = 17;
  SceneActionType_AddGolbalBuff = 18;
  SceneActionType_RemoveGolbalBuff = 19;
  SceneActionType_TodUpdate = 20;
  SceneActionType_BirthdayUpdate = 21;
}
enum QuestStatus {
  QuestStatus_Locked = 0;
  QuestStatus_InProgress = 1;
  QuestStatus_Completed = 2;
  QuestStatus_Finish = 3;
}
enum BattleState {
  BattleState_Start = 0;
  BattleState_Finish = 1;
  BattleState_Reset = 2;
  BattleState_Fail = 3;
  BattleState_Close = 4;
}
enum TreasureBoxState {
  TreasureBoxState_Close = 0;
  TreasureBoxState_Open = 1;
}
enum RewardStatus {
  RewardStatus_NotReward = 0;
  RewardStatus_Reward = 1;
}
enum TreasureBoxLocType {
  TreasureBoxLocType_Scene = 0;
  TreasureBoxLocType_Dungeon = 1;
}
enum JumpType {
  JumpType_None = 0;
  JumpType_HttpJump = 1;
  JumpType_GameJump = 2;
}
enum WeatherType {
  WeatherType_Sunny = 0;
  WeatherType_Rainy = 1;
}
enum ForbiddenType {
  ForbiddenType_Muted = 0;
  ForbiddenType_SearchFriend = 1;
  ForbiddenType_AddFriend = 2;
  ForbiddenType_Silence = 3;
}
enum RedemptionCodeType {
  RedemptionCodeType_Text = 0;
  RedemptionCodeType_Random = 1;
}
enum ReportStatus {
  ReportStatus_NickNameViolation = 0;
  ReportStatus_ChatViolation = 1;
  ReportStatus_Advertisement = 2;
  ReportStatus_Fraud = 3;
  ReportStatus_ExternalPlugin = 4;
  ReportStatus_Sign = 5;
  ReportStatus_Other = 6;
  ReportStatus_Furniture = 7;
}
message PacketHead {
	uint32 packet_id = 1;
	uint32 msg_id = 2;
	uint32 flag = 3;
	uint32 body_len = 4;
	uint32 total_pack_count = 5;
	uint32 seq_id = 6;
}
message GenericParam {
	repeated int32 int32_s = 1;
	repeated uint32 uint32_s = 2;
	repeated int64 int64_s = 3;
	repeated uint64 uint64_s = 4;
	repeated string strings = 5;
	repeated float floats = 6;
	repeated double doubles = 7;
}
message Vector32 {
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
	uint32 decimal_places = 4;
}
message Vector42 {
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
	int32 w = 4;
	uint32 decimal_places = 5;
}
message ClientInfo {
	string lang = 1;
	string client_version = 2;
	string resource_version = 3;
	string device_uuid = 4;
	string device_model = 5;
	string analysis_distinct_id = 6;
	string network = 7;
	string ip = 8;
	string ipv6 = 9;
	string os_name = 10;
	string os_ver = 11;
}
message OperateCmdData {
	string trace_id = 1;
	OperateCmdType cmd_type = 2;
	string gm_code = 3;
	QuestionnaireCmdData questionnaire = 4;
	repeated TaskCmdData task_update_batch = 5;
}
message MailAttachment {
	repeated ItemDetail item_detail = 1;
	repeated BaseItem items = 2;
}
message MailData {
	uint32 mail_id = 1;
	MailState state = 2;
	MailType mail_type = 3;
	string sender = 4;
	MailContentType content_type = 5;
	uint32 model_id = 6;
	string title = 7;
	string content = 8;
	repeated string content_params = 9;
	MailAttachment attachment = 10;
	int64 send_time = 11;
	int64 expire_time = 12;
	uint32 keep_days = 13;
	int64 start_time = 14;
	int64 end_time = 15;
	uint32 condition_create_time = 16;
	repeated uint32 condition_channel = 17;
	repeated uint32 target_ids = 18;
	bool is_questionnaire = 19;
}
message RandomProperty {
	EPropertyType property_type = 1;
	uint32 value = 2;
}
message ItemDetail {
	ItemInfo main_item = 1;
	repeated ItemInfo transformed_item = 2;
	repeated ItemInfo extras = 3;
	PackType pack_type = 4;
	uint32 extra_quality = 5;
}
message ItemInfo {
	uint32 item_id = 1;
	EBagItemTag item_tag = 2;
	bool is_new = 3;
	uint32 temp_pack_index = 4;
	oneof ItemOneofCase {
		BaseItem base_item = 5;
		WeaponInstance weapon = 6;
		ArmorInstance armor = 7;
		PosterInstance poster = 8;
		Character character = 9;
		Outfit outfit = 10;
		Inscription inscription = 11;
	}
}
message BaseItem {
	uint32 item_id = 1;
	int64 num = 2;
}
message WeaponInstance {
	uint32 weapon_id = 1;
	uint32 instance_id = 2;
	uint32 attack = 3;
	uint32 damage_balance = 4;
	uint32 critical_ratio = 5;
	repeated RandomProperty random_property = 6;
	uint32 wearer_id = 7;
	uint32 level = 8;
	uint32 strength_level = 9;
	uint32 strength_exp = 10;
	uint32 star = 11;
	uint32 inscription1 = 12;
	uint32 durability = 13;
	uint32 property_index = 14;
	bool is_lock = 15;
}
message ArmorInstance {
	uint32 armor_id = 1;
	uint32 instance_id = 2;
	EPropertyType main_property_type = 3;
	uint32 main_property_val = 4;
	repeated RandomProperty random_property = 5;
	uint32 wearer_id = 6;
	uint32 level = 7;
	uint32 strength_level = 8;
	uint32 strength_exp = 9;
	uint32 property_index = 10;
	bool is_lock = 15;
}
message PosterInstance {
	uint32 poster_id = 1;
	uint32 instance_id = 2;
	uint32 wearer_id = 3;
	uint32 star = 4;
}
message PosterIllustration {
	uint32 poster_illustration_id = 1;
	RewardStatus status = 2;
}
message TempPack {
	uint32 max_size = 1;
	repeated ItemInfo item_infos = 2;
}
message LifeCommonResult {
	repeated ItemDetail result_items = 1;
	bool is_success = 2;
	LifeType life_type = 3;
	repeated BaseItem skill_return_items = 6;
	bool is_lucky_return = 7;
}
message LifeBaseInfo {
	LifeType life_type = 1;
	uint32 proficiency_value = 2;
	uint32 level = 3;
}
message LifeAchieve {
	LifeType life_type = 1;
	repeated Achieve life_achieve = 2;
	repeated uint32 rewarded_life_achieve_id_lst = 3;
}
message LifeProficiency {
	LifeType life_type = 1;
	uint32 proficiency_value = 2;
}
message LifeAchieveCount {
	uint32 id = 1;
	uint64 count = 2;
}
message LifeSkill {
	LifeType life_type = 1;
	repeated SingleLifeSkillInfo life_skill_info = 2;
}
message SingleLifeSkillInfo {
	uint32 skill_id = 1;
	uint32 lv = 2;
	int64 start_study_time = 3;
}
message PlayerAbility {
	uint32 ability_id = 1;
	uint32 level = 2;
}
message CharacterLevelInfo {
	uint32 character_id = 1;
	uint32 level = 2;
	uint32 exp = 3;
}
message Character {
	uint32 character_id = 1;
	uint32 level = 2;
	uint32 max_level = 3;
	uint32 exp = 4;
	uint32 star = 5;
	repeated EquipmentPreset equipment_presets = 6;
	uint32 in_use_equipment_preset_index = 7;
	repeated OutfitPreset outfit_presets = 8;
	uint32 in_use_outfit_preset_index = 9;
	uint32 gather_weapon = 10;
	CharacterAppearance character_appearance = 11;
	repeated CharacterSkill character_skill_list = 12;
	repeated uint32 rewarded_achievement_id_lst = 13;
	bool is_unlock_payment = 14;
	repeated uint32 reward_index_lst = 15;
}
message CharacterSkill {
	uint32 skill_id = 1;
	uint32 skill_level = 2;
}
message CharacterAchievement {
	uint32 achievement_id = 1;
	uint32 process = 2;
	AchievementStatus status = 3;
}
message EquipmentPreset {
	uint32 preset_index = 1;
	uint32 weapon = 2;
	repeated ArmorInfo armors = 3;
	repeated PosterInfo posters = 4;
}
message ArmorInfo {
	EEquipType equip_type = 1;
	uint32 armor_id = 2;
}
message PosterInfo {
	PosterIndex poster_index = 1;
	uint32 poster_id = 2;
}
message OutfitPreset {
	uint32 preset_index = 1;
	uint32 hat = 2;
	uint32 hair = 3;
	uint32 clothes = 4;
	uint32 ornament = 5;
	uint32 hat_dye_scheme_index = 6;
	uint32 hair_dye_scheme_index = 7;
	uint32 clothes_dye_scheme_index = 8;
	uint32 ornament_dye_scheme_index = 9;
}
message GachaInfo {
	uint32 gacha_id = 1;
	uint32 gacha_times = 2;
	bool has_full_pick = 3;
	bool is_free = 4;
	uint32 optional_up_item = 5;
	uint32 optional_value = 6;
}
message AbilityBadgePageInfo {
	uint32 page = 1;
	bool is_reward = 2;
	repeated uint32 active_box_ids = 3;
}
message Outfit {
	uint32 outfit_id = 1;
	repeated OutfitDyeScheme dye_schemes = 2;
}
message UnSaveOutfitDyeScheme {
	uint32 outfit_id = 1;
	PosColor color = 2;
	uint32 scheme_index = 3;
	uint32 pos = 4;
	uint32 dye_item_id = 5;
}
message OutfitDyeScheme {
	uint32 scheme_index = 1;
	repeated PosColor colors = 2;
	bool is_un_lock = 3;
}
message PosColor {
	uint32 pos = 1;
	uint32 red = 2;
	uint32 green = 3;
	uint32 blue = 4;
}
message OutfitDyeParam {
	uint32 picture_id = 1;
	repeated double params = 2;
	float uvy = 3;
	bool is_dye = 4;
}
message Team {
	uint32 char1 = 1;
	uint32 char2 = 2;
	uint32 char3 = 3;
}
message TeamRedis {
	int64 save_time = 1;
	Vector3 char1_pos = 2;
	Vector3 char1_rot = 3;
	Vector3 char2_pos = 4;
	Vector3 char2_rot = 5;
	Vector3 char3_pos = 6;
	Vector3 char3_rot = 7;
}
message FishingEventResult {
	uint32 cost_endurance = 1;
	repeated FishingEventMsg fishing_event_list = 2;
	uint32 cost_time = 3;
	repeated FishData fish_infos = 4;
}
message FishingEventMsg {
	uint32 id = 1;
	uint32 index = 2;
}
message FishData {
	uint32 id = 1;
	float length = 2;
}
message CharacterAppearance {
	uint32 badge = 1;
	uint32 umbrella_id = 2;
	uint32 insect_net_instance_id = 3;
	uint32 logging_axe_instance_id = 4;
	uint32 water_bottle_instance_id = 5;
	uint32 mining_hammer_instance_id = 6;
	uint32 collection_gloves_instance_id = 7;
	uint32 fishing_rod_instance_id = 8;
}
message SceneServerData {
	SceneActionType action_type = 1;
	ScenePlayer player = 2;
	uint32 tod_time = 3;
}
message Chapter {
	uint32 chapter_id = 1;
	repeated uint32 rewarded_story_ids = 2;
}
message DailyQuestBonus {
	uint32 bonus1_left = 1;
	uint32 bonus2_left = 2;
	uint32 bonus3_left = 3;
}
message RandomQuestBonus {
	uint32 bonus_left = 1;
}
message Quest {
	uint32 quest_id = 1;
	repeated Condition conditions = 2;
	QuestStatus status = 3;
	uint32 complete_count = 4;
	uint32 bonus_times = 5;
	uint32 activity_id = 6;
}
message Condition {
	uint32 condition_id = 1;
	uint32 progress = 2;
	QuestStatus status = 3;
}
message Statistics {
	EAchieveCondition condition_type = 1;
	uint32 param1 = 2;
	uint32 param2 = 3;
	uint64 count = 4;
}
message Achieve {
	uint32 achieve_id = 1;
	uint64 count = 2;
}
message ShopGrid {
	uint32 id = 1;
	uint32 grid_id = 2;
	uint32 pool_id = 3;
	uint32 pool_index = 4;
	uint32 buy_times = 5;
	int64 update_time = 6;
}
message Inscription {
	uint32 inscription_id = 1;
	uint32 level = 2;
	uint32 weapon_instance_id = 3;
}
message SceneData {
	uint32 scene_id = 1;
	repeated GatherLimit gather_limits = 3;
	repeated DropItem drop_items = 4;
	repeated AreaData areas = 5;
	repeated CollectionData collections = 6;
	repeated ChallengeData challenges = 7;
	repeated TreasureBoxData treasure_boxes = 8;
	repeated RiddleData riddles = 9;
	repeated MonsterData monsters = 10;
	repeated BattleEncounterData encounter_data = 11;
	repeated FlagBattleData flags = 12;
	repeated uint32 region_voices = 13;
	repeated Bonfire bon_fires = 14;
	SoccerPosition soccer_position = 15;
	repeated ChairInfo chair_info_list = 16;
	repeated DungeonData dungeons = 17;
	repeated uint32 flag_ids = 18;
	SceneGardenData scene_garden_data = 19;
	uint32 current_gather_group_id = 21;
	repeated ScenePlayer players = 22;
	uint32 channel_id = 23;
	uint32 tod_time = 24;
	repeated CampFire camp_fires = 25;
	WeatherType weather_type = 26;
	uint32 channel_label = 27;
	FireworksInfo fireworks_info = 28;
}
message ChatChannelData {
	uint32 channel_id = 1;
	uint32 player_size = 2;
}
message ChatData {
	uint32 channel_id = 1;
	repeated uint32 player_id = 2;
}
message SceneGardenData {
	map<int64, FurnitureDetailsInfo> garden_furniture_info_map = 1;
	int64 likes_num = 2;
	int64 access_player_num = 3;
	uint32 left_like_num = 4;
	string garden_name = 5;
	map<int64, uint32> furniture_player_map = 6;
	map<int64, sceneGardenOtherPlayerData> other_player_furniture_info_map = 7;
	uint32 furniture_current_point_num = 8;
}
message sceneGardenOtherPlayerData {
	uint32 player_id = 1;
	FurnitureDetailsInfo furniture_info = 2;
}
message SceneGardenPlayerData {
	repeated FurnitureDetailsInfo garden_furniture_info_list = 1;
}
message FurnitureDetailsInfo {
	int64 furniture_id = 1;
	uint32 furniture_item_id = 2;
	Vector3 pos = 3;
	Vector3 rotation = 4;
}
message GardenBaseInfo {
	int64 likes_num = 1;
	int64 access_num = 2;
	uint32 furniture_num = 3;
	uint32 furniture_limit_num = 4;
	bool is_open = 5;
}
message GatherLimit {
	uint32 gather_type = 1;
	uint32 gather_num = 2;
	uint32 gather_limit_num = 3;
	uint32 lucky_gather_limit_num = 4;
}
message AreaData_2 {
	uint32 area_id = 1;
	AreaState area_state = 2;
	uint32 level = 3;
	repeated BaseItem items = 4;
	enum AreaState {
  AreaState_Close = 0;
  AreaState_Unlock = 1;
}
}
message CollectionData {
	uint32 type = 1;
	map<uint32, PBCollectionRewardData> item_map = 2;
	uint32 level = 3;
	uint32 exp = 4;
}
message PBCollectionRewardData {
	uint32 item_id = 1;
	RewardStatus status = 2;
}
message ChallengeData {
	uint32 challenge_id = 1;
	uint32 use_time = 2;
	BattleState state = 3;
	uint32 star = 4;
}
message TreasureBoxData {
	uint32 index = 1;
	uint32 box_id = 2;
	ETreasureBoxType type = 3;
	TreasureBoxState state = 4;
	int64 next_refresh_time = 5;
	repeated ItemDetail rewards = 6;
}
message DynamicTreasureBoxData {
	uint32 index = 1;
	uint32 box_id = 2;
	ETreasureBoxType type = 3;
	repeated ItemDetail rewards = 4;
	uint32 max_quality = 5;
	TreasureBoxState state = 6;
	int64 open_time = 7;
}
message DynamicTreasureBoxBaseData {
	uint32 box_id = 1;
	uint32 index = 2;
	uint32 max_quality = 3;
}
message RiddleData {
	uint32 riddle_id = 1;
	bool is_win = 2;
	BattleState state = 3;
}
message MonsterData {
	uint32 monster_id = 1;
	uint32 monster_index = 2;
}
message BattleEncounterData {
	uint32 battle_id = 1;
	BattleState state = 2;
	uint32 box_id = 3;
}
message FlagBattleData {
	uint32 battle_id = 1;
	BattleState state = 2;
	EMissionType type = 3;
	uint32 finish_times = 4;
	uint32 voice_id = 5;
}
message FlagData {
	repeated FlagBattleData flag_battle_data_lst = 1;
}
message Bonfire {
	int32 id = 1;
	Vector3 position = 2;
	Vector3 rotation = 3;
	int64 player_id = 4;
}
message SyncSoccerData {
	Vector3 position = 1;
	Vector3 velocity = 2;
	Vector3 euler_angles = 3;
	Vector3 angular_velocity = 4;
}
message SoccerPosition {
	Vector3 position = 1;
}
message ChairInfo {
	int64 chair_id = 1;
	int32 seat_id = 2;
	uint32 player_id = 3;
}
message DungeonData {
	uint32 dungeon_id = 1;
	bool all_task_finished = 2;
	uint32 enter_times = 3;
	uint32 exit_times = 4;
	uint32 finish_times = 5;
	repeated uint32 coins = 6;
	int64 last_finish_time = 7;
	RewardStatus task_finish_reward = 8;
	RewardStatus star_reward = 9;
	repeated uint32 monsters = 10;
	uint32 char1 = 11;
	uint32 char2 = 12;
	uint32 char3 = 13;
	int64 last_enter_time = 14;
	Vector3 pos = 15;
	Vector3 rot = 16;
	bool is_open_secret_box = 17;
}
message TaskData {
	int32 index = 1;
	int32 process = 2;
}
message ScenePlayer {
	uint32 player_id = 1;
	string player_name = 2;
	SceneTeam team = 3;
	ScenePlayerActionStatus status = 4;
	repeated uint32 food_buff_ids = 5;
	repeated uint32 global_buff_ids = 6;
	bool is_birthday = 7;
}
message ScenePlayerActionStatus {
	uint32 id = 1;
	int64 value1 = 2;
	int64 value2 = 3;
	int64 value3 = 4;
}
message SceneTeam {
	SceneCharacter char1 = 1;
	SceneCharacter char2 = 2;
	SceneCharacter char3 = 3;
}
message SceneCharacter {
	uint32 char_id = 1;
	SceneCharacterOutfitPreset outfit_preset = 2;
	uint32 gather_weapon = 3;
	CharacterAppearance character_appearance = 4;
	Vector3 pos = 5;
	Vector3 rot = 6;
	uint32 weapon_id = 7;
	uint32 weapon_star = 8;
	uint32 char_lv = 9;
	uint32 char_star = 10;
	bool is_dead = 11;
	uint32 char_break_lv = 12;
	repeated BaseArmor armors = 13;
	uint32 inscription_id = 14;
	uint32 inscription_lv = 15;
	repeated BasePoster posters = 16;
}
message BaseArmor {
	uint32 armor_id = 1;
	uint32 armor_star = 2;
}
message BasePoster {
	uint32 poster_id = 1;
	uint32 poster_star = 2;
}
message SceneCharacterOutfitPreset {
	uint32 hat = 1;
	uint32 hair = 2;
	uint32 clothes = 3;
	uint32 ornament = 4;
	OutfitDyeScheme hat_dye_scheme = 5;
	OutfitDyeScheme hair_dye_scheme = 6;
	OutfitDyeScheme cloth_dye_scheme = 7;
	OutfitDyeScheme orn_dye_scheme = 8;
}
message PlayerFlagData {
	uint32 battle_id = 1;
	BattleState state = 2;
	uint32 treasure_box_id = 3;
	uint32 treasure_box_index = 4;
	EMissionType battle_type = 5;
	uint32 open_times = 6;
	uint32 finish_times = 7;
}
message PlayerFlagBattleData {
	uint32 battle_id = 1;
	BattleState state = 2;
	uint32 treasure_box_id = 3;
	uint32 treasure_box_index = 4;
	EMissionType battle_type = 5;
	uint32 open_times = 6;
	uint32 finish_times = 7;
	uint32 voice_id = 8;
}
message RollNotice {
	uint32 notice_id = 1;
	string context = 2;
	uint32 roll_interval = 3;
	int64 start_time = 4;
	int64 end_time = 5;
	int64 next_time = 6;
}
message PlayerShopInfo {
	uint32 shop_id = 1;
	repeated ShopGrid grids = 2;
}
message PlayerBriefInfo {
	uint32 player_id = 1;
	string nick_name = 2;
	uint32 level = 3;
	uint32 head = 4;
	int64 last_login_time = 5;
	uint32 team_leader_badge = 6;
	ESexType sex = 7;
	uint32 phone_background = 8;
	bool is_online = 9;
	string sign = 10;
	string guild_name = 11;
	uint32 character_id = 12;
	uint32 create_time = 13;
	uint32 player_label = 14;
	int64 garden_like_num = 15;
	int32 account_type = 16;
	string birthday = 17;
}
message PlayerExploreInfo {
	uint32 explore_id = 1;
	uint32 times = 2;
	int64 start_time = 3;
	bool is_quick_finish = 4;
	repeated uint32 collect_item_id = 6;
	bool collect_reward = 7;
}
message DropItem {
	uint32 index = 1;
	repeated ItemDetail items = 2;
}
message OneGroupAchieveInfo {
	uint32 group_id = 1;
	repeated uint32 rewarded_achieve_id_lst = 2;
	repeated Achieve achieve_lst = 3;
	repeated FinishAchieveInfo finish_achieve_lst = 4;
}
message FinishAchieveInfo {
	uint32 achieve_id = 1;
	int64 finish_time = 2;
}
message ManualFlag {
	uint32 flag_id = 1;
	RewardStatus status = 2;
	uint32 dungeon_task_finish_num = 3;
}
message NoticeData {
	int32 notice_id = 1;
	NoticeType type = 2;
	bool is_maintenance = 3;
	string title = 4;
	repeated NoticeContent content = 5;
	int64 start_time = 6;
	int64 end_time = 7;
	string image_url = 8;
	bool is_popup = 9;
	int64 last_upd_time = 10;
	int32 order_id = 11;
	bool priority = 12;
	string channel = 13;
	bool before_login_popup = 14;
	bool after_login_popup = 15;
	JumpType jump_type = 16;
	string jump_value = 17;
	int32 ori_notice_id = 18;
	repeated NoticeCondition condition = 19;
	int32 image_height = 20;
	bool refresh_red_point = 21;
}
message NoticeContent {
	int32 order_id = 1;
	string text = 2;
	string image_url = 3;
	string title = 4;
	string subtitle = 5;
	int32 image_height = 6;
	JumpType jump_type = 7;
	string jump_value = 8;
}
message NoticeCondition {
	int32 type = 1;
	int32 param1 = 2;
	int32 param2 = 3;
}
message SceneProcess {
	uint32 scene_id = 1;
	uint32 process = 2;
}
message PlayerBuff {
	BuffSystemType system_type = 1;
	repeated Buff buff_lst = 2;
}
message Buff {
	uint32 buff_id = 1;
	int64 end_time = 2;
}
message CampFire {
	Vector3 pos = 1;
	Vector3 rot = 2;
	uint32 id = 3;
	uint32 player_id = 4;
	int64 place_time = 5;
	uint32 action_id = 6;
}
message ChatMsgData {
	uint32 player_id = 1;
	uint32 head = 2;
	uint32 badge = 3;
	string name = 4;
	string text = 5;
	uint32 expression = 6;
	int64 send_time = 7;
}
message IntervalInfo {
	uint32 interval_id = 1;
	int64 finish_time = 2;
	uint32 player_id = 3;
	int64 create_time = 4;
	repeated FriendIntervalInfo member = 6;
}
message FriendIntervalInfo {
	uint32 player_id = 1;
	string nick_name = 2;
	uint32 head = 3;
	int64 join_time = 4;
	bool is_reward = 5;
}
message PlayerActivitySignIn {
	uint32 activity_id = 1;
	int64 open_time = 2;
	int64 close_time = 3;
	uint32 login_day = 4;
	uint32 reward_id = 5;
}
message PlayerActivityQuest {
	uint32 activity_id = 1;
	int64 open_time = 2;
	int64 close_time = 3;
	uint32 progress_reward = 4;
	repeated uint32 reward_achieve = 5;
	uint32 open_day = 6;
}
message PlayerGachaRecord {
	uint32 gacha_id = 1;
	uint32 item_id = 2;
	int64 gacha_time = 3;
}
message PlayerActivityRegular {
	uint32 activity_id = 1;
	int64 open_time = 2;
	int64 close_time = 3;
	repeated ActivityRegularAchieve daily_achieve = 4;
	repeated ActivityRegularAchieve pool_achieve = 5;
}
message ActivityRegularAchieve {
	uint32 achieve_id = 1;
	bool is_reward = 2;
}
message PlayerClapData {
	uint32 player_id = 1;
	Vector3 pos = 2;
	Vector3 forward = 3;
}
message ThrowDiceResult {
	uint32 dice_id = 1;
	uint32 pips = 2;
	string player_name = 3;
	DiceWonResult won_result = 4;
	uint32 player_id = 5;
}
message ThrowDiceResultListByZone {
	repeated ThrowDiceResult result_lst = 1;
}
message PrivateChatOffline {
	uint32 player_id = 1;
	string name = 2;
	uint32 head = 3;
	bool is_new_msg = 4;
}
message ForbiddenInfo {
	ForbiddenType forbidden_type = 1;
	int64 end_time = 2;
}
message SystemNoticeData {
	uint32 notice_id = 1;
	repeated string param = 2;
	uint32 scene_id = 3;
	uint32 channel_id = 4;
}
message PlayerDropRateInfo {
	uint32 kill_drop_rate = 1;
	uint32 treasure_drop_rate = 2;
}
message SavePrivateRecordData {
	string private_key = 1;
	uint32 make_player_id = 2;
	bytes records = 3;
}
message SavePrivateStatusData {
	string key = 1;
	uint32 make_player_id = 2;
	bytes records = 3;
}
message PrivateStatusList {
	repeated PrivateStatusData data = 1;
}
message PrivateStatusData {
	uint32 player_id = 1;
	bool is_new = 2;
}
message PrivateMsgChange {
	string private_chat_key = 1;
	string private_status_key = 2;
	uint32 mark_player_id = 3;
	uint32 target_player_id = 4;
}
message AbyssInfo {
	map<uint32, AbyssSeasonInfo> season_info = 1;
	uint32 player_id = 2;
}
message AbyssSeasonInfo {
	uint32 season_id = 1;
	map<uint32, AbyssDungeonInfo> dungeon_info = 2;
}
message AbyssDungeonInfo {
	uint32 dungeon_id = 1;
	repeated Team abyss_teams = 2;
	uint32 finish_time = 3;
}
message PayDeliverData {
	uint32 seq = 1;
	string order_id = 2;
	string source_order_id = 3;
	uint32 amount = 4;
	string goods_id = 5;
	string pay_time = 6;
	uint32 source = 7;
	uint32 create_time = 8;
	string pay_type = 9;
	string currency_type = 10;
}
message FireworksInfo {
	uint32 fireworks_id = 1;
	uint32 fireworks_duration_time = 2;
	int64 fireworks_start_time = 3;
}
message QuestionnaireGMData {
	uint32 gm_id = 1;
	string questionnaire_id = 2;
	string questionnaire_name = 3;
	string questionnaire_url = 4;
	int64 start_time = 5;
	int64 end_time = 6;
	MailData result_mail = 7;
	MailData enter_mail = 8;
	QuestionnaireTrigger triggers = 9;
	repeated uint32 target_ids = 10;
	repeated uint32 available_channels = 11;
}
message QuestionnaireTrigger {
	uint32 player_lv = 1;
	uint32 register_day = 2;
	uint32 quest_id = 3;
}
message QuestionnaireBrief {
	uint32 id = 1;
	string name = 2;
	string url = 3;
	int64 start_time = 4;
	int64 end_time = 5;
}
message QuestionnaireCmdData {
	uint32 id = 1;
	bool is_valid = 2;
}
message PlayerQuestionnaireInfo {
	repeated QuestionnaireBrief to_fill = 1;
}
message QuestionnaireMeta {
	uint32 gm_id = 1;
	uint32 player_id = 2;
}
message IntervalMember {
	uint32 player_id = 1;
	int64 join_time = 2;
	bool is_reward = 3;
}
message IntervalCacheInfo {
	uint32 player_id = 1;
	uint32 interval_id = 2;
	int64 finish_time = 3;
	int64 interval_expire_time = 4;
	int64 create_time = 5;
	bool is_finish = 6;
	map<uint32, IntervalMember> members = 7;
}
message RedemptionCodeData {
	string code = 1;
	RedemptionCodeType type = 2;
	uint32 use_frequency = 3;
	int64 start_time = 4;
	int64 end_time = 5;
	repeated uint32 channels = 6;
	repeated BaseItem items = 7;
}
message PlayerActivityBattlePass {
	uint32 activity_id = 1;
	int64 open_time = 2;
	int64 close_time = 3;
	repeated uint32 daily_achieve_reward_lst = 4;
	repeated uint32 weekly_achieve_reward_lst = 5;
	repeated uint32 season_achieve_reward_lst = 6;
	uint32 level = 7;
	uint32 total_exp = 8;
	uint32 week_exp = 9;
	bool has_buy = 10;
	repeated uint32 free_lv_reward_lst = 11;
	repeated uint32 payment_lv_reward_lst = 12;
	uint32 current_exp = 13;
}
message PlayerActivityGift {
	uint32 activity_id = 1;
	int64 open_time = 2;
	int64 close_time = 3;
	repeated uint32 rewarded_id_lst = 4;
	bool has_buy = 5;
}
message PlayerGardenLikeRecord {
	uint32 player_id = 1;
	int64 time = 3;
}
message ReportData {
	ReportStatus report_status = 1;
	ChatChannelType chat_channel = 2;
	uint32 reported_player_id = 3;
	string reported_role_name = 4;
	int32 reported_role_level = 5;
	string reason = 6;
	string chat_content = 7;
	uint32 player_id = 8;
	string player_name = 9;
	uint32 player_level = 10;
	int64 create_time = 11;
}
message PlayerActivityBase {
	uint32 activity_id = 1;
	int64 open_time = 2;
	int64 close_time = 3;
	EActivityType activity_type = 4;
}
message PlayerActivityInviteData {
	PlayerActivityBase base = 1;
	uint32 invited = 2;
	repeated uint32 rewarded_tasks = 3;
	uint32 invited_total = 4;
	string invite_code = 5;
	bool been_invited = 6;
}
message TaskCmdData {
	EAchieveCondition condition_type = 1;
	repeated uint32 params = 2;
	uint64 delta = 3;
}
enum ESexType {
  ESexType_None = 0;
  ESexType_Male = 1;
  ESexType_Female = 2;
}
enum EEquipType {
  EEquipType_Head = 0;
  EEquipType_Chest = 1;
  EEquipType_Hand = 2;
  EEquipType_Shoes = 3;
}
enum EPropertyType {
  EPropertyType_MaxHp = 0;
  EPropertyType_MaxHppercent = 1;
  EPropertyType_Attack = 2;
  EPropertyType_AttackPercent = 3;
  EPropertyType_DamageBalance = 4;
  EPropertyType_Defense = 5;
  EPropertyType_DefensePercent = 6;
  EPropertyType_CriticalRatio = 7;
  EPropertyType_CriticalDamagePercent = 8;
  EPropertyType_CriticalRatioDefendPercent = 9;
  EPropertyType_BreakDamagePercent = 10;
  EPropertyType_BreakDamageCriticalPercent = 11;
  EPropertyType_BreakDamageCounterPercent = 12;
  EPropertyType_BreakDamageDefendPercent = 13;
  EPropertyType_CounterDamagePercent = 14;
  EPropertyType_CounterDamageDefendPercent = 15;
  EPropertyType_ArmorBreaking = 16;
  EPropertyType_MeleeDefend = 17;
  EPropertyType_RemoteDefend = 18;
  EPropertyType_WindyDamage = 19;
  EPropertyType_FireDamage = 20;
  EPropertyType_WaterDamage = 21;
  EPropertyType_LightDamage = 22;
  EPropertyType_DarkDamage = 23;
  EPropertyType_WindyDefend = 24;
  EPropertyType_FireDefend = 25;
  EPropertyType_WaterDefend = 26;
  EPropertyType_LightDefend = 27;
  EPropertyType_DarkDefend = 28;
  EPropertyType_BlockRatio = 29;
  EPropertyType_BlockRatioDefendPercent = 30;
  EPropertyType_BreakingDamagePercent = 31;
  EPropertyType_ThunderDamage = 32;
  EPropertyType_ThunderDefend = 33;
  EPropertyType_RecoverPercent = 34;
  EPropertyType_ChoppingDamagePercent = 35;
  EPropertyType_StrikeDamagePercent = 36;
  EPropertyType_ShootingDamagePercent = 37;
  EPropertyType_MagicDamagePercent = 38;
  EPropertyType_ExtAttack = 39;
  EPropertyType_ExtDefense = 40;
  EPropertyType_ExtHp = 41;
  EPropertyType_None = 42;
  EPropertyType_DodgeReduceApPercent = 43;
  EPropertyType_SpellReduceApPercent = 44;
  EPropertyType_MaxCriticalRatio = 45;
}
enum EBagItemTag {
  EBagItemTag_None = 0;
  EBagItemTag_Gift = 1;
  EBagItemTag_Weapon = 2;
  EBagItemTag_Armor = 3;
  EBagItemTag_Fragment = 4;
  EBagItemTag_Poster = 5;
  EBagItemTag_Collection = 6;
  EBagItemTag_Card = 7;
  EBagItemTag_Material = 8;
  EBagItemTag_Currency = 9;
  EBagItemTag_Food = 10;
  EBagItemTag_SpellCard = 11;
  EBagItemTag_Item = 12;
  EBagItemTag_Fish = 13;
  EBagItemTag_Recipe = 14;
  EBagItemTag_Baitbox = 15;
  EBagItemTag_Quest = 16;
  EBagItemTag_Inscription = 17;
  EBagItemTag_StrengthStone = 18;
  EBagItemTag_ExpBook = 19;
  EBagItemTag_Head = 20;
  EBagItemTag_Fashion = 21;
  EBagItemTag_UnlockItem = 22;
  EBagItemTag_AbilityItem = 23;
  EBagItemTag_UnlockAbilityItem = 24;
  EBagItemTag_CharacterBadge = 25;
  EBagItemTag_DyeStuff = 26;
  EBagItemTag_PlayerExp = 27;
  EBagItemTag_WorldLevel = 28;
  EBagItemTag_Agentia = 29;
  EBagItemTag_MoonStone = 30;
  EBagItemTag_Umbrella = 31;
  EBagItemTag_Vitality = 32;
  EBagItemTag_Badge = 33;
  EBagItemTag_Furniture = 34;
  EBagItemTag_Energy = 35;
  EBagItemTag_ShowWeapon = 36;
  EBagItemTag_ShowArmor = 37;
  EBagItemTag_TeleportKey = 38;
  EBagItemTag_WallPaper = 39;
  EBagItemTag_Expression = 40;
  EBagItemTag_MoonCard = 41;
}
enum EMissionType {
  EMissionType_NormalBattle = 0;
  EMissionType_ScenicSpot = 1;
  EMissionType_DefenderBattle = 2;
  EMissionType_GuideBattle = 3;
  EMissionType_WeaponBattle = 4;
  EMissionType_Dungeon = 5;
  EMissionType_GatherBattle = 6;
  EMissionType_ResourceDungeon = 7;
  EMissionType_AbyssDungeon = 8;
  EMissionType_PracticeDungeon = 9;
  EMissionType_ActivityDungeon = 10;
  EMissionType_TopDungeon = 11;
  EMissionType_GatherDungeon = 12;
}
enum EWeaponSystemType {
  EWeaponSystemType_None = 0;
  EWeaponSystemType_Chopping = 1;
  EWeaponSystemType_Strike = 2;
  EWeaponSystemType_Shooting = 3;
  EWeaponSystemType_Magic = 4;
  EWeaponSystemType_Especially = 5;
  EWeaponSystemType_Life = 6;
  EWeaponSystemType_Riddle = 7;
}
enum EQuestType {
  EQuestType_None = 0;
  EQuestType_MainQuest = 1;
  EQuestType_SideQuest = 2;
  EQuestType_WorldQuest = 3;
  EQuestType_DailyQuest = 4;
  EQuestType_CyclicQuest = 5;
  EQuestType_DungeonQuest = 6;
  EQuestType_RandomEventQuest = 7;
  EQuestType_DelegateQuest = 8;
  EQuestType_ExtraQuest = 9;
}
enum ETreasureBoxType {
  ETreasureBoxType_None = 0;
  ETreasureBoxType_Normal = 1;
  ETreasureBoxType_Encounter = 2;
  ETreasureBoxType_Riddle = 3;
  ETreasureBoxType_Game = 4;
}
enum EAchieveCondition {
  EAchieveCondition_None = 0;
  EAchieveCondition_KillMonest = 1;
  EAchieveCondition_GetItem = 2;
  EAchieveCondition_OpenBox = 3;
  EAchieveCondition_FinishMission = 4;
  EAchieveCondition_FinishEncounter = 5;
  EAchieveCondition_DungeonPass = 6;
  EAchieveCondition_DungeonPerfectPass = 7;
  EAchieveCondition_RandomEvent = 8;
  EAchieveCondition_Talk = 9;
  EAchieveCondition_SubmitItem = 10;
  EAchieveCondition_Scenic = 11;
  EAchieveCondition_CollectFile = 12;
  EAchieveCondition_CollectItem = 13;
  EAchieveCondition_CollectBook = 14;
  EAchieveCondition_CollectTape = 15;
  EAchieveCondition_CollectPortal = 16;
  EAchieveCondition_CollectData = 17;
  EAchieveCondition_FinishChallenge = 18;
  EAchieveCondition_FinishRiddle = 19;
  EAchieveCondition_CookingNum01 = 20;
  EAchieveCondition_UseTypeCookingNum01 = 21;
  EAchieveCondition_CookingSuccessNum0 = 22;
  EAchieveCondition_CookingFailNum0 = 23;
  EAchieveCondition_AccumulativeCookingSkill01 = 24;
  EAchieveCondition_EatFoodCookingNum0 = 25;
  EAchieveCondition_FishingSuccess1 = 26;
  EAchieveCondition_FishingFail1 = 27;
  EAchieveCondition_FishingSpecialTimesNum12 = 28;
  EAchieveCondition_AccumulativeFishingSkill = 29;
  EAchieveCondition_FishingWhereTimesNum12 = 30;
  EAchieveCondition_FishingSizeTypeTimesNum12 = 31;
  EAchieveCondition_OpenDungeonBox = 32;
  EAchieveCondition_KillMonestType = 33;
  EAchieveCondition_GetDungeonCoin = 34;
  EAchieveCondition_CharacterLv = 35;
  EAchieveCondition_PlayerLv = 36;
  EAchieveCondition_QuestTalk = 37;
  EAchieveCondition_Gacha = 38;
  EAchieveCondition_GoSomeScene = 39;
  EAchieveCondition_MechanismInteraction = 40;
  EAchieveCondition_DungeonKillMonestType = 41;
  EAchieveCondition_DungeonKillMonest = 42;
  EAchieveCondition_AreaUlockNum = 43;
  EAchieveCondition_ItemNum = 44;
  EAchieveCondition_FinishTheEncounter = 45;
  EAchieveCondition_HandicraftSuccess1 = 46;
  EAchieveCondition_MakeSuccess1 = 47;
  EAchieveCondition_SpinSuccess1 = 48;
  EAchieveCondition_HandicraftProcess1 = 49;
  EAchieveCondition_MakeProcess1 = 50;
  EAchieveCondition_SpinProcess1 = 51;
  EAchieveCondition_AccumulativeHandicraftSkill = 52;
  EAchieveCondition_AccumulativeMakeSkill = 53;
  EAchieveCondition_AccumulativeSpinSkill = 54;
  EAchieveCondition_HandicraftNum01 = 55;
  EAchieveCondition_MakeNum01 = 56;
  EAchieveCondition_SpinNum01 = 57;
  EAchieveCondition_AbyssStar = 58;
  EAchieveCondition_AbyssStageClear = 59;
  EAchieveCondition_AbyssTime = 60;
  EAchieveCondition_CollectionGloves = 61;
  EAchieveCondition_LoggingAxe = 62;
  EAchieveCondition_MiningHammer = 63;
  EAchieveCondition_InsectNet = 64;
  EAchieveCondition_WaterBottle = 65;
  EAchieveCondition_Pick = 66;
  EAchieveCondition_CollectionGlovesGains = 67;
  EAchieveCondition_LoggingAxeGains = 68;
  EAchieveCondition_MiningHammerGains = 69;
  EAchieveCondition_InsectNetGains = 70;
  EAchieveCondition_WaterBottleGains = 71;
  EAchieveCondition_PickGains = 72;
  EAchieveCondition_Expression = 73;
  EAchieveCondition_Emotion = 74;
  EAchieveCondition_EatFood = 75;
  EAchieveCondition_CatchTheSea = 76;
  EAchieveCondition_PickingGarbage = 77;
  EAchieveCondition_GetItemBySourceTimes = 78;
  EAchieveCondition_MultipleCharacterLv = 79;
  EAchieveCondition_UseVitality = 80;
  EAchieveCondition_UseEnergy = 81;
  EAchieveCondition_LoginDays = 82;
  EAchieveCondition_ExploreNum = 83;
  EAchieveCondition_DailyQuestNum = 84;
  EAchieveCondition_UseGoldNum = 85;
  EAchieveCondition_KillMonsterNum = 86;
  EAchieveCondition_CharacterStar = 87;
  EAchieveCondition_CharacterVictory = 88;
  EAchieveCondition_CaptainVictory = 89;
  EAchieveCondition_CharacterLvBreak = 90;
  EAchieveCondition_CollectFile12 = 91;
  EAchieveCondition_CollectData12 = 92;
  EAchieveCondition_CollectTape12 = 93;
  EAchieveCondition_CollectBook12 = 94;
  EAchieveCondition_CollectCrystal12 = 95;
  EAchieveCondition_CollectScenic12 = 96;
  EAchieveCondition_CollectPhoto12 = 97;
  EAchieveCondition_CollectItem12 = 98;
  EAchieveCondition_CollectArea12 = 99;
  EAchieveCondition_CollectPortal12 = 100;
  EAchieveCondition_Challenge12 = 101;
  EAchieveCondition_Riddle12 = 102;
  EAchieveCondition_BattleEncounter12 = 103;
  EAchieveCondition_SideQuest12 = 104;
  EAchieveCondition_Dungeon12 = 105;
  EAchieveCondition_Monster12 = 106;
  EAchieveCondition_CollectionGloves12 = 107;
  EAchieveCondition_InsectNet12 = 108;
  EAchieveCondition_MiningHammer12 = 109;
  EAchieveCondition_LoggingAxe12 = 110;
  EAchieveCondition_WaterBottle12 = 111;
  EAchieveCondition_OnlineTime = 112;
  EAchieveCondition_SceneExplore = 113;
  EAchieveCondition_PayMoneyNum = 114;
  EAchieveCondition_FinishEncounter0 = 115;
  EAchieveCondition_FinishDungeon0 = 116;
  EAchieveCondition_FinishResourceDungeon0 = 117;
  EAchieveCondition_Riddle0 = 118;
  EAchieveCondition_OpenBox0 = 119;
  EAchieveCondition_CharacterStar01 = 120;
  EAchieveCondition_CharacterSkillUp0 = 121;
  EAchieveCondition_WearingEquip0 = 122;
  EAchieveCondition_StrengEquip0 = 123;
  EAchieveCondition_Decompose0 = 124;
  EAchieveCondition_MenuStone0 = 125;
  EAchieveCondition_Action01 = 126;
  EAchieveCondition_WearingFashing0 = 127;
  EAchieveCondition_SwitchCaptain0 = 128;
  EAchieveCondition_PlacingFurniture0 = 129;
  EAchieveCondition_OrientRiddle = 130;
  EAchieveCondition_CharacterDeath = 131;
  EAchieveCondition_SceneOrientChallenge = 132;
  EAchieveCondition_SceneOrientRiddle = 133;
  EAchieveCondition_CharacterBreakNum = 134;
  EAchieveCondition_NumberOfParticipants = 135;
  EAchieveCondition_CompleteAtask = 136;
  EAchieveCondition_CompleteAachievement = 137;
  EAchieveCondition_AbilityPromotion = 138;
  EAchieveCondition_ActivationArea = 139;
  EAchieveCondition_UpgradationArea = 140;
  EAchieveCondition_DeliveryPointNum = 141;
  EAchieveCondition_BeautifulScenicNum = 142;
  EAchieveCondition_CharacterAppearanceNum = 143;
  EAchieveCondition_AppearanceTypeNum = 144;
  EAchieveCondition_ChangeWeaponNum = 145;
  EAchieveCondition_SupplementPhysicalNum = 146;
  EAchieveCondition_SupplementEnergyNum = 147;
  EAchieveCondition_DisassembleArmorNum = 148;
  EAchieveCondition_StarUpArmorNum = 149;
  EAchieveCondition_DisassembleWeaponNum = 150;
  EAchieveCondition_StarUpWeaponNum = 151;
  EAchieveCondition_ActivationPackageAttributes = 152;
  EAchieveCondition_BuyCurrencyNum = 153;
  EAchieveCondition_CommissionedRewardsNum = 154;
  EAchieveCondition_WearPosterNum = 155;
  EAchieveCondition_ChangeChannelNum = 156;
  EAchieveCondition_OrdinarySkillsUpNum = 157;
  EAchieveCondition_HolyGrailUpNum = 158;
  EAchieveCondition_LifeSkillUpNum = 159;
  EAchieveCondition_PosterStarUpnum = 160;
  EAchieveCondition_PosterCollectRewardsNum = 161;
  EAchieveCondition_FinishSideQuestNum = 162;
  EAchieveCondition_LifeHandbookNum = 163;
  EAchieveCondition_FashionStainNum = 164;
  EAchieveCondition_UseInteractiveItemNum = 165;
  EAchieveCondition_ManualIdnum = 166;
  EAchieveCondition_OpenDungeonSpecialTypeTreasureBox = 167;
  EAchieveCondition_CookingNum = 168;
  EAchieveCondition_TotalPayMoneyNum = 169;
  EAchieveCondition_InviteTotal = 170;
  EAchieveCondition_InviteeReachLevel = 171;
  EAchieveCondition_InviteePay = 172;
  EAchieveCondition_Challenge0 = 173;
  EAchieveCondition_FinishChallenge01 = 174;
}
enum EActivityType {
  EActivityType_SevenDayQuest = 0;
  EActivityType_SevenDaySign = 1;
  EActivityType_ActivityGift = 2;
  EActivityType_BattlePass = 3;
  EActivityType_ActivityRegular = 4;
  EActivityType_ActivityOperating = 5;
  EActivityType_ActivityTurntable = 6;
  EActivityType_ActivityJigsaw = 7;
  EActivityType_Invite = 8;
}
enum MailOperateType {
  MailOperateType_None = 0;
  MailOperateType_Read = 1;
  MailOperateType_DeleteAllReaded = 3;
  MailOperateType_ClaimAll = 4;
  MailOperateType_Claim = 5;
}
enum TreasureBoxType {
  TreasureBoxType_Static = 0;
  TreasureBoxType_Dynamic = 1;
}
enum InterActionPushType {
  InterActionPushType_Default = 0;
  InterActionPushType_Immediately = 1;
  InterActionPushType_AddKeepingStatus = 2;
  InterActionPushType_RemovingStatus = 3;
}
enum ClientLogLevel {
  ClientLogLevel_Debug = 0;
  ClientLogLevel_Info = 1;
  ClientLogLevel_Warn = 2;
  ClientLogLevel_Error = 4;
  ClientLogLevel_Fatal = 5;
}
enum CommonParamType {
  CommonParamType_None = 0;
  CommonParamType_Int = 1;
  CommonParamType_Float = 2;
  CommonParamType_Double = 3;
  CommonParamType_Bool = 4;
  CommonParamType_String = 5;
}
message VerifyLoginTokenReq {
	uint32 account_type = 1;
	string sdk_uid = 2;
	string login_token = 3;
	string channel_code = 4;
	AccountOSType os = 5;
	string sdk_uid2 = 6;
	string login_token2 = 7;
	uint32 account_type2 = 8;
	AccountOSType os2 = 9;
	string device_uuid = 10;
}
message VerifyLoginTokenRsp {
	StatusCode status = 1;
	uint32 user_id = 2;
	uint32 account_type = 3;
	string sdk_uid = 4;
	bool is_server_open = 5;
	string text = 6;
	uint32 time_left = 7;
	AccountOSType os = 8;
	int64 ban_end_time = 9;
	string device_uuid = 10;
}
message PlayerLoginReq {
	string lang = 1;
	string client_version = 2;
	string resource_version = 3;
	string device_uuid = 4;
	string device_model = 5;
	string version_number = 6;
	string analysis_distinct_id = 7;
	uint32 force_scene_id = 8;
	bool is_reconnect = 9;
	string network = 10;
	string ip = 11;
	string ipv6 = 12;
	string os_name = 13;
	string os_ver = 14;
	uint32 client_seq_id = 15;
	uint32 server_seq_id = 16;
}
message PlayerLoginRsp {
	StatusCode status = 1;
	int64 server_time_ms = 2;
	string region_name = 3;
	uint32 register_time = 4;
	int32 player_age_range = 5;
	uint32 tags = 6;
	string analysis_account_id = 7;
	bool is_reconnect = 8;
	uint32 server_time_zone = 10;
	string player_name = 11;
	bool reconnect_success = 12;
	uint32 client_seq_id = 13;
	uint32 server_seq_id = 14;
	string client_log_server_token = 15;
	uint32 scene_id = 16;
	uint32 channel_id = 17;
}
message PlayerMainDataReq {
}
message PlayerMainDataRsp {
	StatusCode status = 1;
	uint32 player_id = 2;
	string player_name = 3;
	int64 player_time_offset = 4;
	bool is_today_first_login = 5;
	repeated uint32 unlock_functions = 6;
	uint32 level = 7;
	uint32 exp = 8;
	uint32 head = 9;
	string sign = 10;
	uint32 phone_background = 11;
	uint32 world_level = 12;
	uint32 create_time = 13;
	repeated Character characters = 14;
	Team team = 15;
	uint32 scene_id = 16;
	uint32 channel_id = 17;
	ESexType sex = 18;
	QuestDetail quest_detail = 19;
	repeated PlayerBuff player_buffs = 20;
	repeated uint32 reward_levels = 21;
	repeated ForbiddenInfo forbidden_infos = 22;
	UnSaveOutfitDyeScheme un_save_outfit_dye_scheme = 23;
	PlayerDropRateInfo player_drop_rate_info = 24;
	PlayerQuestionnaireInfo questionnaire_info = 25;
	uint32 player_label = 26;
	uint32 channel_label = 27;
	int64 month_card_over_due_time = 28;
	uint32 garden_likes_num = 29;
	repeated BaseItem furniture_item_info = 30;
	uint32 month_card_reward_days = 31;
	uint32 total_guarantee_dye_num = 32;
	string birthday = 33;
	bool is_hide_birthday = 34;
}
message PlayerPingReq {
	int64 client_time_ms = 1;
}
message PlayerPingRsp {
	StatusCode status = 1;
	int64 client_time_ms = 2;
	int64 server_time_ms = 3;
}
message PlayerOfflineReq {
}
message PlayerOfflineRsp {
	StatusCode status = 1;
	PlayerOfflineReason reason = 2;
	int64 server_next_open_time = 3;
}
message GmCodeReq {
	string param = 1;
}
message GmCodeRsp {
	StatusCode status = 1;
	string result = 2;
	repeated uint32 online_players = 3;
}
message SceneDataNotice {
	StatusCode status = 1;
	SceneData data = 2;
}
message NeedLoginNotice {
	StatusCode status = 1;
}
message CharacterSkillLevelUpReq {
	uint32 char_id = 1;
	uint32 skill_id = 2;
}
message CharacterSkillLevelUpRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	repeated ItemDetail items = 3;
	CharacterSkill skill = 4;
}
message CharacterStarUpReq {
	uint32 char_id = 1;
}
message CharacterStarUpRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	uint32 star = 3;
	repeated ItemDetail items = 4;
}
message CharacterLevelUpReq {
	uint32 char_id = 1;
	repeated int64 nums = 2;
}
message CharacterLevelUpRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	uint32 level = 3;
	uint32 exp = 4;
}
message CharacterLevelBreakReq {
	uint32 char_id = 1;
}
message CharacterLevelBreakRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	uint32 level = 3;
	uint32 exp = 4;
	uint32 max_level = 5;
}
message TeamCharExpUpdateNotice {
	StatusCode status = 1;
	repeated CharacterLevelInfo char_levels = 2;
}
message PlayerEnergyInfoReq {
}
message PlayerEnergyInfoRsp {
	StatusCode status = 1;
	uint32 energy_buy_num = 2;
	ItemDetail energy_item = 3;
}
message PlayerEnergyBuyReq {
}
message PlayerEnergyBuyRsp {
	StatusCode status = 1;
	uint32 energy_buy_num = 2;
	repeated ItemDetail items = 3;
}
message MailBriefData {
	uint32 mail_id = 1;
	uint32 model_id = 2;
	MailState mail_state = 3;
	string sender = 4;
	int64 send_time = 5;
	MailContentType content_type = 6;
	string title = 7;
	string content = 8;
	uint32 overdue_day = 9;
	repeated ItemDetail reward = 10;
	repeated BaseItem items = 11;
	bool is_questionnaire = 12;
}
message GetMailsReq {
}
message GetMailsRsp {
	StatusCode status = 1;
	repeated MailBriefData mails = 2;
}
message OperateMailsReq {
	MailOperateType operate_type = 1;
	uint32 mail_id = 2;
}
message OperateMailsRsp {
	StatusCode status = 1;
	repeated MailBriefData mails = 2;
	repeated ItemDetail claim_result = 3;
	repeated uint32 deleted_mail_ids = 4;
	MailOperateType operate_type = 5;
}
message ReceiveMailNotice {
	StatusCode status = 1;
	MailBriefData mail = 2;
	uint32 deleted_mail_id = 3;
}
message ChangeSceneChannelReq {
	uint32 scene_id = 1;
	uint32 channel_label = 2;
	Vector3 pos = 3;
	Vector3 rot = 4;
	bool not_in_scene = 5;
}
message ChangeSceneChannelRsp {
	StatusCode status = 1;
	uint32 scene_id = 2;
	uint32 channel_id = 3;
	uint32 channel_label = 4;
}
message PlayerSceneRecordReq {
	PlayerRecorderData data = 1;
}
message PlayerSceneRecordRsp {
	StatusCode status = 1;
}
message PlayerSceneSyncDataNotice {
	StatusCode status = 1;
	repeated SceneSyncData data = 2;
}
message SceneSyncData {
	uint32 player_id = 1;
	repeated PlayerRecorderData data = 2;
}
message ServerSceneSyncDataNotice {
	StatusCode status = 1;
	repeated ServerSceneSyncData data = 2;
}
message ServerSceneSyncData {
	uint32 player_id = 1;
	repeated SceneServerData server_data = 2;
}
message PlayerRecorderData {
	repeated CharacterRecorderData char_recorder_data_lst = 1;
	int64 ping = 2;
	repeated SyncFrameData frame_data = 3;
}
message CharacterRecorderData {
	uint32 char_id = 1;
	repeated SyncRecorderProperty data_lst = 2;
	Vector3 pos = 3;
	Vector3 rot = 4;
}
message SyncFrameData {
	uint32 id = 1;
	Vector3 position = 2;
	Vector3 velocity = 3;
	Vector3 euler_angles = 4;
	Vector3 angular_velocity = 5;
	uint32 state = 6;
	uint32 item_id = 7;
}
message SyncRecorderProperty {
	int32 sync_type = 1;
	int32 framestamp = 2;
	bool is_static = 3;
	bool force_move = 4;
	Vector3 pos = 5;
	Vector3 rot = 6;
	bool anime_is_grounded = 7;
	bool anime_is_looping = 8;
	bool anime_is_gliding = 9;
	bool anime_is_phone = 10;
	bool anime_is_death = 11;
	float anime_input_speed = 12;
	float anime_vertical_speed = 13;
	int32 command_type = 14;
	repeated int32 command_ints = 15;
	repeated float command_floats = 16;
	repeated Vector3 common_vector3_s = 17;
	repeated bool command_bools = 18;
}
message ChallengeStateUpdateReq {
	uint32 challenge_id = 1;
	BattleState battle_state = 2;
	uint32 use_time = 3;
}
message ChallengeStateUpdateRsp {
	StatusCode status = 1;
	ChallengeData challenge_data = 2;
	DynamicTreasureBoxBaseData dynamic_treasure_box_base_info = 3;
}
message SetArchiveInfoReq {
	string key = 1;
	string value = 2;
}
message SetArchiveInfoRsp {
	StatusCode status = 1;
	string key = 2;
	string value = 3;
}
message GetArchiveInfoReq {
	string key = 1;
}
message GetArchiveInfoRsp {
	StatusCode status = 1;
	string key = 2;
	string value = 3;
}
message RiddleStateUpdateReq {
	uint32 riddle_id = 1;
	BattleState battle_state = 2;
	bool is_win = 3;
}
message RiddleStateUpdateRsp {
	StatusCode status = 1;
	RiddleData riddle_data = 2;
	DynamicTreasureBoxBaseData dynamic_treasure_box_base_info = 3;
}
message FlagBattleStateUpdateReq {
	uint32 battle_id = 1;
	BattleState battle_state = 2;
	EMissionType mission_type = 3;
}
message FlagBattleStateUpdateRsp {
	StatusCode status = 1;
	FlagBattleData battle_data = 2;
	DynamicTreasureBoxBaseData dynamic_treasure_box_base_info = 3;
}
message BattleEncounterStateUpdateReq {
	uint32 encounter_id = 1;
	BattleState battle_state = 2;
}
message BattleEncounterStateUpdateRsp {
	StatusCode status = 1;
	BattleEncounterData encounter = 2;
	DynamicTreasureBoxBaseData dynamic_treasure_box_base_info = 3;
}
message BattleEncounterInfoReq {
	repeated uint32 encounter_ids = 1;
}
message BattleEncounterInfoRsp {
	StatusCode status = 1;
	repeated BattleEncounterData encounters = 2;
}
message DungeonRepeatEnterReq {
	uint32 char1 = 1;
	uint32 char2 = 2;
	uint32 char3 = 3;
}
message DungeonRepeatEnterRsp {
	StatusCode status = 1;
	SceneTeam team = 2;
	DungeonData dungeon_data = 3;
	repeated ItemDetail update_item = 4;
	repeated TreasureBoxData treasure_boxes = 5;
	uint32 current_gather_group_id = 6;
	repeated GatherLimit gather_limits = 7;
}
message DungeonViewReq {
	uint32 dungeon_id = 1;
}
message DungeonViewRsp {
	StatusCode status = 1;
	DungeonData dungeon_data = 2;
	repeated Achieve task_data_lst = 3;
}
message DungeonEnterReq {
	uint32 char1 = 1;
	uint32 char2 = 2;
	uint32 char3 = 3;
	uint32 dungeon_id = 4;
	uint32 cost_item_id = 5;
	Vector3 pos = 6;
	Vector3 rot = 7;
}
message DungeonEnterRsp {
	StatusCode status = 1;
	SceneTeam team = 2;
	DungeonData dungeon_data = 3;
	repeated ItemDetail update_item = 4;
	repeated TreasureBoxData treasure_boxes = 5;
	uint32 current_gather_group_id = 6;
	repeated GatherLimit gather_limits = 7;
}
message DungeonExitReq {
}
message DungeonExitRsp {
	StatusCode status = 1;
	uint32 scene_id = 2;
}
message DungeonFinishReq {
}
message DungeonFinishRsp {
	StatusCode status = 1;
	uint32 scene_id = 2;
	DungeonData dungeon_data = 3;
	repeated ItemDetail update_items = 4;
	repeated ItemDetail rewards = 5;
}
message CollectCoinReq {
	uint32 coin_index = 1;
}
message CollectCoinRsp {
	StatusCode status = 1;
	uint32 coin_index = 2;
}
message DungeonTaskFinishRewardReq {
	uint32 dungeon_id = 1;
}
message DungeonTaskFinishRewardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message DungeonStarRewardReq {
	uint32 dungeon_id = 1;
}
message DungeonStarRewardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message DungeonOperateReq {
	DungeonOperateType operate_type = 1;
}
message DungeonOperateRsp {
	StatusCode status = 1;
	uint64 consume_time = 2;
	uint32 star = 3;
}
message PlayerTimeOffsetNotice {
	StatusCode status = 1;
	int64 player_time_offset = 2;
	int64 server_real_time = 3;
}
message GetOneTypeLifePictorialBookCountReq {
	LifeType life_type = 1;
}
message GetOneTypeLifePictorialBookCountRsp {
	StatusCode status = 1;
	repeated LifeAchieveCount life_achieve_count_lst = 2;
}
message LifeProficiencyNotice {
	StatusCode status = 1;
	LifeProficiency life_proficiency = 2;
}
message GetLifeInfoReq {
	LifeType life_type = 1;
}
message GetLifeInfoRsp {
	StatusCode status = 1;
	LifeBaseInfo life_base_info = 2;
	LifeSkill life_skill = 3;
	LifeAchieve life_achieve = 4;
}
message FishingResultNotice {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
}
message LifeSkillLevelUpNotice {
	StatusCode status = 1;
	repeated LifeSkill life_skills = 2;
	repeated ItemDetail items = 3;
}
message LifeAchieveNotice {
	StatusCode status = 1;
	repeated LifeAchieve life_achieves = 2;
}
message CookingFoodReq {
	uint32 food_id = 1;
}
message CookingFoodRsp {
	StatusCode status = 1;
	LifeCommonResult life_common_result = 2;
}
message MakePropReq {
	uint32 make_id = 1;
}
message MakePropRsp {
	StatusCode status = 1;
	LifeCommonResult life_common_result = 2;
}
message HandicraftReq {
	uint32 handicraft_id = 1;
}
message HandicraftRsp {
	StatusCode status = 1;
	LifeCommonResult life_common_result = 2;
}
message SewingReq {
	uint32 sewing_id = 1;
}
message SewingRsp {
	StatusCode status = 1;
	LifeCommonResult life_common_result = 2;
}
message GetLifeAchievementRewardReq {
	uint32 achieve_id = 1;
	LifeType life_type = 2;
}
message GetLifeAchievementRewardRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	repeated uint32 rewarded_achieve_ids = 3;
}
message LifeLeveUpReq {
	LifeType life_type = 1;
}
message LifeLeveUpRsp {
	StatusCode status = 1;
	LifeBaseInfo life_base_info = 2;
}
message GetLifeAchieveReq {
	LifeType life_type = 1;
}
message GetLifeAchieveRsp {
	StatusCode status = 1;
	LifeAchieve life_achieve = 2;
}
message LifeSkillLevelUpReq {
	LifeType life_type = 1;
	uint32 skill_id = 2;
	bool is_force_study = 3;
}
message LifeSkillLevelUpRsp {
	StatusCode status = 1;
	LifeSkill life_skills = 2;
	repeated ItemDetail items = 3;
	bool is_force_study = 4;
}
message GetLifeSkillReq {
	LifeType life_type = 1;
}
message GetLifeSkillRsp {
	StatusCode status = 1;
	LifeType life_type = 2;
	repeated SingleLifeSkillInfo skill_info = 3;
}
message FishingReq {
	bool is_cancel = 1;
	uint32 fishing_box_id = 2;
	uint32 fishing_rod_id = 3;
	uint32 fishing_pond_id = 4;
}
message FishingRsp {
	StatusCode status = 1;
	bool is_cancel = 2;
	FishingEventResult fishing_event_result = 3;
}
message PackNotice {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	uint32 temp_pack_max_size = 3;
	bool is_clear_temp_pack = 4;
}
message GetWeaponReq {
	EWeaponSystemType weapon_system_type = 1;
	uint32 start_index = 2;
	uint32 end_index = 3;
}
message GetWeaponRsp {
	StatusCode status = 1;
	repeated WeaponInstance weapons = 2;
	uint32 total_num = 3;
	uint32 end_index = 4;
}
message GetArmorReq {
	EWeaponSystemType weapon_system_type = 1;
	uint32 start_index = 2;
	uint32 end_index = 3;
}
message GetArmorRsp {
	StatusCode status = 1;
	repeated ArmorInstance armors = 2;
	uint32 total_num = 3;
	uint32 end_index = 4;
}
message GetPosterReq {
	uint32 start_index = 1;
	uint32 end_index = 2;
}
message GetPosterRsp {
	StatusCode status = 1;
	repeated PosterInstance posters = 2;
	uint32 total_num = 3;
	uint32 end_index = 4;
}
message TempPackItemDropReq {
	uint32 index = 1;
}
message TempPackItemDropRsp {
	StatusCode status = 1;
	TempPack temp_pack = 2;
}
message TempPackItemStoreReq {
}
message TempPackItemStoreRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
}
message TempPackSortReq {
}
message TempPackSortRsp {
	StatusCode status = 1;
	TempPack temp_pack = 2;
}
message TempPackWearEquipReq {
	uint32 index = 1;
	uint32 char_id = 2;
}
message TempPackWearEquipRsp {
	StatusCode status = 1;
	TempPack temp_pack = 2;
}
message GetAllCharacterEquipReq {
}
message GetAllCharacterEquipRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
}
message CharacterEquipUpdateReq {
	uint32 char_id = 1;
	EquipmentPreset equipment_preset = 2;
}
message CharacterEquipUpdateRsp {
	StatusCode status = 1;
	repeated Character character = 2;
	repeated ItemDetail items = 3;
}
message CharacterEquipPresetSwitchReq {
	uint32 char_id = 1;
	uint32 preset_index = 2;
}
message CharacterEquipPresetSwitchRsp {
	StatusCode status = 1;
	uint32 preset_index = 2;
	repeated ItemDetail items = 3;
}
message PosterStarUpReq {
	uint32 poster_instance_id = 1;
	uint32 cost_poster_instance_id = 2;
}
message PosterStarUpRsp {
	StatusCode status = 1;
	uint32 poster_instance_id = 2;
	uint32 cost_poster_instance_id = 3;
	uint32 star = 4;
	Character character = 5;
}
message PosterIllustrationListReq {
}
message PosterIllustrationListRsp {
	StatusCode status = 1;
	repeated PosterIllustration poster_illustrations = 2;
}
message PosterIllustrationRewardReq {
	uint32 poster_illustration_id = 1;
}
message PosterIllustrationRewardRsp {
	StatusCode status = 1;
	PosterIllustration poster_illustration = 2;
	repeated ItemDetail items = 3;
}
message LockEquipReq {
	uint32 instance_id = 1;
	LockEquip_EquipType equip_type = 2;
}
message LockEquipRsp {
	StatusCode status = 1;
}
message PlayerTagUpdateNotice {
	StatusCode status = 1;
	uint32 tags = 2;
}
message GachaListReq {
}
message GachaListRsp {
	StatusCode status = 1;
	repeated GachaInfo gachas = 2;
}
message GachaReq {
	uint32 gacha_id = 1;
	bool is_single = 2;
}
message GachaRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	GachaInfo info = 3;
}
message GachaFullPickReq {
	uint32 gacha_id = 1;
	uint32 item_id = 2;
}
message GachaFullPickRsp {
	StatusCode status = 1;
	repeated ItemDetail item = 2;
}
message GachaRecordReq {
	uint32 gacha_id = 1;
	uint32 page = 2;
}
message GachaRecordRsp {
	StatusCode status = 1;
	uint32 gacha_id = 2;
	uint32 page = 3;
	uint32 total_page = 4;
	repeated PlayerGachaRecord records = 5;
}
message GamePlayRewardReq {
	uint32 reward_id = 1;
}
message GamePlayRewardRsp {
	StatusCode status = 1;
	DynamicTreasureBoxBaseData dynamic_treasure_box_info = 2;
	repeated ItemDetail items = 3;
}
message GetCharacterAchievementListReq {
	uint32 character_id = 1;
}
message GetCharacterAchievementListRsp {
	StatusCode status = 1;
	repeated Achieve character_achievement_lst = 2;
	repeated uint32 has_rewarded_ids = 3;
	bool is_unlocked_payment = 4;
	uint32 character_id = 5;
	repeated uint32 rewarded_id_lst = 6;
}
message GetCharacterAchievementAwardReq {
	uint32 character_id = 1;
	uint32 reward_index = 2;
}
message GetCharacterAchievementAwardRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	repeated uint32 rewarded_index_lst = 3;
	uint32 character_id = 4;
}
message GetCharacterAchievementUnlockPaymentReq {
	uint32 character_id = 1;
}
message GetCharacterAchievementUnlockPaymentRsp {
	StatusCode status = 1;
	repeated ItemDetail update_item = 2;
	bool is_unlock = 3;
	uint32 character_id = 4;
}
message GetCharacterAchievementBadgeAwardReq {
	uint32 character_id = 1;
	uint32 achievement_id = 2;
}
message GetCharacterAchievementBadgeAwardRsp {
	StatusCode status = 1;
	repeated ItemDetail update_items = 2;
	repeated Achieve achieves = 3;
	repeated uint32 rewarded_achievement_id_lst = 4;
}
message ChangeNickNameReq {
	string nick_name = 1;
	string birthday = 2;
}
message ChangeNickNameRsp {
	StatusCode status = 1;
	string nick_name = 2;
	repeated ItemDetail items = 3;
}
message ChangeSignReq {
	string sign = 1;
}
message ChangeSignRsp {
	StatusCode status = 1;
	string sign = 2;
}
message ChangeHeadReq {
	uint32 head = 1;
}
message ChangeHeadRsp {
	StatusCode status = 1;
	uint32 head = 2;
}
message ChangePhoneBackgroundReq {
	uint32 phone_background = 1;
}
message ChangePhoneBackgroundRsp {
	StatusCode status = 1;
	uint32 phone_background = 2;
}
message PlayerLevelExpNotice {
	StatusCode status = 1;
	uint32 level = 2;
	uint32 exp = 3;
}
message ChangePlayerSexReq {
	ESexType sex = 1;
}
message ChangePlayerSexRsp {
	StatusCode status = 1;
	ESexType sex = 2;
}
message WorldLevelAchieveListReq {
}
message WorldLevelAchieveListRsp {
	StatusCode status = 1;
	repeated Achieve achieves = 2;
	repeated uint32 unlock_world_levels = 3;
}
message UnlockWorldLevelReq {
	uint32 world_level = 1;
}
message UnlockWorldLevelRsp {
	StatusCode status = 1;
	uint32 world_level = 2;
}
message ChangeWorldLevelReq {
	uint32 world_level = 1;
}
message ChangeWorldLevelRsp {
	StatusCode status = 1;
	uint32 world_level = 2;
}
message UnlockHeadListReq {
}
message UnlockHeadListRsp {
	StatusCode status = 1;
	repeated uint32 heads = 2;
}
message PlayerLevelRewardReq {
	uint32 level = 1;
}
message PlayerLevelRewardRsp {
	StatusCode status = 1;
	uint32 level = 2;
	repeated ItemDetail items = 3;
}
message ForbiddenInfoNotice {
	StatusCode status = 1;
	ForbiddenInfo forbidden_info = 2;
}
message ClientIFIxGMNotice {
	StatusCode status = 1;
	string result = 2;
}
message SpeechRecyclingNotice {
	uint32 player_id = 1;
}
message FlagUnlockAddNotice {
	StatusCode status = 1;
	repeated uint32 flag_ids = 2;
}
message FlagUnLockRemoveNotice {
	StatusCode status = 1;
	repeated uint32 flag_ids = 2;
}
message TutorialReq {
	uint32 tutorial_id = 1;
	string tutorial_name = 2;
}
message TutorialRsp {
	StatusCode status = 1;
}
message PlayerUnlockFunctionNotice {
	StatusCode status = 1;
	repeated uint32 unlock_functions = 2;
}
message PlayerAbilityListReq {
}
message PlayerAbilityListRsp {
	StatusCode status = 1;
	repeated PlayerAbility ability_list = 2;
}
message PlayerAbilityLevelUpReq {
	uint32 ability_id = 1;
}
message PlayerAbilityLevelUpRsp {
	StatusCode status = 1;
	PlayerAbility ability = 2;
	repeated ItemDetail items = 3;
}
message PlayerAbilityUnlockNotice {
	StatusCode status = 1;
	uint32 ability_id = 2;
}
message PlayerVitalityReq {
}
message PlayerVitalityRsp {
	StatusCode status = 1;
	uint32 vitality_buy_num = 2;
	repeated ItemDetail items = 3;
}
message PlayerVitalityBuyReq {
}
message PlayerVitalityBuyRsp {
	StatusCode status = 1;
	uint32 vitality_buy_num = 2;
	repeated ItemDetail items = 3;
}
message AbilityBadgeListReq {
	uint32 scene_id = 1;
}
message AbilityBadgeListRsp {
	StatusCode status = 1;
	repeated AbilityBadgePageInfo ability_badge_pages = 2;
	repeated Achieve ability_badge_achieves = 3;
	repeated uint32 ability_badge_reward_achieve_ids = 4;
}
message AbilityBadgePageBoxActiveReq {
	uint32 page = 1;
	uint32 box_id = 2;
}
message AbilityBadgePageBoxActiveRsp {
	StatusCode status = 1;
	uint32 page = 2;
	uint32 box_id = 3;
	repeated ItemDetail items = 4;
}
message AbilityBadgePageRewardReq {
	uint32 page = 1;
}
message AbilityBadgePageRewardRsp {
	StatusCode status = 1;
	uint32 page = 2;
	repeated ItemDetail items = 3;
}
message AbilityBadgeAchieveRewardReq {
	repeated uint32 achieve_ids = 1;
}
message AbilityBadgeAchieveRewardRsp {
	StatusCode status = 1;
	repeated uint32 achieve_ids = 2;
	repeated ItemDetail items = 3;
}
message UpdateTeamReq {
	uint32 char1 = 1;
	uint32 char2 = 2;
	uint32 char3 = 3;
}
message UpdateTeamRsp {
	StatusCode status = 1;
}
message OutfitDyeUnlockIndexReq {
	uint32 outfit_id = 1;
	uint32 index = 2;
}
message OutfitDyeUnlockIndexRsp {
	StatusCode status = 1;
}
message OutfitDyeReq {
	uint32 outfit_id = 1;
	float uvy = 2;
	uint32 pos = 3;
	uint32 scheme_index = 4;
	uint32 add_rate_color_index = 5;
}
message OutfitDyeRsp {
	StatusCode status = 1;
	uint32 outfit_id = 2;
	PosColor pos_color = 3;
	uint32 total_guarantee_dye_num = 4;
}
message OutfitPresetUpdateNotice {
	StatusCode status = 1;
	repeated Character chars = 2;
}
message OutfitColorantSelectReq {
	uint32 outfit_id = 1;
	uint32 colorant_item_id = 2;
}
message OutfitColorantSelectRsp {
	StatusCode status = 1;
	OutfitDyeParam param = 2;
}
message OutfitRandomColorReq {
	uint32 outfit_id = 1;
	float uvy = 2;
}
message OutfitRandomColorRsp {
	StatusCode status = 1;
	uint32 outfit_id = 2;
	PosColor pos_color = 3;
}
message OutFitDyeSaveReq {
	uint32 outfit_id = 1;
	uint32 scheme_index = 2;
	uint32 pos = 3;
	bool is_save_dye_result = 4;
}
message OutFitDyeSaveRsp {
	StatusCode status = 1;
	uint32 scheme_index = 2;
	PosColor pos_color = 3;
	repeated ItemDetail items = 4;
	bool is_save_dye_result = 5;
}
message OutfitPresetUpdateReq {
	uint32 char_id = 1;
	OutfitPreset preset = 2;
}
message OutfitPresetUpdateRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	OutfitPreset preset = 3;
}
message OutfitPresetSwitchReq {
	uint32 char_id = 1;
	uint32 use_preset_index = 2;
}
message OutfitPresetSwitchRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	uint32 use_preset_index = 3;
}
message UpdateCharacterAppearanceReq {
	uint32 char_id = 1;
	CharacterAppearance appearance = 2;
}
message UpdateCharacterAppearanceRsp {
	StatusCode status = 1;
	uint32 char_id = 2;
	CharacterAppearance appearance = 3;
}
message CharacterAppearanceUpdateNotice {
	StatusCode status = 1;
	CharacterAppearance appearance = 2;
}
message ShopInfoReq {
	uint32 shop_id = 1;
}
message ShopInfoRsp {
	StatusCode status = 1;
	uint32 shop_id = 2;
	repeated ShopGrid grids = 3;
}
message ShopBuyReq {
	uint32 shop_id = 1;
	uint32 grid_id = 2;
	uint32 buy_times = 3;
}
message ShopBuyRsp {
	StatusCode status = 1;
	uint32 shop_id = 2;
	ShopGrid grids = 3;
	repeated ItemDetail items = 5;
}
message ShopRefreshNotice {
	StatusCode status = 1;
	uint32 shop_id = 2;
}
message PlaceFurnitureReq {
	uint32 furniture_item_id = 1;
	Vector3 pos = 2;
	Vector3 rot = 3;
}
message PlaceFurnitureRsp {
	StatusCode status = 1;
	FurnitureDetailsInfo furniture_details_info = 2;
}
message TakeOutFurnitureReq {
	int64 furniture_id = 1;
}
message TakeOutFurnitureRsp {
	StatusCode status = 1;
}
message GetGardenInfoReq {
}
message GetGardenInfoRsp {
	StatusCode status = 1;
	GardenBaseInfo garden_info = 2;
}
message SwitchGardenStatusReq {
	bool is_open = 1;
}
message SwitchGardenStatusRsp {
	StatusCode status = 1;
	bool is_open = 2;
}
message DoLikesReq {
}
message DoLikesRsp {
	StatusCode status = 1;
	uint32 left_like_nums = 2;
	int64 like_nums = 3;
}
message SceneGardenFurnitureUpdateNotice {
	StatusCode status = 1;
	FurnitureDetailsInfo furniture_info = 2;
}
message SceneGardenFurnitureRemoveNotice {
	StatusCode status = 1;
	int64 furniture_id = 2;
	uint32 item_id = 3;
	repeated ItemDetail update_items = 4;
}
message WeaponInscriptionInlaidReq {
	uint32 weapon_instance_id = 1;
	uint32 inscription_id = 2;
}
message WeaponInscriptionInlaidRsp {
	StatusCode status = 1;
	repeated WeaponInstance weapon_instances = 2;
	repeated Inscription inscriptions = 3;
	repeated ItemDetail items = 4;
}
message WeaponInscriptionRemoveReq {
	uint32 weapon_instance_id = 1;
}
message WeaponInscriptionRemoveRsp {
	StatusCode status = 1;
	uint32 weapon_instance_id = 2;
}
message ShopInitNotice {
	StatusCode status = 1;
	repeated PlayerShopInfo player_shop = 2;
}
message QuestDetail {
	repeated Chapter chapters = 1;
	DailyQuestBonus daily_quest_bonus_day_left = 2;
	DailyQuestBonus daily_quest_bonus_week_left = 3;
	RandomQuestBonus random_quest_bonus_left = 4;
	repeated Quest quests = 5;
}
message QuestNotice {
	StatusCode status = 1;
	repeated Quest quests = 2;
	DailyQuestBonus daily_quest_day_bonus_info = 3;
	RandomQuestBonus random_quest_bonus_info = 4;
}
message AchieveNotice {
	StatusCode status = 1;
	repeated Achieve achieves = 2;
}
message GmNotice {
	StatusCode status = 1;
	repeated string notice = 2;
}
message AcceptQuestReq {
	uint32 quest_id = 1;
	EQuestType quest_type = 2;
}
message AcceptQuestRsp {
	StatusCode status = 1;
	Quest quest = 2;
}
message ClaimQuestRewardReq {
	uint32 quest_id = 1;
	EQuestType quest_type = 2;
}
message ClaimQuestRewardRsp {
	StatusCode status = 1;
	Quest quest = 2;
	repeated ItemDetail items = 3;
	RandomQuestBonus random_quest_bonus = 4;
}
message FriendSearchReq {
	string search_args = 1;
}
message FriendSearchRsp {
	StatusCode status = 1;
	PlayerBriefInfo data = 2;
	FriendStatus friend_status = 3;
}
message FriendAddReq {
	uint32 player_id = 1;
}
message FriendAddRsp {
	StatusCode status = 1;
}
message FriendDelReq {
	uint32 player_id = 1;
}
message FriendDelRsp {
	StatusCode status = 1;
}
message FriendBlackReq {
	uint32 player_id = 1;
	bool is_remove = 2;
}
message FriendBlackRsp {
	StatusCode status = 1;
}
message FriendHandleReq {
	uint32 player_id = 1;
	bool is_agree = 2;
}
message FriendHandleRsp {
	StatusCode status = 1;
}
message FriendHandleNotice {
	StatusCode status = 1;
	FriendHandleType type = 2;
	uint32 target_player_id = 3;
}
message FriendReq {
	FriendListType type = 1;
}
message FriendRsp {
	StatusCode status = 1;
	repeated PlayerBriefInfo info = 2;
}
message CollectingReq {
	uint32 item_id = 1;
}
message CollectingRsp {
	StatusCode status = 1;
	repeated CollectionData collections = 2;
	repeated ItemDetail items = 3;
}
message CollectionRewardReq {
	uint32 item_id = 1;
}
message CollectionRewardRsp {
	StatusCode status = 1;
	PBCollectionRewardData collection_reward_data = 2;
	repeated ItemDetail items = 3;
}
message TreasureBoxOpenReq {
	TreasureBoxType box_type = 1;
	uint32 treasure_box_index = 2;
	TreasureBoxLocType loc_type = 3;
}
message TreasureBoxOpenRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	int64 next_refresh_time = 3;
}
message TreasureBoxPickupReq {
	TreasureBoxType box_type = 1;
	uint32 box_index = 2;
	int32 pick_index = 3;
	TreasureBoxLocType loc_type = 4;
}
message TreasureBoxPickupRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
}
message PickupReq {
	uint32 drop_item_index = 1;
	int32 pick_index = 2;
}
message PickupRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
}
message GatherItem {
	uint32 index = 1;
	int32 reward = 2;
	bool is_lucky = 3;
}
message GroupGatherLimit {
	uint32 gather_group_id = 1;
	GatherLimit gather_limit = 2;
}
message SceneGatherLimit {
	uint32 scene_id = 1;
	repeated GatherLimit gather_limits = 2;
}
message GatherReq {
	GatherItem gather_item = 1;
}
message GatherRsp {
	StatusCode status = 1;
	uint32 index = 2;
	repeated ItemDetail items = 3;
	GroupGatherLimit group_gather_limit = 4;
	SceneGatherLimit scene_gather_limit = 5;
	uint32 item_level = 6;
}
message GatherSceneLimitRecoveryNotice {
	StatusCode status = 1;
	repeated SceneGatherLimit scene_gather_limits = 2;
}
message GetAchieveGroupAwardReq {
	uint32 group_id = 1;
}
message GetAchieveGroupAwardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message GetAchieveGroupListReq {
}
message GetAchieveGroupListRsp {
	StatusCode status = 1;
	repeated uint32 rewarded_group_id_lst = 2;
}
message GetOneAchieveAwardReq {
	uint32 achieve_id = 1;
}
message GetOneAchieveAwardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message GetAchieveOneGroupReq {
	uint32 group_id = 1;
}
message GetAchieveOneGroupRsp {
	StatusCode status = 1;
	OneGroupAchieveInfo current_group_achieve_info = 2;
	bool is_reward = 3;
}
message AchieveFinishNotice {
	StatusCode status = 1;
	FinishAchieveInfo finish_info = 2;
}
message SceneSitChairReq {
	int64 chair_id = 1;
	int32 seat_id = 2;
	bool is_sit = 3;
}
message SceneSitChairRsp {
	StatusCode status = 1;
	uint32 player_id = 2;
	int64 chair_id = 3;
	int32 seat_id = 4;
	bool is_sit = 5;
}
message NpcTalkReq {
	uint32 id = 1;
	NpcTalkType talk_type = 2;
}
message NpcTalkRsp {
	StatusCode status = 1;
}
message ExploreInitReq {
}
message ExploreInitRsp {
	StatusCode status = 1;
	repeated PlayerExploreInfo explore = 2;
	repeated PlayerExploreInfo activity_explore = 3;
}
message ExploreReq {
	uint32 explore_id = 1;
	bool is_activity = 2;
}
message ExploreRsp {
	StatusCode status = 1;
	bool is_activity = 2;
	PlayerExploreInfo explore = 3;
}
message ExploreQuickFinishReq {
	uint32 explore_id = 1;
	bool is_activity = 2;
}
message ExploreQuickFinishRsp {
	StatusCode status = 1;
	bool is_activity = 2;
	PlayerExploreInfo explore = 3;
}
message ExploreRewardReq {
	uint32 explore_id = 1;
	bool is_activity = 2;
}
message ExploreRewardRsp {
	StatusCode status = 1;
	bool is_activity = 2;
	uint32 explore_id = 3;
	PlayerExploreInfo explore = 4;
	repeated ItemDetail reward_item = 5;
	uint32 interval_id = 7;
}
message ExploreCancelReq {
	uint32 explore_id = 1;
	bool is_activity = 2;
}
message ExploreCancelRsp {
	StatusCode status = 1;
	uint32 explore_id = 2;
	bool is_activity = 3;
	PlayerExploreInfo explore = 4;
}
message ExploreCollectRewardReq {
	uint32 explore_id = 1;
	bool is_activity = 2;
}
message ExploreCollectRewardRsp {
	StatusCode status = 1;
	bool is_activity = 2;
	uint32 explore_id = 3;
	PlayerExploreInfo explore = 4;
	repeated ItemDetail reward_item = 5;
}
message IntervalChangeNotice {
	StatusCode status = 1;
	uint32 player_id = 2;
	uint32 interval_id = 3;
	int64 finish_time = 4;
}
message IntervalStartReq {
}
message IntervalStartRsp {
	StatusCode status = 1;
	uint32 explore_id = 2;
	int64 finish_time = 3;
}
message IntervalJoinReq {
	uint32 friend_id = 1;
	string interval_param = 2;
}
message IntervalJoinRsp {
	StatusCode status = 1;
	string friend_id = 2;
	uint32 explore_id = 3;
	int64 finish_time = 4;
}
message IntervalQuickReq {
}
message IntervalQuickRsp {
	StatusCode status = 1;
	uint32 explore_id = 2;
	int64 finish_time = 3;
}
message IntervalRewardReq {
	uint32 friend_id = 1;
	string interval_param = 2;
}
message IntervalRewardRsp {
	StatusCode status = 1;
	uint32 friend_id = 2;
	uint32 explore_id = 3;
	repeated ItemDetail rewards = 4;
}
message FriendIntervalInitReq {
}
message FriendIntervalInitRsp {
	StatusCode status = 1;
	repeated IntervalInfo friend_infos = 2;
	repeated IntervalInfo join_infos = 3;
}
message SelfIntervalInitReq {
}
message SelfIntervalInitRsp {
	StatusCode status = 1;
	uint32 interval_id = 2;
	int64 end_time = 3;
	bool is_start = 4;
	IntervalInfo interval = 5;
}
message MonsterDeadReq {
	uint32 monster_id = 1;
	uint32 monster_index = 2;
}
message MonsterDeadRsp {
	StatusCode status = 1;
	uint32 monster_index = 2;
	DropItem drop_item = 3;
}
message ManualListReq {
}
message ManualListRsp {
	StatusCode status = 1;
	repeated ManualFlag flags = 2;
}
message ManualFlagUnlockReq {
	uint32 flag_id = 1;
}
message ManualFlagUnlockRsp {
	StatusCode status = 1;
	ManualFlag flag = 2;
}
message ManualFlagRewardReq {
	uint32 flag_id = 1;
}
message ManualFlagRewardRsp {
	StatusCode status = 1;
	ManualFlag flag = 2;
	repeated ItemDetail items = 3;
}
message SceneProcessListReq {
}
message SceneProcessListRsp {
	StatusCode status = 1;
	repeated SceneProcess scene_process_list = 2;
}
message PlayerBuffNotice {
	StatusCode status = 1;
	repeated PlayerBuff player_buffs = 2;
}
message SupplyBoxInfoReq {
}
message SupplyBoxInfoRsp {
	StatusCode status = 1;
	int64 next_reward_time = 2;
}
message SupplyBoxRewardReq {
}
message SupplyBoxRewardRsp {
	StatusCode status = 1;
	int64 next_reward_time = 2;
	repeated ItemDetail items = 3;
}
message AreaCloseReq {
	uint32 area_id = 1;
}
message AreaCloseRsp {
	StatusCode status = 1;
	AreaData area = 2;
}
message AreaUnlockReq {
	uint32 area_id = 1;
}
message AreaUnlockRsp {
	StatusCode status = 1;
	AreaData area = 2;
}
message AreaLevelUpReq {
	uint32 area_id = 1;
}
message AreaLevelUpRsp {
	StatusCode status = 1;
	AreaData area = 2;
	repeated ItemDetail items = 3;
	repeated Achieve achieves = 4;
}
message AreaAchieveListReq {
	uint32 area_id = 1;
}
message AreaAchieveListRsp {
	StatusCode status = 1;
	uint32 area_id = 2;
	repeated Achieve achieves = 3;
}
message PopEmojiNotice {
	StatusCode status = 1;
	uint32 emoji_id = 2;
	uint32 from_player_id = 3;
}
message PopEmojiReq {
	uint32 emoji_id = 1;
}
message PopEmojiRsp {
	StatusCode status = 1;
}
message PlaceCampFireReq {
	Vector3 pos = 1;
	Vector3 rot = 2;
	uint32 action_id = 3;
}
message PlaceCampFireRsp {
	StatusCode status = 1;
	CampFire camp_fire = 2;
}
message PlaceCampFireNotice {
	StatusCode status = 1;
	repeated CampFire camp_fires = 2;
}
message SceneWeatherChangeNotice {
	StatusCode status = 1;
	WeatherType weather_type = 2;
}
message SceneInterActionPlayStatusReq {
	ScenePlayerActionStatus action_status = 1;
	InterActionPushType push_type = 2;
}
message SceneInterActionPlayStatusRsp {
	StatusCode status = 1;
}
message SceneInterActionPlayStatusNotice {
	StatusCode status = 1;
	ScenePlayerActionStatus action_status = 2;
	InterActionPushType push_type = 3;
	uint32 player_id = 4;
}
message RemoveCampFireReq {
	uint32 camp_fire_id = 1;
}
message RemoveCampFireRsp {
	StatusCode status = 1;
}
message RemoveCampFireNotice {
	StatusCode status = 1;
	repeated uint32 camp_fire_id = 2;
}
message ChangeChatChannelReq {
	uint32 channel_id = 1;
}
message ChangeChatChannelRsp {
	StatusCode status = 1;
	uint32 channel_id = 2;
}
message SendChatMsgReq {
	ChatChannelType type = 1;
	uint32 player_id = 2;
	string text = 3;
	uint32 expression = 4;
}
message SendChatMsgRsp {
	StatusCode status = 1;
	string text = 2;
}
message ChatMsgNotice {
	StatusCode status = 1;
	ChatChannelType type = 2;
	ChatMsgData msg = 3;
}
message ChatMsgRecordInitNotice {
	StatusCode status = 1;
	ChatChannelType type = 2;
	repeated ChatMsgData msg = 3;
}
message ChatUnLockExpressionNotice {
	StatusCode status = 1;
	repeated uint32 expression_id = 2;
}
message CollectVoiceRegionReq {
	uint32 voice_id = 1;
}
message CollectVoiceRegionRsp {
	StatusCode status = 1;
	uint32 voice_id = 2;
}
message CharacterDeadReq {
	uint32 character_id = 1;
}
message CharacterDeadRsp {
	StatusCode status = 1;
}
message CharacterGatherWeaponUpdateReq {
	uint32 character_id = 1;
	uint32 weapon_id = 2;
}
message CharacterGatherWeaponUpdateRsp {
	StatusCode status = 1;
}
message EquipDisassembleReq {
	repeated uint32 weapon_ids = 1;
	repeated uint32 armor_ids = 2;
}
message EquipDisassembleRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	repeated Character character = 3;
	repeated uint32 weapon_ids = 4;
	repeated uint32 armor_ids = 5;
}
message ItemUseReq {
	uint32 item_id = 1;
	uint32 num = 2;
}
message ItemUseRsp {
	StatusCode status = 1;
	repeated ItemDetail items = 2;
	uint32 dungeon_id = 3;
}
message WeaponStrengthReq {
	uint32 weapon_instance_id = 1;
}
message WeaponStrengthRsp {
	StatusCode status = 1;
	uint32 weapon_instance_id = 2;
	uint32 strength_level = 3;
}
message ArmorStrengthReq {
	uint32 armor_instance_id = 2;
}
message ArmorStrengthRsp {
	StatusCode status = 1;
	uint32 armor_instance_id = 2;
	uint32 strength_level = 3;
}
message OtherPlayerInfoReq {
	uint32 player_id = 1;
}
message OtherPlayerInfoRsp {
	StatusCode status = 1;
	PlayerBriefInfo other_info = 2;
	FriendStatus friend_status = 3;
}
message SendActionReq {
	uint32 action_id = 1;
}
message SendActionRsp {
	StatusCode status = 1;
}
message SendActionNotice {
	StatusCode status = 1;
	uint32 action_id = 2;
	uint32 from_player_id = 3;
	string from_player_name = 4;
	bool is_study = 5;
	int64 end_time = 6;
}
message SendActionStudyNotice {
	StatusCode status = 1;
	uint32 action_id = 2;
	uint32 from_player_id = 3;
	string from_player_name = 4;
	int64 end_time = 5;
}
message ActivityChangeNotice {
	StatusCode status = 1;
	bool is_open = 2;
	repeated uint32 activity_id = 3;
}
message ActivitySignInDataNotice {
	StatusCode status = 1;
	repeated PlayerActivitySignIn info = 2;
}
message ActivitySignInReq {
	uint32 activity_id = 1;
	uint32 day = 2;
}
message ActivitySignInRsp {
	StatusCode status = 1;
	uint32 day = 2;
	uint32 reward_id = 3;
	repeated ItemDetail rewards = 4;
}
message PlayerNotInSceneChannelNotice {
	StatusCode status = 1;
	uint32 msg_id = 2;
	uint32 packet_id = 3;
}
message ActivityQuestDataNotice {
	StatusCode status = 1;
	repeated PlayerActivityQuest info = 2;
}
message ActivityQuestRewardReq {
	uint32 activity_id = 1;
	uint32 param = 2;
	bool is_progress = 3;
}
message ActivityQuestRewardRsp {
	StatusCode status = 1;
	uint32 param = 2;
	uint32 reward_id = 3;
	bool is_progress = 4;
	repeated ItemDetail rewards = 5;
}
message ActivityRegularDataNotice {
	StatusCode status = 1;
	repeated PlayerActivityRegular info = 2;
}
message ActivityRegularRewardReq {
	uint32 activity_id = 1;
	uint32 param = 2;
	uint32 pool_type = 3;
}
message ActivityRegularRewardRsp {
	StatusCode status = 1;
	uint32 param = 2;
	uint32 pool_type = 3;
	repeated ItemDetail rewards = 5;
}
message GetCollectItemIdsReq {
}
message GetCollectItemIdsRsp {
	StatusCode status = 1;
	repeated uint32 item_ids = 2;
}
message ClapReq {
	bool is_cancel = 1;
	Vector3 position = 2;
	Vector3 forward = 3;
	uint32 movement_id = 4;
}
message ClapRsp {
	StatusCode status = 1;
	uint32 movement_id = 2;
	bool is_cancel = 3;
}
message ClapResultNotice {
	StatusCode status = 1;
	repeated uint32 matched_player_id_lst = 2;
	uint32 movement_id = 3;
}
message ThrowDiceReq {
	uint32 dice_id = 1;
	Vector3 position = 2;
	uint32 pips = 3;
}
message ThrowDiceRsp {
	StatusCode status = 1;
}
message ThrowDiceNotice {
	StatusCode status = 1;
	Vector3 position = 2;
	uint32 pips = 3;
	string player_name = 4;
	uint32 dice_id = 5;
}
message ThrowDiceResultNotice {
	StatusCode status = 1;
	repeated ThrowDiceResultListByZone zone_result_lst = 2;
}
message AchieveActionUnLockNotice {
	StatusCode status = 1;
	repeated uint32 action_id_lst = 2;
	map<uint32, int64> study_action = 3;
}
message PrivateChatOfflineNotice {
	StatusCode status = 1;
	repeated PrivateChatOffline offline_msg = 2;
}
message PrivateChatMsgRecordReq {
	uint32 target_player_id = 1;
}
message PrivateChatMsgRecordRsp {
	StatusCode status = 1;
	repeated ChatMsgData msg_record = 2;
}
message SystemNotice {
	StatusCode status = 1;
	SystemNoticeData notice = 2;
}
message PlayerTiredDropNotice {
	StatusCode status = 1;
	PlayerDropRateInfo drop_rate_info = 2;
}
message NewQuestionnaireNotice {
	StatusCode status = 1;
	repeated QuestionnaireBrief list = 2;
}
message CreatePayOrderReq {
	uint32 shop_id = 1;
	uint32 grid_id = 2;
	string product_name = 3;
	string product_description = 4;
	string blibli_pc_sign_param = 5;
}
message CreatePayOrderRsp {
	StatusCode status = 1;
	string order_id = 2;
	string result_str = 3;
}
message PaySendGoodsNotice {
	StatusCode status = 1;
	uint32 shop_id = 2;
	ShopGrid grids = 3;
	string order_id = 5;
	repeated ItemDetail items = 6;
}
message AbyssSeasonNotice {
	StatusCode status = 1;
	uint32 in_progress_season_id = 2;
}
message AbyssInfoReq {
}
message AbyssInfoRsp {
	StatusCode status = 1;
	AbyssInfo abyss_info = 2;
	uint32 in_progress_season_id = 3;
}
message AbyssQuestRewardReq {
	uint32 season_id = 1;
	uint32 condition_id = 2;
}
message AbyssQuestRewardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message AbyssTeamUpdateReq {
	Team abyss_team = 1;
	uint32 dungeon_id = 2;
	uint32 team_index = 3;
}
message AbyssTeamUpdateRsp {
	StatusCode status = 1;
}
message AbyssTeamSwitchReq {
}
message AbyssTeamSwitchRsp {
	StatusCode status = 1;
	SceneTeam team = 2;
}
message AbyssFriendRankReq {
	uint32 season_id = 1;
}
message AbyssFriendRankInfo {
	PlayerBriefInfo player_info = 1;
	AbyssSeasonInfo abyss_info = 2;
}
message AbyssFriendRankRsp {
	StatusCode status = 1;
	repeated AbyssFriendRankInfo rank_list = 2;
}
message ActivityGiftRewardReq {
	uint32 activity_id = 1;
	uint32 achieve_id = 2;
}
message ActivityGiftRewardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message ActivityGiftDataNotice {
	StatusCode status = 1;
	repeated PlayerActivityGift info = 2;
	repeated Achieve quest_info_lst = 3;
}
message MonthCardNotice {
	StatusCode status = 1;
	int64 over_due_time = 2;
	bool is_reward_today = 3;
}
message CharacterBpBuyNotice {
	StatusCode status = 1;
	uint32 character_id = 2;
}
message ActivityBattlePassBuyNotice {
	StatusCode status = 1;
	uint32 activity_battle_pass_id = 2;
	uint32 battle_pass_lv = 3;
	uint32 total_exp = 4;
	uint32 current_exp = 5;
}
message ActivityBattlePassBuyExpReq {
	uint32 activity_battle_pass_id = 2;
}
message ActivityBattlePassBuyExpRsp {
	StatusCode status = 1;
	uint32 activity_battle_pass_id = 2;
	uint32 battle_pass_lv = 3;
	uint32 total_exp = 4;
	uint32 current_exp = 5;
}
message GetActivityBattlePassLevelRewardReq {
	uint32 activity_battle_pass_id = 2;
	uint32 level = 3;
	bool is_get_free_reward = 4;
}
message GetActivityBattlePassLevelRewardRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message GetActivityBattlePassQuestRewardReq {
	uint32 activity_battle_pass_id = 1;
	uint32 achieve_id = 2;
}
message GetActivityBattlePassQuestRewardRsp {
	StatusCode status = 1;
	uint32 add_exp = 2;
	uint32 current_lv = 3;
	uint32 current_week_exp = 4;
	uint32 current_total_exp = 5;
	uint32 current_exp = 6;
}
message ActivityBattlePassInfoNotice {
	StatusCode status = 1;
	repeated PlayerActivityBattlePass info = 2;
	repeated Achieve quest_info_lst = 3;
}
message ActivityGiftBuyNotice {
	StatusCode status = 1;
	uint32 activity_gift_id = 2;
}
message UseRedemptionCodeReq {
	string code = 1;
}
message UseRedemptionCodeRsp {
	StatusCode status = 1;
	string code = 2;
	repeated ItemDetail rewards = 3;
}
message FireworksStartNotice {
	StatusCode status = 1;
	FireworksInfo fireworks_info = 2;
}
message ReportReq {
	ReportStatus report_status = 1;
	ChatChannelType chat_channel = 2;
	uint32 reported_player_id = 3;
	string reported_role_name = 4;
	int32 reported_role_level = 5;
	string reason = 6;
	string chat_content = 7;
}
message ReportRsp {
	StatusCode status = 1;
}
message ClientLogAuthReq {
	uint32 player_id = 1;
	string log_server_token = 2;
	string device_id = 3;
	string os = 4;
	string os_version = 5;
	string app_version = 6;
	string network_type = 7;
	int64 game_launch_time = 8;
	string device_model = 9;
}
message ClientLogAuthRsp {
	StatusCode status = 1;
}
message ClientLogMessageReq {
	repeated ClientLogMessage logs = 1;
	repeated string remove_template_hash = 2;
}
message ClientLogMessage {
	uint32 client_log_seq_id = 1;
	string log_template = 2;
	string log_template_hash = 3;
	ClientLogLevel log_level = 4;
	int64 client_time_ms = 5;
	int32 channel = 6;
	repeated CommonParam params = 7;
}
message CommonParam {
	CommonParamType param_type = 1;
	int64 int_value = 2;
	float float_value = 3;
	double double_value = 4;
	bool bool_value = 5;
	string string_value = 6;
}
message ClientLogMessageRsp {
	StatusCode status = 1;
	repeated ClientLogMessage logs = 2;
	repeated string remove_template_hash = 3;
}
message GardenLikeRecordReq {
}
message GardenLikeRecordRsp {
	StatusCode status = 1;
	repeated GardenLikeRecordInfo record = 2;
}
message GardenLikeRecordInfo {
	uint32 player_id = 1;
	string name = 2;
	uint32 head = 3;
	uint32 like_num = 4;
	string sign = 5;
	uint32 team_leader_badge = 6;
}
message OptionalUpPoolItemReq {
	uint32 gacha_id = 1;
	uint32 poo_id = 2;
	uint32 item_id = 3;
}
message OptionalUpPoolItemRsp {
	StatusCode status = 1;
	GachaInfo info = 2;
}
message ActionStudyReq {
	uint32 player_id = 1;
	uint32 action_id = 2;
}
message ActionStudyRsp {
	StatusCode status = 1;
}
message ActionStudyNotice {
	StatusCode status = 1;
	uint32 player_id = 2;
	string name = 3;
	uint32 action_id = 4;
}
message CharacterReviveReq {
	uint32 character_id = 1;
}
message CharacterReviveRsp {
	StatusCode status = 1;
}
message QuestionnaireRemoveNotice {
	StatusCode status = 1;
	uint32 id = 2;
}
message ChangeChatChannelNotice {
	StatusCode status = 1;
	uint32 channel_id = 2;
}
message ActivityInviteNotice {
	StatusCode status = 1;
	repeated PlayerActivityInviteData info = 2;
}
message ActivityInviteRewardClaimReq {
	uint32 activity_id = 1;
	uint32 condition_id = 2;
}
message ActivityInviteRewardClaimRsp {
	StatusCode status = 1;
	uint32 activity_id = 2;
	uint32 condition_id = 3;
	repeated ItemDetail rewards = 4;
}
message InviteCodeUseReq {
	string code = 1;
}
message InviteCodeUseRsp {
	StatusCode status = 1;
	repeated ItemDetail rewards = 2;
}
message ActivityInviteCountUpdateNotice {
	StatusCode status = 1;
	uint32 invited_total = 2;
	map<uint32, uint32> invited_count = 3;
}
message AccountNameBindingCancelReq {
}
message AccountNameBindingCancelRsp {
	StatusCode status = 1;
	uint32 player_id = 2;
}
message GenericGameAReq {
	uint32 generic_msg_id = 1;
	repeated CommonParam params = 2;
}
message GenericGameARsp {
	StatusCode status = 1;
	uint32 generic_msg_id = 2;
	repeated CommonParam params = 3;
}
message GenericGameBReq {
	uint32 generic_msg_id = 1;
	repeated CommonParam params = 2;
}
message GenericGameBRsp {
	StatusCode status = 1;
	uint32 generic_msg_id = 2;
	repeated CommonParam params = 3;
}
message GenericSceneAReq {
	uint32 generic_msg_id = 1;
	repeated CommonParam params = 2;
}
message GenericSceneARsp {
	StatusCode status = 1;
	uint32 generic_msg_id = 2;
	repeated CommonParam params = 3;
}
message GenericSceneBReq {
	uint32 generic_msg_id = 1;
	repeated CommonParam params = 2;
}
message GenericSceneBRsp {
	StatusCode status = 1;
	uint32 generic_msg_id = 2;
	repeated CommonParam params = 3;
}
message MonthCardRewardReq {
}
message MonthCardRewardRsp {
	StatusCode status = 1;
	uint32 month_card_reward_days = 2;
}
message FurnitureItemChangeNotice {
	StatusCode status = 1;
	BaseItem furniture_item_info = 2;
}
message ChangeIsHideBirthdayReq {
}
message ChangeIsHideBirthdayRsp {
	StatusCode status = 1;
}
message TransmitSceneReq {
	uint32 friend_id = 1;
}
message TransmitSceneRsp {
	StatusCode status = 1;
	uint32 scene_id = 2;
	uint32 channel_id = 3;
}
message AllAbilityDatas {
	AbilityDatas ability = 1;
}
message AbilityDatas {
	repeated AbilityConfigure datas = 1;
}
message AbilityConfigure {
	int32 id = 1;
	int32 need_item_id = 2;
	repeated LevelInfo level_info = 3;
}
message LevelInfo {
	int32 level = 1;
	int32 cost_item_id = 2;
	int32 cost_count = 3;
	int32 reward_item_id = 4;
	int32 text_id = 5;
	int32 icon_id = 6;
}
message AllAbyssDatas {
	AbyssSeasonDatas abyss_season = 1;
	AbyssStageDatas abyss_stage = 2;
	SeasonAchieveDatas season_achieve = 3;
}
message AbyssSeasonDatas {
	repeated AbyssSeasonConfigure datas = 1;
}
message AbyssSeasonConfigure {
	int32 id = 1;
	string start_time = 2;
	string end_time = 3;
	int32 season_stage = 4;
	int32 season_achieve = 5;
	int32 npc_id = 6;
	int32 unlock_dungeon_id = 7;
}
message AbyssStageDatas {
	repeated AbyssStageConfigure datas = 1;
}
message AbyssStageConfigure {
	int32 id = 1;
	repeated AbyssStageGroupInfo abyss_stage_group_info = 2;
}
message AbyssStageGroupInfo {
	int32 text_id = 1;
	int32 icon_id = 2;
	int32 dungeon_id = 3;
	bool is_double_team = 4;
	int32 new_element_type1 = 5;
	int32 new_element_type2 = 6;
	int32 new_up_tag1 = 7;
	int32 new_up_tag2 = 8;
	int32 new_up_tag3 = 9;
	int32 new_up_tag4 = 10;
	int32 new_down_tag1 = 11;
	int32 new_down_tag2 = 12;
	int32 new_down_tag3 = 13;
	int32 new_down_tag4 = 14;
	int32 new_up_damage_type1 = 15;
	int32 new_up_damage_type2 = 16;
	int32 new_up_damage_type3 = 17;
	int32 new_up_damage_type4 = 18;
	int32 new_down_damage_type1 = 19;
	int32 new_down_damage_type2 = 20;
	int32 new_down_damage_type3 = 21;
	int32 new_down_damage_type4 = 22;
}
message SeasonAchieveDatas {
	repeated SeasonAchieveConfigure datas = 1;
}
message SeasonAchieveConfigure {
	int32 id = 1;
	repeated SeasonAchieveGroupInfo season_achieve_group_info = 2;
}
message SeasonAchieveGroupInfo {
	int32 achieve_id = 1;
	int32 reward_id = 2;
	int32 icon_id = 3;
}
message AllAchieveDatas {
	AchieveDatas achieve = 1;
}
message AchieveDatas {
	repeated AchieveConfigure datas = 1;
}
message AchieveConfigure {
	int32 id = 1;
	repeated int32 param = 2;
	int32 count_param = 3;
	int32 unlock_condition_content_id = 4;
	int32 new_achieve_condition = 5;
	int32 new_function_of_achievement = 6;
}
message AllAchieveQuestDatas {
	AchieveQuestDatas achieve_quest = 1;
	AchieveQuestGroupDatas achieve_quest_group = 2;
}
message AchieveQuestDatas {
	repeated AchieveQuestConfigure datas = 1;
}
message AchieveQuestConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 achieve_group_id = 4;
	int32 reward_id = 5;
}
message AchieveQuestGroupDatas {
	repeated AchieveQuestGroupConfigure datas = 1;
}
message AchieveQuestGroupConfigure {
	int32 id = 1;
	repeated AchieveQuestGroupInfo achieve_quest_group_info = 2;
}
message AchieveQuestGroupInfo {
	int32 group_id = 1;
	int32 achieve_condition_id = 2;
	int32 text_id = 3;
	int32 reward_id = 4;
}
message AllActionDatas {
	ActionInfoDatas action_info = 1;
}
message ActionInfoDatas {
	repeated ActionInfoConfigure datas = 1;
}
message ActionInfoConfigure {
	int32 id = 1;
	string anim_prefab = 2;
	int32 new_action_type = 3;
}
message AllActivityDatas {
	ActivityDatas activity = 1;
}
message ActivityDatas {
	repeated ActivityConfigure datas = 1;
}
message ActivityConfigure {
	int32 id = 1;
	string announced_time = 2;
	string opening_time = 3;
	string closing_time = 4;
	string photo_url = 5;
	string pc_url = 6;
	int32 text_id = 7;
	int32 icon_id = 8;
	int32 index = 9;
	repeated ActivityMapMomentsItem moments = 10;
	int32 quest_id = 11;
	int32 dialog_id = 12;
	int32 activity_id = 13;
	int32 new_activity_type = 14;
}
message ActivityMapMomentsItem {
	string opening_moment = 1;
	string closing_moment = 2;
}
message AllActivityGiftDatas {
	ActivityGiftDatas activity_gift = 1;
}
message ActivityGiftDatas {
	repeated ActivityGiftConfigure datas = 1;
}
message ActivityGiftConfigure {
	int32 id = 1;
	int32 shop_id = 2;
	repeated ActivityGiftItems activity_gift_item = 3;
}
message ActivityGiftItems {
	int32 achieve_id = 1;
	repeated AActivityGiftRewardItems a_activity_gift_reward_item = 2;
}
message AActivityGiftRewardItems {
	int32 item_id = 1;
	int32 item_num = 2;
}
message AllActivityInviteDatas {
	ActivityInviteDatas activity_invite = 1;
	ActivityInviteQuestDatas activity_invite_quest = 2;
}
message ActivityInviteDatas {
	repeated ActivityInviteConfigure datas = 1;
}
message ActivityInviteConfigure {
	int32 id = 1;
	int32 invitor_quest_group = 2;
	repeated ActivityInviteItem activity_invite_item = 3;
}
message ActivityInviteItem {
	int32 item_id = 1;
	int32 item_num = 2;
}
message ActivityInviteQuestDatas {
	repeated ActivityInviteQuestConfigure datas = 1;
}
message ActivityInviteQuestConfigure {
	int32 id = 1;
	repeated ActivityInvitePoolItems activity_invite_quest_pool_item = 2;
}
message ActivityInvitePoolItems {
	int32 achieve_id = 1;
	int32 complete_id = 2;
	repeated ActivityInvitePoolRewardItems activity_invite_pool_reward_item = 3;
}
message ActivityInvitePoolRewardItems {
	int32 item_id = 1;
	int32 item_num = 2;
}
message AllActivityQuestDatas {
	ActivityQuestDatas activity_quest = 1;
	ActivityQuestRewardDatas activity_quest_reward = 2;
}
message ActivityQuestDatas {
	repeated ActivityQuestConfigure datas = 1;
}
message ActivityQuestConfigure {
	int32 id = 1;
	int32 activity_quest_reward_id = 2;
	repeated ActivityQuestAchieveItem activity_quest_achieve_items = 3;
}
message ActivityQuestAchieveItem {
	int32 days = 1;
	int32 achieve_id = 2;
	repeated ActivityQuestItems activity_quest_item = 3;
}
message ActivityQuestItems {
	int32 item_id = 1;
	int32 item_num = 2;
}
message ActivityQuestRewardDatas {
	repeated ActivityQuestRewardConfigure datas = 1;
}
message ActivityQuestRewardConfigure {
	int32 id = 1;
	repeated ActivityQuestRewardItems activity_quest_reward_item = 2;
}
message ActivityQuestRewardItems {
	int32 index = 1;
	int32 condition_item_id = 2;
	int32 condition_item_num = 3;
	int32 reward_item_id = 4;
	int32 reward_item_num = 5;
}
message AllActivityRegularDatas {
	ActivityRegularDatas activity_regular = 1;
	ActivityRegularPoolDatas activity_regular_pool = 2;
}
message ActivityRegularDatas {
	repeated ActivityRegularConfigure datas = 1;
}
message ActivityRegularConfigure {
	int32 id = 1;
	int32 daily_pool_id = 2;
	int32 random_pool_id = 3;
	int32 pool_id = 4;
	int32 npcid = 5;
	int32 npc_shop_id = 6;
}
message ActivityRegularPoolDatas {
	repeated ActivityRegularPoolConfigure datas = 1;
}
message ActivityRegularPoolConfigure {
	int32 id = 1;
	repeated ActivityRegularPoolItems activity_regular_pool_item = 2;
}
message ActivityRegularPoolItems {
	int32 achieve_id = 1;
	repeated ActivityRegularPoolRewardItems activity_regular_pool_reward_item = 2;
}
message ActivityRegularPoolRewardItems {
	int32 item_id = 1;
	int32 item_num = 2;
}
message AllActivitySignDatas {
	ActivitySignDatas activity_sign = 1;
}
message ActivitySignDatas {
	repeated ActivitySignConfigure datas = 1;
}
message ActivitySignConfigure {
	int32 id = 1;
	repeated ActivitySignItems activity_sign_item = 2;
}
message ActivitySignItems {
	int32 days = 1;
	repeated ActivitySignRewardItems activity_sign_reward_item = 2;
}
message ActivitySignRewardItems {
	int32 item_id = 1;
	int32 item_num = 2;
}
message AllActivityTurntableDatas {
	ActivityTurntableDatas activity_turntable = 1;
	TurntablePoolDatas turntable_pool = 2;
	TurntableRewardDatas turntable_reward = 3;
}
message ActivityTurntableDatas {
	repeated ActivityTurntableConfigure datas = 1;
}
message ActivityTurntableConfigure {
	int32 id = 1;
	int32 daily_reward_item_id = 2;
	int32 daily_reward_item_num = 3;
	int32 item_id = 4;
	int32 one_need_item_num = 5;
	int32 ten_need_item_num = 6;
	int32 turntable_reward_id = 7;
	repeated TurntableItems turntable_item = 8;
}
message TurntableItems {
	int32 index = 1;
	int32 turntable_pool_id = 2;
	int32 turntable_max_num = 3;
}
message TurntablePoolDatas {
	repeated TurntablePoolConfigure datas = 1;
}
message TurntablePoolConfigure {
	int32 id = 1;
	repeated TurntablePoolItems turntable_pool_item = 2;
}
message TurntablePoolItems {
	int32 index = 1;
	int32 item_id = 2;
	int32 item_num = 3;
	int32 limit_num = 4;
	int32 weight = 5;
}
message TurntableRewardDatas {
	repeated TurntableRewardConfigure datas = 1;
}
message TurntableRewardConfigure {
	int32 id = 1;
	int32 finish_item_id = 2;
	int32 finish_item_num = 3;
	repeated TurntableRewardPoolItems turntable_reward_pool_item = 4;
}
message TurntableRewardPoolItems {
	int32 index = 1;
	int32 num = 2;
	int32 reward_item_id = 3;
	int32 reward_item_num = 4;
}
message AllAreaDatas {
	AreaDataDatas area_data = 1;
	AreaVoiceDatas area_voice = 2;
	AreaLevelDataDatas area_level_data = 3;
	AreaMissionDataDatas area_mission_data = 4;
	AreaUnlockDataDatas area_unlock_data = 5;
	AreaRelationDataDatas area_relation_data = 6;
}
message AreaDataDatas {
	repeated AreaDataConfigure datas = 1;
}
message AreaDataConfigure {
	int32 id = 1;
	repeated AreaData area_data_group = 2;
}
message AreaData {
	int32 area_id = 1;
	int32 unlock_pool_id = 2;
	int32 relevance_pool_id = 3;
	int32 text_id = 4;
	int32 area_level_id = 5;
}
message AreaVoiceDatas {
	repeated AreaVoiceConfigure datas = 1;
}
message AreaVoiceConfigure {
	int32 id = 1;
	repeated AreaVoice area_voice_group = 2;
}
message AreaVoice {
	int32 index = 1;
	int32 near_voice = 2;
	int32 activation_voice = 3;
}
message AreaLevelDataDatas {
	repeated AreaLevelDataConfigure datas = 1;
}
message AreaLevelDataConfigure {
	int32 id = 1;
	repeated AreaLevelData area_level_data_group = 2;
}
message AreaLevelData {
	int32 level = 1;
	int32 passive_id = 2;
	int32 mission_pool_id = 3;
}
message AreaMissionDataDatas {
	repeated AreaMissionDataConfigure datas = 1;
}
message AreaMissionDataConfigure {
	int32 id = 1;
	repeated AreaMissionData area_mission_data_group = 2;
}
message AreaMissionData {
	int32 achieve_condition_id = 1;
}
message AreaUnlockDataDatas {
	repeated AreaUnlockDataConfigure datas = 1;
}
message AreaUnlockDataConfigure {
	int32 id = 1;
	int32 unlock = 2;
	repeated AreaUnlockData area_unlock_data_group = 3;
}
message AreaUnlockData {
	int32 index = 1;
	int32 flag_id = 2;
	int32 battle_encounter_id = 3;
	int32 collect_file_id = 4;
	int32 collect_item_id = 5;
	int32 collect_book_id = 6;
	int32 collect_tape_id = 7;
	int32 collect_portal_id = 8;
	int32 collect_data_id = 9;
	int32 challenge_id = 10;
	int32 riddle_id = 11;
}
message AreaRelationDataDatas {
	repeated AreaRelationDataConfigure datas = 1;
}
message AreaRelationDataConfigure {
	int32 id = 1;
	int32 unlock = 2;
	repeated AreaRelationData area_relation_data_group = 3;
}
message AreaRelationData {
	int32 index = 1;
	int32 scenic_id = 2;
	int32 battle_normal_id = 3;
	int32 battle_guide_id = 4;
	int32 battle_weapon_id = 5;
	int32 battle_gather_id = 6;
	int32 collect_file_id = 7;
	int32 collect_item_id = 8;
	int32 collect_book_id = 9;
	int32 collect_tape_id = 10;
	int32 collect_portal_id = 11;
	int32 collect_data_id = 12;
	int32 challenge_id = 13;
	int32 riddle_id = 14;
}
message AllArmorDatas {
	ArmorDatas armor = 1;
	ArmorPropertyDatas armor_property = 2;
	ArmorDisassembleDatas armor_disassemble = 3;
	ArmorStrengthenDatas armor_strengthen = 4;
	ArmorRandomPropertyDatas armor_random_property = 5;
	ArmorRandomValueDatas armor_random_value = 6;
}
message ArmorDatas {
	repeated ArmorConfigure datas = 1;
}
message ArmorConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 armor_property_id = 3;
	int32 base_score = 4;
	int32 suit_index = 5;
	int32 suit_id2 = 6;
	int32 suit_id3 = 7;
	repeated int32 passive_spell_i_ds = 8;
	int32 new_weapon_system_type = 9;
	int32 new_equip_type = 10;
}
message ArmorPropertyDatas {
	repeated ArmorPropertyConfigure datas = 1;
}
message ArmorPropertyConfigure {
	int32 id = 1;
	repeated ArmorPropertyGroupInfo armor_property_group_info = 2;
}
message ArmorPropertyGroupInfo {
	int32 min_level = 1;
	int32 max_level = 2;
	float min_ext_hp = 3;
	float max_ext_hp = 4;
	float min_hp_percent = 5;
	float max_hp_percent = 6;
	float min_ext_attack = 7;
	float max_ext_attack = 8;
	float min_attack_percent = 9;
	float max_attack_percent = 10;
	float min_ext_defense = 11;
	float max_ext_defense = 12;
	float min_defense_percent = 13;
	float max_defense_percent = 14;
	float min_critical_ratio = 15;
	float max_critical_ratio = 16;
	float min_critical_damage_percent = 17;
	float max_critical_damage_percent = 18;
	float min_recover_percent = 19;
	float max_recover_percent = 20;
	float min_float_value = 21;
	float max_float_value = 22;
	int32 armor_level = 23;
	int32 strengthen_id = 24;
	int32 disassemble_id = 25;
	int32 random_property1_id = 26;
	int32 random_property2_id = 27;
	int32 random_property3_id = 28;
	int32 random_property4_id = 29;
}
message ArmorDisassembleDatas {
	repeated ArmorDisassembleConfigure datas = 1;
}
message ArmorDisassembleConfigure {
	int32 id = 1;
	repeated ArmorDisassembleItem armor_disassemble_item = 2;
}
message ArmorDisassembleItem {
	int32 item_id = 1;
	int32 item_min_count = 2;
	int32 item_max_count = 3;
	float item_rate = 4;
}
message ArmorStrengthenDatas {
	repeated ArmorStrengthenConfigure datas = 1;
}
message ArmorStrengthenConfigure {
	int32 id = 1;
	repeated ArmorStrengthenGroupInfo armor_strengthen_group_info = 2;
}
message ArmorStrengthenGroupInfo {
	int32 level = 1;
	float add_ext_hp = 2;
	float add_ext_attack = 3;
	float add_hp_percent = 4;
	float add_attack_percent = 5;
	float add_defense_percent = 6;
	float add_critical_ratio = 7;
	float add_critical_damage_percent = 8;
	float add_recover_percent = 9;
	float add_ext_defense = 10;
	int32 need_gold_count = 11;
	repeated ArmorStrengthNeedItems armor_strength_need_item = 12;
}
message ArmorStrengthNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message ArmorRandomPropertyDatas {
	repeated ArmorRandomPropertyConfigure datas = 1;
}
message ArmorRandomPropertyConfigure {
	int32 id = 1;
	repeated ArmorRandomPropertyGroupInfo armor_random_property_group_info = 2;
}
message ArmorRandomPropertyGroupInfo {
	int32 random_value_id = 1;
	int32 new_property_type = 2;
}
message ArmorRandomValueDatas {
	repeated ArmorRandomValueConfigure datas = 1;
}
message ArmorRandomValueConfigure {
	int32 id = 1;
	repeated ArmorRandomValueGroupInfo armor_random_value_group_info = 2;
}
message ArmorRandomValueGroupInfo {
	float min_level = 1;
	float max_level = 2;
	float min = 3;
	float max = 4;
}
message AllBattleDefenderDatas {
	BattleDefenderDatas battle_defender = 1;
}
message BattleDefenderDatas {
	repeated BattleDefenderConfigure datas = 1;
}
message BattleDefenderConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 pre_task_id = 4;
	int32 start_voice_id = 5;
	string asset_full_name = 6;
	int32 revise_level = 7;
	int32 recommend_lv = 8;
	int32 monster_level = 9;
	int32 buff_id = 10;
	int32 monster_buff_id = 11;
	int32 new_unlock_task_type = 12;
	int32 new_task_type = 13;
}
message AllBattleEncounterDatas {
	BattleEncounterDatas battle_encounter = 1;
}
message BattleEncounterDatas {
	repeated BattleEncounterConfigure datas = 1;
}
message BattleEncounterConfigure {
	int32 id = 1;
	bool is_special = 2;
	int32 cd = 3;
	int32 show_timer = 4;
	int32 live_timer = 5;
	string asset_full_name = 6;
	int32 revise_level = 7;
	int32 recommend_lv = 8;
	int32 monster_level = 9;
}
message AllBattleGatherDatas {
	BattleGatherDatas battle_gather = 1;
	BattleGatherItemDatas battle_gather_item = 2;
}
message BattleGatherDatas {
	repeated BattleGatherConfigure datas = 1;
}
message BattleGatherConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 pre_task_id = 4;
	int32 start_voice_id = 5;
	string asset_full_name = 6;
	int32 revise_level = 7;
	int32 monster_level = 8;
	int32 recommend_lv = 9;
	int32 new_unlock_task_type = 10;
	int32 new_task_type = 11;
}
message BattleGatherItemDatas {
	repeated BattleGatherItemConfigure datas = 1;
}
message BattleGatherItemConfigure {
	int32 id = 1;
	int32 text_id = 2;
}
message AllBattleGuideDatas {
	BattleGuideTaskDatas battle_guide_task = 1;
}
message BattleGuideTaskDatas {
	repeated BattleGuideTaskConfigure datas = 1;
}
message BattleGuideTaskConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 pre_task_id = 4;
	int32 start_voice_id = 5;
	string asset_full_name = 6;
	int32 revise_level = 7;
	int32 monster_level = 8;
	int32 recommend_lv = 9;
	int32 new_unlock_task_type = 10;
	int32 new_task_type = 11;
}
message AllBattleNormalDatas {
	BattleNormalDatas battle_normal = 1;
}
message BattleNormalDatas {
	repeated BattleNormalConfigure datas = 1;
}
message BattleNormalConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 pre_task_id = 4;
	int32 start_voice_id = 5;
	string asset_full_name = 6;
	int32 revise_level = 7;
	int32 monster_level = 8;
	int32 recommend_lv = 9;
	int32 new_unlock_task_type = 10;
	int32 new_task_type = 11;
}
message AllBattlePassDatas {
	BattlePassDatas battle_pass = 1;
	BattlePassQuesetDatas battle_pass_queset = 2;
}
message BattlePassDatas {
	repeated BattlePassConfigure datas = 1;
}
message BattlePassConfigure {
	int32 id = 1;
	int32 shop_id = 2;
	int32 max_exp = 3;
	int32 day_quest_id = 4;
	int32 week_quest_id = 5;
	int32 season_quest_id = 6;
	repeated BattlePassLevelUp battle_pass_level_ups = 7;
}
message BattlePassLevelUp {
	int32 level = 1;
	int32 exp = 2;
	repeated BattlePassRewards battle_pass_reward = 3;
}
message BattlePassRewards {
	int32 item_id = 1;
	int32 item_num = 2;
}
message BattlePassQuesetDatas {
	repeated BattlePassQuesetConfigure datas = 1;
}
message BattlePassQuesetConfigure {
	int32 id = 1;
	repeated BattlePassQuesetItems battle_pass_queset_item = 2;
}
message BattlePassQuesetItems {
	int32 achieve_id = 1;
	int32 exp = 2;
}
message AllBattleWeaponDatas {
	BattleWeaponTaskDatas battle_weapon_task = 1;
	BattleWeaponCharacterPoolDatas battle_weapon_character_pool = 2;
}
message BattleWeaponTaskDatas {
	repeated BattleWeaponTaskConfigure datas = 1;
}
message BattleWeaponTaskConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 pre_task_id = 4;
	int32 virual_weapon_id = 5;
	int32 use_character_pool_id = 6;
	int32 start_voice_id = 7;
	string asset_full_name = 8;
	int32 revise_level = 9;
	int32 monster_level = 10;
	int32 recommend_lv = 11;
	int32 new_unlock_task_type = 12;
	int32 new_task_type = 13;
}
message BattleWeaponCharacterPoolDatas {
	repeated BattleWeaponCharacterPoolConfigure datas = 1;
}
message BattleWeaponCharacterPoolConfigure {
	int32 id = 1;
	repeated BattleWeaponCharacterPoolGroupInfo battle_weapon_character_pool_group_info = 2;
}
message BattleWeaponCharacterPoolGroupInfo {
	int32 index = 1;
	int32 character_id = 2;
	int32 new_weapon_type = 3;
	int32 new_character_type = 4;
}
message AllBuffDatas {
	BuffDatas buff = 1;
	BuffScriptInfoDatas buff_script_info = 2;
}
message BuffDatas {
	repeated BuffConfigure datas = 1;
}
message BuffConfigure {
	int32 id = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 script_id = 4;
	repeated float script_params = 5;
}
message BuffScriptInfoDatas {
	repeated BuffScriptInfoConfigure datas = 1;
}
message BuffScriptInfoConfigure {
	int32 id = 1;
	string script_name = 2;
	bool cover = 3;
	string asset_full_name = 4;
	int32 new_buff_type = 5;
}
message AllBuffImageDatas {
	BuffImageInfoDatas buff_image_info = 1;
	BuffImageResourceDatas buff_image_resource = 2;
}
message BuffImageInfoDatas {
	repeated BuffImageInfoConfigure datas = 1;
}
message BuffImageInfoConfigure {
	int32 id = 1;
	int32 image_id = 2;
	int32 new_buff_image_type = 3;
}
message BuffImageResourceDatas {
	repeated BuffImageResourceConfigure datas = 1;
}
message BuffImageResourceConfigure {
	int32 id = 1;
	string up_icon = 2;
	string down_icon = 3;
}
message AllChallengeDatas {
	ChallengeDatas challenge = 1;
}
message ChallengeDatas {
	repeated ChallengeConfigure datas = 1;
}
message ChallengeConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 star_timer1 = 4;
	int32 star_timer3 = 5;
	int32 star_timer2 = 6;
	string asset_full_name = 7;
	int32 new_challenge_type = 8;
	int32 new_gain_reward_type = 9;
	int32 new_repeat_gain_reward_type = 10;
}
message AllCharacterDatas {
	CharacterDatas character = 1;
	CharacterLevelDatas level = 2;
	CharacterGrowthModelDatas growth_model = 3;
	LevelRuleDatas level_rule = 4;
	CharacterStarDatas character_star = 5;
	CharacterAchieveDatas character_achieve = 6;
	CharacterAchieveRewardDatas character_achieve_reward = 7;
}
message CharacterDatas {
	repeated CharacterConfigure datas = 1;
}
message CharacterConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 shop_id = 3;
	string color = 4;
	int32 growth_level_id = 5;
	int32 growth_model_id = 6;
	int32 rule_id = 7;
	int32 star_effect_id = 8;
	int32 repeat_item_id = 9;
	int32 more_item_id = 10;
	int32 character_achieve_id = 11;
	int32 achieve_reward_id = 12;
	repeated int32 spell_i_ds = 13;
	repeated int32 hand_spell_id = 14;
	repeated int32 passive_spell_i_ds = 15;
	repeated int32 ex_spell_i_ds = 16;
	bool is_limit_ultra_spell = 17;
	int32 name_id = 18;
	int32 character_icon = 19;
	int32 voice_id = 20;
	int32 hat_id = 21;
	int32 hair_id = 22;
	int32 cloth_id = 23;
	int32 orn_id = 24;
	string face_path = 25;
	bool is_show = 26;
	int32 default_weapon_id = 27;
	int32 practice_id = 28;
	string opening_time = 29;
	string closing_time = 30;
	repeated int32 poster_i_ds = 31;
	int32 video_id = 32;
	string asset_full_name = 33;
	int32 new_weapon_type = 34;
	int32 new_weapon_system_type = 35;
	int32 new_character_utrla_spell_timing_type = 36;
	int32 new_camp_type = 37;
	int32 new_armor_type = 38;
	int32 new_element_type = 39;
	int32 new_sex_type = 40;
}
message CharacterLevelDatas {
	repeated CharacterLevelConfigure datas = 1;
}
message CharacterLevelConfigure {
	int32 id = 1;
	repeated CharacterLevelInfo level_info = 2;
}
message CharacterLevelInfo_2 {
	int32 level = 1;
	int32 need_player_level = 2;
	int32 need_exp = 3;
	float exp_to_coin = 4;
}
message CharacterGrowthModelDatas {
	repeated CharacterGrowthModelConfigure datas = 1;
}
message CharacterGrowthModelConfigure {
	int32 id = 1;
	repeated CharacterGrowthModelLevelInfo level_group_info = 2;
}
message CharacterGrowthModelLevelInfo {
	int32 level = 1;
	float max_hp = 2;
	float max_mp = 3;
	float attack = 4;
	float defense = 5;
	float armor_breaking = 6;
	float melee_defend = 7;
	float remote_defend = 8;
	float windy_damage = 9;
	float fire_damage = 10;
	float water_damage = 11;
	float light_damage = 12;
	float dark_damage = 13;
	float thunder_damage = 14;
	float windy_defend = 15;
	float fire_defend = 16;
	float water_defend = 17;
	float light_defend = 18;
	float dark_defend = 19;
	float thunder_defend = 20;
	float max_sp = 21;
	float sp_regenerate_speed = 22;
	float damage_balance = 23;
	float critical_ratio = 24;
	float critical_ratio_defend = 25;
	float critical_damage_percent = 26;
	float critical_damage_defend_percent = 27;
	float block_ratio = 28;
	float block_ratio_defend_percent = 29;
	float max_break = 30;
	float break_markup = 31;
	float break_regenerate_speed = 32;
	float break_regenerate_delay = 33;
	float break_damage_percent = 34;
	float breaking_damage_percent = 35;
	float break_damage_critical_percent = 36;
	float break_damage_counter_percent = 37;
	float break_damage_defend_percent = 38;
	float counter_damage_percent = 39;
	float counter_damage_defend_percent = 40;
	float recover_percent = 41;
	float chopping_damage_percent = 42;
	float strike_damage_percent = 43;
	float shooting_damage_percent = 44;
	float magic_damage_percent = 45;
	float dodge_reduce_ap_percent = 46;
	float spell_reduce_ap_percent = 47;
	float max_critical_ratio = 48;
}
message LevelRuleDatas {
	repeated LevelRuleConfigure datas = 1;
}
message LevelRuleConfigure {
	int32 id = 1;
	repeated CharacterLevelRuleInfo level_rule_info = 2;
}
message CharacterLevelRuleInfo {
	int32 top_level = 1;
	int32 top_max_level = 2;
	float max_hp = 3;
	float attack = 4;
	float defense = 5;
	int32 passive_spell_id = 6;
	repeated RuleNeedItems rule_need_item = 7;
}
message RuleNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message CharacterStarDatas {
	repeated CharacterStarConfigure datas = 1;
}
message CharacterStarConfigure {
	int32 id = 1;
	repeated CharacterStarInfo star_info = 2;
}
message CharacterStarInfo {
	int32 star = 1;
	repeated int32 para = 2;
	int32 item_id = 3;
	int32 item_num = 4;
	int32 need_gold_count = 5;
	int32 new_star_effect_type = 6;
}
message CharacterAchieveDatas {
	repeated CharacterAchieveConfigure datas = 1;
}
message CharacterAchieveConfigure {
	int32 id = 1;
	repeated CharacterAchieveInfo achieve_info = 2;
}
message CharacterAchieveInfo {
	int32 achieve_id = 1;
	int32 item_id = 2;
	int32 item_count = 3;
}
message CharacterAchieveRewardDatas {
	repeated CharacterAchieveRewardConfigure datas = 1;
}
message CharacterAchieveRewardConfigure {
	int32 id = 1;
	repeated CharacterAchieveRewardInfo achieve_reward_info = 2;
}
message CharacterAchieveRewardInfo {
	int32 num = 1;
	int32 ui_index = 2;
	int32 unlock_item_id = 3;
	int32 unlock_item_count = 4;
	int32 reward_item_id = 5;
	int32 reward_item_count = 6;
	int32 new_reward_price_type = 7;
}
message AllCharacterPracticeDatas {
	CharacterPracticeDatas character_practice = 1;
}
message CharacterPracticeDatas {
	repeated CharacterPracticeConfigure datas = 1;
}
message CharacterPracticeConfigure {
	int32 id = 1;
	int32 character_practice = 2;
	int32 character_lv = 3;
	int32 weapon_id = 4;
	int32 dungeon_id = 5;
}
message AllChatDatas {
	ChatDatas chat = 1;
	ChatEmotionDatas chat_emotion = 2;
	ChatChannelDatas chat_channel = 3;
}
message ChatDatas {
	repeated ChatConfigure datas = 1;
}
message ChatConfigure {
	int32 id = 1;
	bool enabled_chatting = 2;
	int32 interval_seconds = 3;
	bool enabled_repeatting = 4;
	int32 repeated_times = 5;
	int32 repeated_time = 6;
	int32 new_channel_type = 7;
}
message ChatEmotionDatas {
	repeated ChatEmotionConfigure datas = 1;
}
message ChatEmotionConfigure {
	int32 id = 1;
	int32 icon_id = 2;
	int32 icon_sketch_id = 3;
	int32 achieve_condition_id = 4;
	string opening_time = 5;
	string closing_time = 6;
	bool is_show = 7;
	int32 new_emotion_type = 8;
}
message ChatChannelDatas {
	repeated ChatChannelConfigure datas = 1;
}
message ChatChannelConfigure {
	int32 id = 1;
	repeated ChannelGroupInfo channel_group_info = 2;
}
message ChannelGroupInfo {
	int32 channel_id = 1;
	string asset_path = 2;
}
message AllCollectionItemDatas {
	CollectionItemDatas collection_item = 1;
	CollectionPhotoDataDatas collection_photo_data = 2;
	CollectionItemDataDatas collection_item_data = 3;
	CollectionItemFileDatas collection_item_file = 4;
	CollectionItemBookDatas collection_item_book = 5;
	CollectionItemTapeDatas collection_item_tape = 6;
	CollectionItemItemDatas collection_item_item = 7;
	CollectionItemPortalDatas collection_item_portal = 8;
	CollectItemPhotoItemDatas collect_item_photo_item = 9;
}
message CollectionItemDatas {
	repeated CollectionItemConfigure datas = 1;
}
message CollectionItemConfigure {
	int32 id = 1;
	int32 relate_id = 2;
	int32 item_id = 3;
	int32 new_collection_type = 4;
}
message CollectionPhotoDataDatas {
	repeated CollectionPhotoDataConfigure datas = 1;
}
message CollectionPhotoDataConfigure {
	int32 id = 1;
	int32 photo_icon_id = 2;
	int32 collect_item = 3;
}
message CollectionItemDataDatas {
	repeated CollectionItemDataConfigure datas = 1;
}
message CollectionItemDataConfigure {
	int32 id = 1;
	int32 data_icon_id = 2;
	int32 guide_voice = 3;
	int32 reward_id = 4;
	int32 text_id = 5;
}
message CollectionItemFileDatas {
	repeated CollectionItemFileConfigure datas = 1;
}
message CollectionItemFileConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 guide_voice = 3;
	int32 reward_id = 4;
}
message CollectionItemBookDatas {
	repeated CollectionItemBookConfigure datas = 1;
}
message CollectionItemBookConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 guide_voice = 3;
	int32 reward_id = 4;
}
message CollectionItemTapeDatas {
	repeated CollectionItemTapeConfigure datas = 1;
}
message CollectionItemTapeConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 sound = 3;
	bool is_bgm_lower = 4;
}
message CollectionItemItemDatas {
	repeated CollectionItemItemConfigure datas = 1;
}
message CollectionItemItemConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 guide_voice = 3;
	int32 reward_id = 4;
}
message CollectionItemPortalDatas {
	repeated CollectionItemPortalConfigure datas = 1;
}
message CollectionItemPortalConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 guide_voice = 3;
}
message CollectItemPhotoItemDatas {
	repeated CollectItemPhotoItemConfigure datas = 1;
}
message CollectItemPhotoItemConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 guide_voice = 3;
	int32 reward_id = 4;
}
message AllCookingDatas {
	CookLevelDatas cook_level = 1;
	CookFoodDatas cook_food = 2;
	CookAffectDatas cook_affect = 3;
	CookSpellDatas cook_spell = 4;
}
message CookLevelDatas {
	repeated CookLevelConfigure datas = 1;
}
message CookLevelConfigure {
	int32 id = 1;
	int32 upgrade_level_by_proficiency = 2;
	int32 need_item_id = 3;
	int32 need_item_count = 4;
	repeated CookLevelQuestConfigureItem cook_level_quest = 5;
}
message CookLevelQuestConfigureItem {
	int32 achieve_condition_id = 1;
	int32 proficiency = 2;
	int32 complete_limit = 3;
}
message CookFoodDatas {
	repeated CookFoodConfigure datas = 1;
}
message CookFoodConfigure {
	int32 id = 1;
	bool is_show = 2;
	bool is_handbook_show = 3;
	int32 need_showbook_item_id = 4;
	int32 cook_level = 5;
	int32 need_time = 6;
	string opening_time = 7;
	string closing_time = 8;
	int32 need_item_id = 9;
	int32 need_item_count = 10;
	repeated CookFoodItemConfigureItem cook_food_items = 11;
	float successful_probability = 12;
	int32 get_item_id = 13;
	int32 need_formula_item_id = 14;
	repeated CookFoodQuestConfigureItem cook_food_quest_rewards = 15;
	int32 new_cook_page_type = 16;
	int32 new_cook_food_type = 17;
	int32 new_cook_tool_type = 18;
}
message CookFoodItemConfigureItem {
	int32 food_item_id = 1;
	int32 food_item_count = 2;
}
message CookFoodQuestConfigureItem {
	int32 achieve_condition_id = 1;
	int32 reward_id = 2;
}
message CookAffectDatas {
	repeated CookAffectConfigure datas = 1;
}
message CookAffectConfigure {
	int32 id = 1;
	int32 food_effect_type_param = 2;
	int32 buff_id = 3;
	int32 new_cook_food_affect_type = 4;
	int32 new_cook_food_effect_type = 5;
}
message CookSpellDatas {
	repeated CookSpellConfigure datas = 1;
}
message CookSpellConfigure {
	int32 id = 1;
	repeated CookSpellItemsConfigureItem cook_spell_items = 2;
}
message CookSpellItemsConfigureItem {
	int32 level = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 new_life_spell_effect_type = 4;
	float spell_param1 = 5;
	float spell_param2 = 6;
	int32 need_cook_level = 7;
	int32 need_time = 8;
	int32 need_currency_id = 9;
	int32 need_currency_count = 10;
	repeated CookNeedItems cook_need_item = 11;
}
message CookNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message AllDialogDatas {
	DialogDatas dialog = 1;
}
message DialogDatas {
	repeated DialogConfigure datas = 1;
}
message DialogConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message AllDungeonDatas {
	DungeonDatas dungeon = 1;
	CharacterPoolDatas character_pool = 2;
	DungeonQuestDatas dungeon_quest = 3;
}
message DungeonDatas {
	repeated DungeonConfigure datas = 1;
}
message DungeonConfigure {
	int32 id = 1;
	int32 dungeon_id = 2;
	int32 title_id = 3;
	int32 world_id = 4;
	int32 title_icon_id = 5;
	int32 scene_id = 6;
	int32 item_id = 7;
	int32 item_num = 8;
	int32 need_player_level = 9;
	bool dynamic_level = 10;
	int32 monster_lv = 11;
	int32 recommend_lv = 12;
	int32 fight_time = 13;
	int32 use_character_max_number = 14;
	int32 respawn_times = 15;
	repeated int32 open_day = 16;
	int32 use_character_pool_id = 17;
	int32 un_use_character_pool_id = 18;
	int32 dengeon_quest_id = 19;
	int32 reward_id = 20;
	int32 star_timer1 = 21;
	int32 star_timer2 = 22;
	int32 star_timer3 = 23;
	bool can_re_play = 24;
	int32 start_voice_id = 25;
	int32 star_reward_id = 26;
	int32 show_reward_id = 27;
	repeated int32 stage_spell_passive_ids = 28;
	string scene_config = 29;
	repeated int32 monster_i_ds = 30;
	repeated int32 character_buff = 31;
	int32 new_mission_type = 32;
	int32 new_difficulty_level = 33;
	int32 new_treasure_box_reward_type = 34;
	int32 new_element_type = 35;
	int32 new_consumption_mode = 36;
}
message CharacterPoolDatas {
	repeated CharacterPoolConfigure datas = 1;
}
message CharacterPoolConfigure {
	int32 id = 1;
	repeated CharacterPoolGroupInfo character_pool_group_info = 2;
}
message CharacterPoolGroupInfo {
	int32 index = 1;
	int32 character_id = 2;
	int32 new_weapon_type = 3;
	int32 new_character_type = 4;
}
message DungeonQuestDatas {
	repeated DungeonQuestConfigure datas = 1;
}
message DungeonQuestConfigure {
	int32 id = 1;
	repeated DungeonQuestGroupInfo dungeon_quest_group_info = 2;
}
message DungeonQuestGroupInfo {
	int32 index = 1;
	bool active = 2;
	int32 achieve_condition_id = 3;
}
message AllDyeStuffDatas {
	DyeDataDatas dye_data = 1;
}
message DyeDataDatas {
	repeated DyeDataConfigure datas = 1;
}
message DyeDataConfigure {
	int32 id = 1;
	int32 color_r = 2;
	int32 color_g = 3;
	int32 color_b = 4;
	int32 new_dye_type = 5;
}
message AllExploreDatas {
	ExploreAreaDatas explore_area = 1;
	ExploreActivityDatas explore_activity = 2;
	ExploreIntervalDatas explore_interval = 3;
}
message ExploreAreaDatas {
	repeated ExploreAreaConfigure datas = 1;
}
message ExploreAreaConfigure {
	int32 id = 1;
	int32 name_id = 2;
	int32 icon_id = 3;
	int32 need_time = 4;
	int32 quick_need_item = 5;
	int32 quick_need_item_count = 6;
	int32 need_scene_id = 7;
	int32 need_player_level = 8;
	int32 need_item = 9;
	int32 need_item_count = 10;
	repeated ExploreAreaItem explore_area_item = 11;
	int32 new_explore_difficulty = 12;
}
message ExploreAreaItem {
	int32 rewar_item_id = 1;
}
message ExploreActivityDatas {
	repeated ExploreActivityConfigure datas = 1;
}
message ExploreActivityConfigure {
	int32 id = 1;
	int32 name_id = 2;
	int32 icon_id = 3;
	string start_time = 4;
	string end_time = 5;
	int32 need_time = 6;
	int32 max_times = 7;
	int32 quick_need_item = 8;
	int32 quick_need_item_count = 9;
	int32 special_reward_item_id = 10;
	repeated ExploreActivityItem explore_activity_item = 11;
}
message ExploreActivityItem {
	int32 rewar_item_id = 1;
}
message ExploreIntervalDatas {
	repeated ExploreIntervalConfigure datas = 1;
}
message ExploreIntervalConfigure {
	int32 id = 1;
	int32 name_id = 2;
	int32 icon_id = 3;
	int32 retention_time = 4;
	int32 time = 5;
	int32 need_item_id = 6;
	int32 captain_count = 7;
	int32 member_count = 8;
	int32 quick_need_item = 9;
	int32 quick_need_item_count = 10;
}
message AllExpressionDatas {
	ExpressionDatas expression = 1;
}
message ExpressionDatas {
	repeated ExpressionConfigure datas = 1;
}
message ExpressionConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	repeated ExpressionGroupInfo expression_group_info = 4;
	int32 new_expression_type = 5;
}
message ExpressionGroupInfo {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
	int32 index = 3;
	int32 action_id = 4;
	int32 achieve_condition_id = 5;
	string opening_time = 6;
	string closing_time = 7;
	bool is_show = 8;
}
message AllFashionDatas {
	FashionInfoDatas fashion_info = 1;
}
message FashionInfoDatas {
	repeated FashionInfoConfigure datas = 1;
}
message FashionInfoConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 only_character_id = 3;
	string asset_full_name = 4;
	repeated int32 hide_hat = 5;
	repeated int32 hide_orn = 6;
	repeated int32 hide_braid = 7;
	int32 new_sex_type = 8;
	int32 new_fashion_type = 9;
}
message AllFireworksPartyDatas {
	FireworksPartyDatas fireworks_party = 1;
}
message FireworksPartyDatas {
	repeated FireworksPartyConfigure datas = 1;
}
message FireworksPartyConfigure {
	int32 id = 1;
	string path = 2;
}
message AllFishingDatas {
	FishingLevelDatas fishing_level = 1;
	FishingSpellDatas fishing_spell = 2;
	FishingEventDatas fishing_event = 3;
	FishingInfoDatas fishing_info = 4;
}
message FishingLevelDatas {
	repeated FishingLevelConfigure datas = 1;
}
message FishingLevelConfigure {
	int32 id = 1;
	int32 upgrade_level_by_proficiency = 2;
	int32 up_level_need_item_id = 3;
	int32 up_level_need_item_count = 4;
	int32 need_item_id = 5;
	int32 need_item_count = 6;
	repeated FishingLevelQuestConfigureItem fishing_level_quest = 7;
}
message FishingLevelQuestConfigureItem {
	int32 achieve_condition_id = 1;
	int32 proficiency = 2;
	int32 complete_limit = 3;
}
message FishingSpellDatas {
	repeated FishingSpellConfigure datas = 1;
}
message FishingSpellConfigure {
	int32 id = 1;
	repeated FishingSpellItemsConfigureItem fishing_spell_items = 2;
}
message FishingSpellItemsConfigureItem {
	int32 level = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 new_life_spell_effect_type = 4;
	float param1 = 5;
	float param2 = 6;
	int32 need_fish_level = 7;
	int32 need_time = 8;
	int32 need_currency_id = 9;
	int32 need_currency_count = 10;
	repeated FishingNeedItems fishing_need_item = 11;
}
message FishingNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message FishingEventDatas {
	repeated FishingEventConfigure datas = 1;
}
message FishingEventConfigure {
	int32 id = 1;
	repeated FishingEventItemsConfigureItem fishing_event_items = 2;
}
message FishingEventItemsConfigureItem {
	int32 index = 1;
	int32 new_fish_action_type = 2;
	float trigger_time_coe = 3;
	int32 new_fish_event_type = 4;
	float param1 = 5;
	float param2 = 6;
	int32 desciption_id = 7;
}
message FishingInfoDatas {
	repeated FishingInfoConfigure datas = 1;
}
message FishingInfoConfigure {
	int32 id = 1;
	int32 need_level = 2;
	int32 item_id = 3;
	bool is_show = 4;
	int32 need_showbook_item_id = 5;
	int32 new_size_type = 6;
	int32 new_fish_classify_type = 7;
	int32 new_day_type = 8;
	int32 ui_type_id = 9;
	float min_size = 10;
	float max_size = 11;
	repeated FishAchieveRewardConfigureItem fish_achieve_rewards = 12;
}
message FishAchieveRewardConfigureItem {
	int32 achieve_condition_id = 1;
	int32 reward_id = 2;
}
message AllFishPondDatas {
	FishPondDatas fish_pond = 1;
}
message FishPondDatas {
	repeated FishPondConfigure datas = 1;
}
message FishPondConfigure {
	int32 id = 1;
	float fish_pond_pool = 2;
}
message AllFlagDatas {
	FlagDatas flag = 1;
}
message FlagDatas {
	repeated FlagConfigure datas = 1;
}
message FlagConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 scene_id = 4;
	repeated FlagGroupInfo flag_group_info = 5;
}
message FlagGroupInfo {
	int32 index = 1;
	bool is_item_unlock = 2;
	int32 new_mission_type = 3;
	int32 relation_id = 4;
}
message AllGachaDatas {
	GachaInfoDatas info = 1;
	GachaPoolDatas pool = 2;
	GachaRewardPoolDatas reward_pool = 3;
}
message GachaInfoDatas {
	repeated GachaInfoConfigure datas = 1;
}
message GachaInfoConfigure {
	int32 id = 1;
	int32 index = 2;
	string opening_time = 3;
	string closing_time = 4;
	int32 text_id = 5;
	int32 icon_id = 6;
	bool is_free = 7;
	int32 method1_id = 8;
	int32 consume_item1_id = 9;
	int32 method1_count = 10;
	int32 consume_item1_num = 11;
	int32 consume_item2_id = 12;
	int32 method2_count = 13;
	int32 consume_item2_num = 14;
	int32 max_times = 15;
	int32 character_id1 = 16;
	int32 character_id2 = 17;
	int32 character_id3 = 18;
	int32 video_id1 = 19;
	int32 video_id2 = 20;
	int32 video_id3 = 21;
	int32 practice_character_id1 = 22;
	int32 practice_character_id2 = 23;
	int32 practice_character_id3 = 24;
	int32 optional_num = 25;
	int32 optional_pool_id = 26;
	int32 big_guarantee_pool_id = 27;
	int32 new_ui_gacha_type = 28;
	int32 new_show_type = 29;
}
message GachaPoolDatas {
	repeated GachaPoolConfigure datas = 1;
}
message GachaPoolConfigure {
	int32 id = 1;
	repeated GachaPoolItem items = 2;
}
message GachaPoolItem {
	int32 free_gacha_pool_id = 1;
}
message GachaRewardPoolDatas {
	repeated GachaRewardPoolConfigure datas = 1;
}
message GachaRewardPoolConfigure {
	int32 id = 1;
	repeated GachaRewardPoolItem items = 2;
}
message GachaRewardPoolItem {
	int32 item_id = 1;
	bool is_optional = 2;
	string opening_time = 3;
	string closing_time = 4;
}
message AllGatherDatas {
	GatherDatas gather = 1;
	GatherRewardDatas gather_reward = 2;
	MainCityGatherDatas main_city_gather = 3;
	GatherRuleDatas gather_rule = 4;
}
message GatherDatas {
	repeated GatherConfigure datas = 1;
}
message GatherConfigure {
	int32 id = 1;
	repeated GatherGroupInfo gather_group_info = 2;
}
message GatherGroupInfo {
	int32 reward = 1;
	int32 weight = 2;
	int32 new_gather_type = 3;
	int32 new_weapon_type = 4;
	string path = 5;
	string prefab = 6;
}
message GatherRewardDatas {
	repeated GatherRewardConfigure datas = 1;
}
message GatherRewardConfigure {
	int32 id = 1;
	repeated GatherRewardGroupInfo gather_reward_group_info = 2;
}
message GatherRewardGroupInfo {
	int32 index = 1;
	int32 item_id = 2;
	int32 count = 3;
	bool has_model = 4;
	bool lucky = 5;
	string path = 6;
	int32 buff_id = 7;
	int32 duration = 8;
}
message MainCityGatherDatas {
	repeated MainCityGatherConfigure datas = 1;
}
message MainCityGatherConfigure {
	int32 id = 1;
	repeated GatherRewardGroupWithTime gather_reward_group_with_time = 2;
}
message GatherRewardGroupWithTime {
	int32 time = 1;
	int32 gather_reward_id = 2;
}
message GatherRuleDatas {
	repeated GatherRuleConfigure datas = 1;
}
message GatherRuleConfigure {
	int32 id = 1;
	int32 wood_num = 2;
	int32 flower_num = 3;
	int32 stone_num = 4;
	int32 butterfly_num = 5;
	int32 water_num = 6;
	int32 pick_num = 7;
	int32 lucky_finishwood_num = 8;
	int32 lucky_finishflower_num = 9;
	int32 lucky_finishstone_num = 10;
	int32 lucky_finishbutterfly_num = 11;
	int32 lucky_finishwater_num = 12;
	int32 lucky_finishpick_num = 13;
}
message AllGatherLevelDatas {
	CollectionGlovesDatas collection_gloves = 1;
	LoggingAxeDatas logging_axe = 2;
	MiningHammerDatas mining_hammer = 3;
	InsectNetDatas insect_net = 4;
	WaterBottleDatas water_bottle = 5;
	PickDatas pick = 6;
}
message CollectionGlovesDatas {
	repeated CollectionGlovesConfigure datas = 1;
}
message CollectionGlovesConfigure {
	int32 id = 1;
	repeated CollectionGlovesLevelItem collection_gloves_level_item = 2;
}
message CollectionGlovesLevelItem {
	int32 level = 1;
	int32 need_count = 2;
	int32 guide_voice = 3;
}
message LoggingAxeDatas {
	repeated LoggingAxeConfigure datas = 1;
}
message LoggingAxeConfigure {
	int32 id = 1;
	repeated CollectionLoggingAxeLevelItem collection_logging_axe_level_item = 2;
}
message CollectionLoggingAxeLevelItem {
	int32 level = 1;
	int32 need_count = 2;
	int32 guide_voice = 3;
}
message MiningHammerDatas {
	repeated MiningHammerConfigure datas = 1;
}
message MiningHammerConfigure {
	int32 id = 1;
	repeated CollectionMiningHammerLevelItem collection_mining_hammer_level_item = 2;
}
message CollectionMiningHammerLevelItem {
	int32 level = 1;
	int32 need_count = 2;
	int32 guide_voice = 3;
}
message InsectNetDatas {
	repeated InsectNetConfigure datas = 1;
}
message InsectNetConfigure {
	int32 id = 1;
	repeated CollectionInsectNetLevelItem collection_insect_net_level_item = 2;
}
message CollectionInsectNetLevelItem {
	int32 level = 1;
	int32 need_count = 2;
	int32 guide_voice = 3;
}
message WaterBottleDatas {
	repeated WaterBottleConfigure datas = 1;
}
message WaterBottleConfigure {
	int32 id = 1;
	repeated CollectionWaterBottleLevelItem collection_water_bottle_level_item = 2;
}
message CollectionWaterBottleLevelItem {
	int32 level = 1;
	int32 need_count = 2;
	int32 guide_voice = 3;
}
message PickDatas {
	repeated PickConfigure datas = 1;
}
message PickConfigure {
	int32 id = 1;
	repeated CollectionPickLevelItem collection_pick_level_item = 2;
}
message CollectionPickLevelItem {
	int32 level = 1;
	int32 need_count = 2;
	int32 guide_voice = 3;
}
message AllGiftBagDatas {
	GiftBagDatas gift_bag = 1;
}
message GiftBagDatas {
	repeated GiftBagConfigure datas = 1;
}
message GiftBagConfigure {
	int32 id = 1;
	int32 player_lv = 2;
	int32 use_item_id = 3;
	int32 use_item_count = 4;
	repeated GiftBagGroupInfo gift_bag_group = 5;
}
message GiftBagGroupInfo {
	int32 reward_pool_group_id = 1;
}
message AllGlobalBuffDatas {
	GlobalBuffDatas global_buff = 1;
}
message GlobalBuffDatas {
	repeated GlobalBuffConfigure datas = 1;
}
message GlobalBuffConfigure {
	int32 id = 1;
	int32 name_id = 2;
	int32 icon_id = 3;
	int32 new_global_buff_define_type = 4;
}
message AllGlobalConfigDatas {
	GlobalConfigDatas config = 1;
}
message GlobalConfigDatas {
	repeated GlobalConfigConfigure datas = 1;
}
message GlobalConfigConfigure {
	int32 id = 1;
	string key = 2;
	repeated string values = 3;
}
message AllGpuQualityDatas {
	GpuQualityInfoDatas gpu_quality_info = 1;
}
message GpuQualityInfoDatas {
	repeated GpuQualityInfoConfigure datas = 1;
}
message GpuQualityInfoConfigure {
	int32 id = 1;
	string name = 2;
	int32 quality = 3;
	int32 z_pre_pass = 4;
	repeated int32 unlock_quality = 5;
}
message AllHandicraftDatas {
	HandicraftLevelDatas handicraft_level = 1;
	HandicraftItemDatas handicraft_item = 2;
	HandicraftSpellDatas handicraft_spell = 3;
}
message HandicraftLevelDatas {
	repeated HandicraftLevelConfigure datas = 1;
}
message HandicraftLevelConfigure {
	int32 id = 1;
	int32 upgrade_level_by_proficiency = 2;
	int32 need_item_id = 3;
	int32 need_item_count = 4;
	repeated HandicraftLevelAchieveConfigureItem handicraft_level_achieve = 5;
}
message HandicraftLevelAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 proficiency = 2;
	int32 complete_limit = 3;
}
message HandicraftItemDatas {
	repeated HandicraftItemConfigure datas = 1;
}
message HandicraftItemConfigure {
	int32 id = 1;
	bool is_show = 2;
	bool is_handbook_show = 3;
	int32 need_showbook_item_id = 4;
	int32 need_formula_item_id = 5;
	int32 handicraft_level = 6;
	int32 need_time = 7;
	int32 need_item_id = 8;
	string opening_time = 9;
	string closing_time = 10;
	int32 need_item_count = 11;
	repeated HandicraftItemConfigureItem handicraft_items = 12;
	float successful_probability = 13;
	int32 get_item_id = 14;
	repeated HandicraftAchieveConfigureItem handicraft_achieve_rewards = 15;
	int32 new_handicraft_tool_type = 16;
	int32 new_handicraft_type = 17;
	int32 new_handicraft_page_type = 18;
}
message HandicraftItemConfigureItem {
	int32 item_id = 1;
	int32 item_count = 2;
}
message HandicraftAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 reward_id = 2;
}
message HandicraftSpellDatas {
	repeated HandicraftSpellConfigure datas = 1;
}
message HandicraftSpellConfigure {
	int32 id = 1;
	repeated HandicraftSpellItemsConfigureItem handicraft_spell_items = 2;
}
message HandicraftSpellItemsConfigureItem {
	int32 level = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 new_life_spell_effect_type = 4;
	float spell_param1 = 5;
	float spell_param2 = 6;
	int32 need_handicraft_level = 7;
	int32 need_time = 8;
	int32 need_currency_id = 9;
	int32 need_currency_count = 10;
	repeated HandicraftNeedItems handicraft_need_item = 11;
}
message HandicraftNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message AllHeadDatas {
	HeadDatas head = 1;
}
message HeadDatas {
	repeated HeadConfigure datas = 1;
}
message HeadConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 head_id = 3;
	int32 achieve_condition_id = 4;
	bool is_show = 5;
}
message AllHomeItemDatas {
	HomeItemDatas home_item = 1;
}
message HomeItemDatas {
	repeated HomeItemConfigure datas = 1;
}
message HomeItemConfigure {
	int32 id = 1;
	string path = 2;
	int32 item_id = 3;
	bool is_show = 4;
	int32 home_item_point_num = 5;
	int32 new_home_item_type = 6;
}
message AllInscriptionDatas {
	InscriptionDatas inscription = 1;
}
message InscriptionDatas {
	repeated InscriptionConfigure datas = 1;
}
message InscriptionConfigure {
	int32 id = 1;
	int32 item_id = 2;
	repeated InscriptionGroupInfo inscription_group_info = 3;
	int32 new_weapon_system_type = 4;
}
message InscriptionGroupInfo {
	int32 level = 1;
	int32 passive_spell_id = 2;
	int32 need_gold_count = 3;
	repeated InscriptionNeedItems inscription_need_item = 4;
}
message InscriptionNeedItems {
	int32 need_item_id = 1;
	int32 item_count = 2;
}
message AllItemDatas {
	ItemDatas item = 1;
	ItemTagDatas item_tag = 2;
}
message ItemDatas {
	repeated ItemConfigure datas = 1;
}
message ItemConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 relate_id = 4;
	int32 quality = 5;
	int32 stack_count = 6;
	bool is_show_num = 7;
	int32 bg_id = 8;
	int32 source_id = 9;
	int32 new_bag_item_tag = 10;
	int32 new_ui_tag = 11;
}
message ItemTagDatas {
	repeated ItemTagConfigure datas = 1;
}
message ItemTagConfigure {
	int32 id = 1;
	bool in_bag_grid = 2;
	bool in_battle_bag = 3;
	int32 new_action_type1 = 4;
	int32 new_action_type2 = 5;
	int32 new_tag = 6;
}
message AllItemLevelDatas {
	ItemLevelDatas item_level = 1;
}
message ItemLevelDatas {
	repeated ItemLevelConfigure datas = 1;
}
message ItemLevelConfigure {
	int32 id = 1;
	repeated ItemLevelItem item_level_item = 2;
	int32 new_item_source_enum = 3;
}
message ItemLevelItem {
	int32 level = 1;
	int32 voice_id = 2;
}
message AllItemSourceDatas {
	ItemSourceDatas item_source = 1;
}
message ItemSourceDatas {
	repeated ItemSourceConfigure datas = 1;
}
message ItemSourceConfigure {
	int32 id = 1;
	repeated ItemSourceInfo source_info = 2;
}
message ItemSourceInfo {
	int32 order = 1;
	repeated int32 params = 2;
	int32 text_id = 3;
	int32 new_source_type = 4;
}
message AllLevelDatas {
	playerLevelDatas player_level = 1;
	WorldLevelDatas world_level = 2;
	NormalLevelDatas normal_level = 3;
	GuideLevelDatas guide_level = 4;
	WeaponLevelDatas weapon_level = 5;
	ScenicLevelDatas scenic_level = 6;
	CrystalLevelDatas crystal_level = 7;
	PhotoLevelDatas photo_level = 8;
	DataLevelDatas data_level = 9;
	FileLevelDatas file_level = 10;
	BookLevelDatas book_level = 11;
	TapeLevelDatas tape_level = 12;
	CollectItemLevelDatas collect_item_level = 13;
	PortalLevelDatas portal_level = 14;
	PhotoItemLevelDatas photo_item_level = 15;
}
message playerLevelDatas {
	repeated playerLevelConfigure datas = 1;
}
message playerLevelConfigure {
	int32 id = 1;
	int32 need_exp = 2;
	int32 monster_level = 3;
	int32 reward_id = 4;
	int32 description_id = 5;
	int32 level_up_description_id = 6;
	int32 player_vitality = 7;
	int32 player_energy = 8;
}
message WorldLevelDatas {
	repeated WorldLevelConfigure datas = 1;
}
message WorldLevelConfigure {
	int32 id = 1;
	int32 level = 2;
	int32 text_id = 3;
	int32 monster_level = 4;
	repeated WorldLevelInfo world_level_info = 5;
}
message WorldLevelInfo {
	int32 achieve_id = 1;
	int32 flag_id = 2;
}
message NormalLevelDatas {
	repeated NormalLevelConfigure datas = 1;
}
message NormalLevelConfigure {
	int32 id = 1;
	repeated NormalLevelInfo normal_level_info = 2;
}
message NormalLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message GuideLevelDatas {
	repeated GuideLevelConfigure datas = 1;
}
message GuideLevelConfigure {
	int32 id = 1;
	repeated GuideLevelInfo guide_level_info = 2;
}
message GuideLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message WeaponLevelDatas {
	repeated WeaponLevelConfigure datas = 1;
}
message WeaponLevelConfigure {
	int32 id = 1;
	repeated WeaponLevelInfo weapon_level_info = 2;
}
message WeaponLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message ScenicLevelDatas {
	repeated ScenicLevelConfigure datas = 1;
}
message ScenicLevelConfigure {
	int32 id = 1;
	repeated ScenicLevelInfo scenic_level_info = 2;
}
message ScenicLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message CrystalLevelDatas {
	repeated CrystalLevelConfigure datas = 1;
}
message CrystalLevelConfigure {
	int32 id = 1;
	repeated CrystalLevelInfo crystal_level_info = 2;
}
message CrystalLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message PhotoLevelDatas {
	repeated PhotoLevelConfigure datas = 1;
}
message PhotoLevelConfigure {
	int32 id = 1;
	repeated PhotoLevelInfo photo_level_info = 2;
}
message PhotoLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message DataLevelDatas {
	repeated DataLevelConfigure datas = 1;
}
message DataLevelConfigure {
	int32 id = 1;
	repeated DataLevelInfo data_level_info = 2;
}
message DataLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message FileLevelDatas {
	repeated FileLevelConfigure datas = 1;
}
message FileLevelConfigure {
	int32 id = 1;
	repeated FileLevelInfo file_level_info = 2;
}
message FileLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message BookLevelDatas {
	repeated BookLevelConfigure datas = 1;
}
message BookLevelConfigure {
	int32 id = 1;
	repeated BookLevelInfo book_level_info = 2;
}
message BookLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message TapeLevelDatas {
	repeated TapeLevelConfigure datas = 1;
}
message TapeLevelConfigure {
	int32 id = 1;
	repeated TapeLevelInfo tape_level_info = 2;
}
message TapeLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message CollectItemLevelDatas {
	repeated CollectItemLevelConfigure datas = 1;
}
message CollectItemLevelConfigure {
	int32 id = 1;
	repeated CollectItemLevelInfo collect_item_level_info = 2;
}
message CollectItemLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message PortalLevelDatas {
	repeated PortalLevelConfigure datas = 1;
}
message PortalLevelConfigure {
	int32 id = 1;
	repeated PortalLevelInfo portal_level_info = 2;
}
message PortalLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message PhotoItemLevelDatas {
	repeated PhotoItemLevelConfigure datas = 1;
}
message PhotoItemLevelConfigure {
	int32 id = 1;
	repeated PhotoItemLevelInfo photo_item_level_info = 2;
}
message PhotoItemLevelInfo {
	int32 level = 1;
	int32 need_exp = 2;
	int32 guide_voice = 3;
}
message AllLifeGatherDatas {
	LifeGatherDatas life_gather = 1;
	LifeGatherItemDatas life_gather_item = 2;
	LifeGatherSpellDatas life_gather_spell = 3;
}
message LifeGatherDatas {
	repeated LifeGatherConfigure datas = 1;
}
message LifeGatherConfigure {
	int32 id = 1;
	int32 upgrade_level_by_proficiency = 2;
	int32 need_item_id = 3;
	int32 need_item_count = 4;
	repeated LifeGatherLevelAchieveConfigureItem life_gather_level_achieve = 5;
}
message LifeGatherLevelAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 proficiency = 2;
	int32 complete_limit = 3;
}
message LifeGatherItemDatas {
	repeated LifeGatherItemConfigure datas = 1;
}
message LifeGatherItemConfigure {
	int32 id = 1;
	bool is_show = 2;
	int32 need_formula_item_id = 3;
	int32 gather_level = 4;
	int32 need_item_id = 5;
	int32 need_item_count = 6;
	int32 item_id = 7;
	repeated LifeGatherAchieveConfigureItem life_gather_achieve_rewards = 8;
	int32 new_gather_type = 9;
}
message LifeGatherAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 reward_id = 2;
}
message LifeGatherSpellDatas {
	repeated LifeGatherSpellConfigure datas = 1;
}
message LifeGatherSpellConfigure {
	int32 id = 1;
	repeated LifeGatherSpellItemsConfigureItem life_gather_spell_items = 2;
}
message LifeGatherSpellItemsConfigureItem {
	int32 level = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 new_life_spell_effect_type = 4;
	float spell_param1 = 5;
	float spell_param2 = 6;
	int32 need_gather_level = 7;
	int32 need_time = 8;
	int32 need_currency_id = 9;
	int32 need_currency_count = 10;
	repeated LifeGatherNeedItems life_gather_need_item = 11;
}
message LifeGatherNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message AllMailDatas {
	MailDatas mail = 1;
}
message MailDatas {
	repeated MailConfigure datas = 1;
}
message MailConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 text_id = 3;
	int32 day = 4;
	int32 new_mail_type = 5;
}
message AllMakeDatas {
	MakeLevelDatas make_level = 1;
	MakeItemDatas make_item = 2;
	MakeSpellDatas make_spell = 3;
}
message MakeLevelDatas {
	repeated MakeLevelConfigure datas = 1;
}
message MakeLevelConfigure {
	int32 id = 1;
	int32 upgrade_level_by_proficiency = 2;
	int32 need_item_id = 3;
	int32 need_item_count = 4;
	repeated MakeLevelAchieveConfigureItem make_level_achieve = 5;
}
message MakeLevelAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 proficiency = 2;
	int32 complete_limit = 3;
}
message MakeItemDatas {
	repeated MakeItemConfigure datas = 1;
}
message MakeItemConfigure {
	int32 id = 1;
	bool is_show = 2;
	bool is_handbook_show = 3;
	int32 need_showbook_item_id = 4;
	int32 need_formula_item_id = 5;
	int32 make_level = 6;
	int32 need_time = 7;
	int32 need_item_id = 8;
	int32 need_item_count = 9;
	string opening_time = 10;
	string closing_time = 11;
	repeated MakeItemConfigureItem make_items = 12;
	float successful_probability = 13;
	int32 get_item_id = 14;
	repeated MakeAchieveConfigureItem make_achieve_rewards = 15;
	int32 new_make_tool_type = 16;
	int32 new_make_type = 17;
	int32 new_make_page_type = 18;
}
message MakeItemConfigureItem {
	int32 item_id = 1;
	int32 item_count = 2;
}
message MakeAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 reward_id = 2;
}
message MakeSpellDatas {
	repeated MakeSpellConfigure datas = 1;
}
message MakeSpellConfigure {
	int32 id = 1;
	repeated MakeSpellItemsConfigureItem make_spell_items = 2;
}
message MakeSpellItemsConfigureItem {
	int32 level = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 new_life_spell_effect_type = 4;
	float spell_param1 = 5;
	float spell_param2 = 6;
	int32 need_make_level = 7;
	int32 need_time = 8;
	int32 need_currency_id = 9;
	int32 need_currency_count = 10;
	repeated MakeNeedItems make_need_item = 11;
}
message MakeNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message AllManualDatas {
	ManualDatas manual = 1;
	ManualDungeonDatas manual_dungeon = 2;
	ManualShowRewardDatas manual_show_reward = 3;
}
message ManualDatas {
	repeated ManualConfigure datas = 1;
}
message ManualConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	repeated ManualItems manual_items = 4;
}
message ManualItems {
	int32 index = 1;
	int32 index_icon_id = 2;
	int32 index_text_id = 3;
	bool is_transfer = 4;
	int32 transfer_scene_id = 5;
	int32 reward_id = 6;
	int32 un_lock_reward_id = 7;
	int32 flag_id = 8;
	repeated float position = 9;
	repeated float rotation = 10;
}
message ManualDungeonDatas {
	repeated ManualDungeonConfigure datas = 1;
}
message ManualDungeonConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	repeated ManualDungeonItems manual_dungeon_items = 4;
}
message ManualDungeonItems {
	int32 transfer_scene_id = 1;
	int32 un_lock_reward_id = 2;
	int32 flag_id = 3;
	repeated float position = 4;
	repeated float rotation = 5;
	int32 index_icon_id = 6;
	int32 index_text_id = 7;
	bool is_show_unlock = 8;
}
message ManualShowRewardDatas {
	repeated ManualShowRewardConfigure datas = 1;
}
message ManualShowRewardConfigure {
	int32 id = 1;
	repeated ManualRewardItems manual_reward_items = 2;
}
message ManualRewardItems {
	int32 item_id = 1;
	int32 show_num = 2;
	repeated int32 need_items = 3;
	int32 show_item_id = 4;
}
message AllMechanismDatas {
	MechanismDatas mechanism = 1;
}
message MechanismDatas {
	repeated MechanismConfigure datas = 1;
}
message MechanismConfigure {
	int32 id = 1;
	string quest_asset = 2;
}
message AllMiniMapDatas {
	SceneMiniMapDatas scene_mini_map = 1;
	MinimapTypeDatas minimap_type = 2;
}
message SceneMiniMapDatas {
	repeated SceneMiniMapConfigure datas = 1;
}
message SceneMiniMapConfigure {
	int32 id = 1;
	string mini_map_name = 2;
	int32 mini_map_type_id = 3;
}
message MinimapTypeDatas {
	repeated MinimapTypeConfigure datas = 1;
}
message MinimapTypeConfigure {
	int32 id = 1;
	repeated MiniMapTypeInfo mini_map_type_info = 2;
}
message MiniMapTypeInfo {
	int32 item_id = 1;
	int32 text_id = 2;
	int32 new_mini_map_type = 3;
}
message AllMonsterDatas {
	MonsterCharacterDatas monster_character_data = 1;
	MonsterCharacterGrowthModelDatas monster_growth_model = 2;
	MonsterDungeonCharacterGrowthModelDatas monster_dungeon_growth_model = 3;
}
message MonsterCharacterDatas {
	repeated MonsterCharacterConfigure datas = 1;
}
message MonsterCharacterConfigure {
	int32 id = 1;
	int32 growth_model_id = 2;
	int32 dungeon_growth_model_id = 3;
	repeated int32 normal_spell_i_ds = 4;
	repeated int32 special_spell_i_ds = 5;
	repeated int32 passive_spell_i_ds = 6;
	int32 name_id = 7;
	int32 character_icon = 8;
	int32 reward_pool_id = 9;
	string asset_full_name = 10;
	int32 new_sex = 11;
	int32 new_camp_type = 12;
	int32 new_tag = 13;
	int32 new_armor_type = 14;
	int32 new_element_type = 15;
}
message MonsterCharacterGrowthModelDatas {
	repeated MonsterCharacterGrowthModelConfigure datas = 1;
}
message MonsterCharacterGrowthModelConfigure {
	int32 id = 1;
	repeated MonsterCharacterGrowthModelLevelInfo level_group_info = 2;
}
message MonsterCharacterGrowthModelLevelInfo {
	int32 level = 1;
	float max_hp = 2;
	float max_mp = 3;
	float attack = 4;
	float defense = 5;
	float hurt_correction = 6;
	float armor_breaking = 7;
	float melee_defend = 8;
	float remote_defend = 9;
	float windy_damage = 10;
	float fire_damage = 11;
	float water_damage = 12;
	float light_damage = 13;
	float dark_damage = 14;
	float thunder_damage = 15;
	float windy_defend = 16;
	float fire_defend = 17;
	float water_defend = 18;
	float light_defend = 19;
	float dark_defend = 20;
	float thunder_defend = 21;
	float max_sp = 22;
	float sp_regenerate_speed = 23;
	float damage_balance = 24;
	float critical_ratio = 25;
	float critical_ratio_defend = 26;
	float critical_damage_percent = 27;
	float critical_damage_defend_percent = 28;
	float block_ratio = 29;
	float block_ratio_defend_percent = 30;
	float max_break = 31;
	float break_markup = 32;
	float break_regenerate_speed = 33;
	float break_regenerate_delay = 34;
	float break_damage_percent = 35;
	float breaking_damage_percent = 36;
	float break_damage_critical_percent = 37;
	float break_damage_counter_percent = 38;
	float break_damage_defend_percent = 39;
	float counter_damage_percent = 40;
	float counter_damage_defend_percent = 41;
	float max_critical_ratio = 42;
}
message MonsterDungeonCharacterGrowthModelDatas {
	repeated MonsterDungeonCharacterGrowthModelConfigure datas = 1;
}
message MonsterDungeonCharacterGrowthModelConfigure {
	int32 id = 1;
	repeated MonsterDungeonCharacterGrowthModelLevelInfo dungeon_level_group_info = 2;
}
message MonsterDungeonCharacterGrowthModelLevelInfo {
	int32 level = 1;
	float max_hp = 2;
	float max_mp = 3;
	float attack = 4;
	float defense = 5;
	float hurt_correction = 6;
	float armor_breaking = 7;
	float melee_defend = 8;
	float remote_defend = 9;
	float windy_damage = 10;
	float fire_damage = 11;
	float water_damage = 12;
	float light_damage = 13;
	float dark_damage = 14;
	float thunder_damage = 15;
	float windy_defend = 16;
	float fire_defend = 17;
	float water_defend = 18;
	float light_defend = 19;
	float dark_defend = 20;
	float thunder_defend = 21;
	float max_sp = 22;
	float sp_regenerate_speed = 23;
	float damage_balance = 24;
	float critical_ratio = 25;
	float critical_ratio_defend = 26;
	float critical_damage_percent = 27;
	float critical_damage_defend_percent = 28;
	float block_ratio = 29;
	float block_ratio_defend_percent = 30;
	float max_break = 31;
	float break_markup = 32;
	float break_regenerate_speed = 33;
	float break_regenerate_delay = 34;
	float break_damage_percent = 35;
	float breaking_damage_percent = 36;
	float break_damage_critical_percent = 37;
	float break_damage_counter_percent = 38;
	float break_damage_defend_percent = 39;
	float counter_damage_percent = 40;
	float counter_damage_defend_percent = 41;
	float max_critical_ratio = 42;
}
message AllMoonStoneDatas {
	StoneAreaDataDatas stone_area_data = 1;
	StoneUnlockDataDatas stone_unlock_data = 2;
	StoneRewardQuestDataDatas stone_reward_quest_data = 3;
}
message StoneAreaDataDatas {
	repeated StoneAreaDataConfigure datas = 1;
}
message StoneAreaDataConfigure {
	int32 id = 1;
	int32 scene_id = 2;
	int32 item_id = 3;
	int32 unlock_item_id = 4;
	int32 unlock_id = 5;
	int32 reward_quest_id = 6;
	int32 unlock_count = 7;
	int32 icon_id = 8;
	int32 text_id = 9;
	int32 reward_icon_id = 10;
	int32 reward_text_id = 11;
}
message StoneUnlockDataDatas {
	repeated StoneUnlockDataConfigure datas = 1;
}
message StoneUnlockDataConfigure {
	int32 id = 1;
	repeated StoneUnlockDataGroupInfo stone_unlock_data_group_info = 2;
}
message StoneUnlockDataGroupInfo {
	int32 box_id = 1;
	int32 column_id = 2;
	int32 row_id = 3;
	int32 icon_id = 4;
	int32 string_id = 5;
	int32 item_id = 6;
	int32 item_count = 7;
	repeated int32 relate_box_i_ds = 8;
	repeated int32 unlock_achieve_id = 9;
}
message StoneRewardQuestDataDatas {
	repeated StoneRewardQuestDataConfigure datas = 1;
}
message StoneRewardQuestDataConfigure {
	int32 id = 1;
	repeated StoneRewardQuestDataGroupInfo stone_reward_quest_data_group_info = 2;
}
message StoneRewardQuestDataGroupInfo {
	int32 index_id = 1;
	int32 icon_id = 2;
	int32 show_achieve_condition_id = 3;
	int32 achieve_condition_id = 4;
}
message AllMsgCodeTipsDatas {
	MsgCodeTipsDatas msg_code_tips = 1;
	NetCloseReasonTipsDatas net_close_reason_tips = 2;
}
message MsgCodeTipsDatas {
	repeated MsgCodeTipsConfigure datas = 1;
}
message MsgCodeTipsConfigure {
	int32 id = 1;
	string key = 2;
	string chinese_simplified = 3;
	string chinese_traditional = 4;
	string english = 5;
	string japanese = 6;
	string korea = 7;
}
message NetCloseReasonTipsDatas {
	repeated NetCloseReasonTipsConfigure datas = 1;
}
message NetCloseReasonTipsConfigure {
	int32 id = 1;
	string key = 2;
	string chinese_simplified = 3;
	string chinese_traditional = 4;
	string english = 5;
	string japanese = 6;
	string korea = 7;
}
message AllNPCDatas {
	InfoDatas info = 1;
	DelegateQuestPoolDatas delegate_quest_pool = 2;
	QuestPoolDatas quest_pool = 3;
	RandomQuestPoolDatas random_quest_pool = 4;
	TalkInfoDatas talk_info = 5;
	NpcShopDatas npc_shop = 6;
}
message InfoDatas {
	repeated InfoConfigure datas = 1;
}
message InfoConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 texture_id = 3;
	string opening_time = 4;
	string closing_time = 5;
	string path = 6;
	string prefab = 7;
	repeated NPCInfoConfigureFuncItem funcs = 8;
}
message NPCInfoConfigureFuncItem {
	int32 new_npc_function = 1;
	int32 sub_meter_id = 2;
}
message DelegateQuestPoolDatas {
	repeated DelegateQuestPoolConfigure datas = 1;
}
message DelegateQuestPoolConfigure {
	int32 id = 1;
	repeated DelegateQuestPoolGroupInfo delegate_quest_pool_group_info = 2;
}
message DelegateQuestPoolGroupInfo {
	int32 quest_id = 1;
	int32 limit_level = 2;
	int32 unlock_scene_id = 3;
	repeated int32 before_id = 4;
	int32 quest_unlock_show = 5;
	int32 receive_talk_id = 6;
	int32 finish_talk_id = 7;
}
message QuestPoolDatas {
	repeated QuestPoolConfigure datas = 1;
}
message QuestPoolConfigure {
	int32 id = 1;
	repeated QuestPoolGroupInfo quest_pool_group_info = 2;
}
message QuestPoolGroupInfo {
	int32 quest_id = 1;
	int32 limit_level = 2;
	int32 before_id = 3;
	int32 receive_talk_id = 4;
	int32 finish_talk_id = 5;
}
message RandomQuestPoolDatas {
	repeated RandomQuestPoolConfigure datas = 1;
}
message RandomQuestPoolConfigure {
	int32 id = 1;
	repeated RandomQuestPoolGroupInfo randomest_pool_group_info = 2;
}
message RandomQuestPoolGroupInfo {
	int32 quest_id = 1;
	int32 weight = 2;
	int32 limit_level = 3;
	int32 before_id = 4;
	int32 receive_talk_id = 5;
	int32 finish_talk_id = 6;
}
message TalkInfoDatas {
	repeated TalkInfoConfigure datas = 1;
}
message TalkInfoConfigure {
	int32 id = 1;
	repeated TalkInfoGroupInfo talk_info_group_info = 2;
}
message TalkInfoGroupInfo {
	int32 priority = 1;
	int32 new_talk_condition = 2;
	repeated int32 para = 3;
	int32 content_id = 4;
}
message NpcShopDatas {
	repeated NpcShopConfigure datas = 1;
}
message NpcShopConfigure {
	int32 id = 1;
	repeated NpcShopGroupInfo npc_shop_group_info = 2;
}
message NpcShopGroupInfo {
	int32 shop_id = 1;
}
message AllNpcQuestDatas {
	NpcQuestInfoDatas npc_quest_info = 1;
	NpcQuestPoolDatas npc_quest_pool = 2;
}
message NpcQuestInfoDatas {
	repeated NpcQuestInfoConfigure datas = 1;
}
message NpcQuestInfoConfigure {
	int32 id = 1;
	int32 refresh_time = 2;
	int32 refresh_currency = 3;
	int32 refresh_cost = 4;
	int32 quest_pool_id = 5;
	int32 opened_dialog = 6;
	int32 normal_donate_dialog = 7;
}
message NpcQuestPoolDatas {
	repeated NpcQuestPoolConfigure datas = 1;
}
message NpcQuestPoolConfigure {
	int32 id = 1;
	repeated NpcQuestPoolItem npc_quest_pools = 2;
}
message NpcQuestPoolItem {
	int32 quest_id = 1;
	int32 need_item_id = 2;
	int32 need_item_min_count = 3;
	int32 need_item_max_count = 4;
	int32 amity_add = 5;
	int32 weight = 6;
	int32 need_min_level = 7;
	int32 need_max_level = 8;
	repeated NpcQuestPoolRewardItem npc_quest_pool_reward_item = 9;
}
message NpcQuestPoolRewardItem {
	int32 reward_item_id = 1;
	int32 reward_item_count = 2;
}
message AllPassiveSpellDatas {
	SpellPassiveDatas spell_passive = 1;
}
message SpellPassiveDatas {
	repeated SpellPassiveConfigure datas = 1;
}
message SpellPassiveConfigure {
	int32 id = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	repeated float script_params = 4;
	int32 script_id = 5;
	bool hide_in_spell_panel = 6;
}
message AllPlayerAbilityDatas {
	PlayerAbilityDatas player_ability = 1;
}
message PlayerAbilityDatas {
	repeated PlayerAbilityConfigure datas = 1;
}
message PlayerAbilityConfigure {
	int32 id = 1;
	float para = 2;
	repeated int32 scene_i_ds = 3;
	int32 new_unlock_ability_type = 4;
}
message AllPlayerUnlockDatas {
	PlayerUnlockDatas player_unlock = 1;
}
message PlayerUnlockDatas {
	repeated PlayerUnlockConfigure datas = 1;
}
message PlayerUnlockConfigure {
	int32 id = 1;
	int32 para = 2;
	int32 item_id = 3;
	bool is_show_tips = 4;
	int32 new_unlock_function_type = 5;
}
message AllPosterDatas {
	PosterDatas poster = 1;
	PropertyDatas poster_property = 2;
	PosterIllustrationDatas poster_illustration = 3;
}
message PosterDatas {
	repeated PosterConfigure datas = 1;
}
message PosterConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 illustration_id = 3;
	int32 property_id = 4;
}
message PropertyDatas {
	repeated PropertyConfigure datas = 1;
}
message PropertyConfigure {
	int32 id = 1;
	repeated PosterPropertyGroupInfo poster_property_group_info = 2;
}
message PosterPropertyGroupInfo {
	int32 star = 1;
	int32 spell_passive = 2;
	int32 new_poster_tag1 = 3;
	int32 new_poster_tag2 = 4;
	int32 new_poster_tag3 = 5;
}
message PosterIllustrationDatas {
	repeated PosterIllustrationConfigure datas = 1;
}
message PosterIllustrationConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 texture_id = 3;
	bool is_show = 4;
}
message AllQuestDatas {
	QuestDatas quest = 1;
	QuestResourceDatas quest_resource = 2;
	ConditionSetGroupDatas condition_set_group = 3;
}
message QuestDatas {
	repeated QuestConfigure datas = 1;
}
message QuestConfigure {
	int32 id = 1;
	int32 quest_group = 2;
	int32 name = 3;
	int32 limit_num = 4;
	bool is_immed_reward = 5;
	int32 reward = 6;
	int32 first_reward = 7;
	int32 condition_set_group_id = 8;
	int32 receive_quest_talk_id = 9;
	int32 finish_quest_talk_id = 10;
	int32 npc_pic_id = 11;
	int32 icon_id = 12;
	int32 receive_quest_dialog_id = 13;
	int32 finish_quest_dialog_id = 14;
	int32 guide_voice_id = 15;
	int32 voice_condition_count = 16;
	int32 new_type = 17;
}
message QuestResourceDatas {
	repeated QuestResourceConfigure datas = 1;
}
message QuestResourceConfigure {
	int32 id = 1;
	repeated QuestResourceItems quest_resource_items = 2;
}
message QuestResourceItems {
	int32 index = 1;
	int32 new_quest_resource_type = 2;
	int32 quest_resource_id = 3;
	bool is_track = 4;
	float track_hide = 5;
	float track_show = 6;
	int32 scene_id = 7;
	int32 text_id = 8;
	bool is_show_quest_status0 = 9;
	bool is_show_quest_status1 = 10;
	bool is_show_quest_status2 = 11;
	bool is_show_quest_status3 = 12;
}
message ConditionSetGroupDatas {
	repeated ConditionSetGroupConfigure datas = 1;
}
message ConditionSetGroupConfigure {
	int32 id = 1;
	repeated QuestConditionSet quest_condition_set = 2;
}
message QuestConditionSet {
	repeated int32 achieve_condition_id = 1;
	repeated int32 resource_id = 2;
}
message AllRandomEventDatas {
	RandomEventDatas random_event = 1;
	RandomEventResourceDatas random_event_resource = 2;
}
message RandomEventDatas {
	repeated RandomEventConfigure datas = 1;
}
message RandomEventConfigure {
	int32 id = 1;
	int32 group = 2;
	int32 lv = 3;
	int32 item_id = 4;
	int32 quest_id = 5;
	int32 npc_id = 6;
	bool is_receive = 7;
	int32 resource_id = 8;
	int32 text_id = 9;
}
message RandomEventResourceDatas {
	repeated RandomEventResourceConfigure datas = 1;
}
message RandomEventResourceConfigure {
	int32 id = 1;
	repeated RandomEventResourceItems random_event_resource_items = 2;
}
message RandomEventResourceItems {
	int32 index = 1;
	string path = 2;
	string name = 3;
}
message AllRewardDatas {
	RewardPoolDatas reward_pool = 1;
	RewardItemPoolDatas reward_item_pool = 2;
	WorldLevelPoolDatas world_level_pool = 3;
}
message RewardPoolDatas {
	repeated RewardPoolConfigure datas = 1;
}
message RewardPoolConfigure {
	int32 id = 1;
	repeated RewardPoolGroupInfo reward_pool_group = 2;
}
message RewardPoolGroupInfo {
	int32 reward_pool_group_id = 1;
}
message RewardItemPoolDatas {
	repeated RewardItemPoolConfigure datas = 1;
}
message RewardItemPoolConfigure {
	int32 id = 1;
	repeated RewardItemPoolGroupInfo reward_item_pool_group = 2;
}
message RewardItemPoolGroupInfo {
	int32 item_id = 1;
	repeated int32 need_items = 2;
	int32 show_item_id = 3;
	bool show_num = 4;
	int32 item_min_count = 5;
	int32 item_max_count = 6;
	int32 min_level_limit = 7;
	int32 max_level_limit = 8;
}
message WorldLevelPoolDatas {
	repeated WorldLevelPoolConfigure datas = 1;
}
message WorldLevelPoolConfigure {
	int32 id = 1;
	repeated WorldLevelPoolGroupInfo world_level_pool_group = 2;
}
message WorldLevelPoolGroupInfo {
	int32 world_level = 1;
	int32 pool_id = 2;
}
message AllRiddleDatas {
	RiddleDatas riddle = 1;
}
message RiddleDatas {
	repeated RiddleConfigure datas = 1;
}
message RiddleConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	int32 reward_pool_id = 4;
	int32 repeat_reward_pool_id = 5;
	string asset_full_name = 6;
	int32 new_riddle_type = 7;
	int32 new_gain_reward_type = 8;
	int32 new_repeat_gain_reward_type = 9;
}
message AllSceneDatas {
	SceneDatas scene = 1;
	SceneProgressDatas scene_progress = 2;
	GatherNumberDatas gather_number = 3;
	SceneThemeDatas scene_theme = 4;
}
message SceneDatas {
	repeated SceneConfigure datas = 1;
}
message SceneConfigure {
	int32 id = 1;
	int32 show_index = 2;
	int32 text_id = 3;
	int32 icon_id = 4;
	string scene_name = 5;
	int32 area_id = 6;
	int32 progress_id = 7;
	int32 gather_rule_id = 8;
	int32 gather_level = 9;
	int32 para1 = 10;
	float para2 = 11;
	int32 show_para1 = 12;
	float show_para2 = 13;
	int32 scene_monster_min_level = 14;
	float encounter_min_distance = 15;
	float encounter_max_distance = 16;
	string scene_show_day = 17;
	string scene_unlock_day = 18;
	int32 min_map_id = 19;
	int32 new_scene_type = 20;
	int32 new_scene_unlock_type = 21;
	int32 new_scene_show_type = 22;
}
message SceneProgressDatas {
	repeated SceneProgressConfigure datas = 1;
}
message SceneProgressConfigure {
	int32 id = 1;
	repeated SceneProgressInfo scene_progress_info = 2;
}
message SceneProgressInfo {
	int32 new_progress_type = 1;
	int32 total = 2;
}
message GatherNumberDatas {
	repeated GatherNumberConfigure datas = 1;
}
message GatherNumberConfigure {
	int32 id = 1;
	int32 wood_num = 2;
	int32 flower_num = 3;
	int32 stone_num = 4;
	int32 butterfly_num = 5;
	int32 water_num = 6;
	int32 pick_num = 7;
	int32 lucky_finishwood_num = 8;
	int32 lucky_finishflower_num = 9;
	int32 lucky_finishstone_num = 10;
	int32 lucky_finishbutterfly_num = 11;
	int32 lucky_finishwater_num = 12;
	int32 lucky_finishpick_num = 13;
}
message SceneThemeDatas {
	repeated SceneThemeConfigure datas = 1;
}
message SceneThemeConfigure {
	int32 id = 1;
	string asset_path = 2;
	string opening_time = 3;
	string closing_time = 4;
}
message AllScenicDatas {
	ScenicDatas scenic = 1;
}
message ScenicDatas {
	repeated ScenicConfigure datas = 1;
}
message ScenicConfigure {
	int32 id = 1;
	int32 first_reward_id = 2;
	int32 guide_voice = 3;
	string asset_full_name = 4;
}
message AllShopDatas {
	ShopInfoDatas info = 1;
	ShopGridDatas grid = 2;
	ShopPoolDatas pool = 3;
	ShopIncreasingDatas increasing = 4;
	ShopDatas shop = 5;
	RecommendationDatas recommendation = 6;
}
message ShopInfoDatas {
	repeated ShopInfoConfigure datas = 1;
}
message ShopInfoConfigure {
	int32 id = 1;
	int32 ui_index = 2;
	int32 text_id = 3;
	int32 icon_id = 4;
	string opening_time = 5;
	string closing_time = 6;
	int32 grid_id = 7;
	int32 refresh_item_id = 8;
	int32 refresh_item_cost = 9;
	int32 unlock_item_id = 10;
	repeated int32 item_i_ds = 11;
	int32 new_shop_type = 12;
}
message ShopGridDatas {
	repeated ShopGridConfigure datas = 1;
}
message ShopGridConfigure {
	int32 id = 1;
	repeated ShopGridConfigureItem items = 2;
}
message ShopGridConfigureItem {
	int32 grid_id = 1;
	int32 index = 2;
	int32 new_grid_condition_type = 3;
	int32 condition_param = 4;
	int32 first_buy_shop_pool_id = 5;
	int32 shop_pool_id = 6;
	int32 icon_id = 7;
	int32 buy_max_count = 8;
	int32 new_shop_refresh_type = 9;
	repeated int32 refresh_time = 10;
	string goods_id = 11;
}
message ShopPoolDatas {
	repeated ShopPoolConfigure datas = 1;
}
message ShopPoolConfigure {
	int32 id = 1;
	repeated ShopPoolConfigureItem items = 2;
}
message ShopPoolConfigureItem {
	int32 item_id = 1;
	bool is_repeated_in_bag = 2;
	int32 item_num = 3;
	int32 index = 4;
	string name = 5;
	int32 add_item_id = 6;
	int32 add_item_num = 7;
	string opening_time = 8;
	string closing_time = 9;
	float discount = 10;
	float show_discount = 11;
	bool is_hide_in_bag = 12;
	repeated ShopCurrencyItems shop_currency_item = 13;
}
message ShopCurrencyItems {
	int32 currency_id = 1;
	int32 price = 2;
	int32 increasing_id = 3;
}
message ShopIncreasingDatas {
	repeated ShopIncreasingConfigure datas = 1;
}
message ShopIncreasingConfigure {
	int32 id = 1;
	repeated ShopIncreasingConfigureItem items = 2;
}
message ShopIncreasingConfigureItem {
	int32 price = 1;
}
message ShopDatas {
	repeated ShopConfigure datas = 1;
}
message ShopConfigure {
	int32 id = 1;
}
message RecommendationDatas {
	repeated RecommendationConfigure datas = 1;
}
message RecommendationConfigure {
	int32 id = 1;
	int32 text_id = 2;
	int32 icon_id = 3;
	repeated ShopRecommendationItem items = 4;
}
message ShopRecommendationItem {
	int32 page_icon_id = 1;
	int32 page_text_id = 2;
	int32 shop_id = 3;
	int32 shop_pool_id = 4;
	string opening_time = 5;
	string closing_time = 6;
}
message AllSpellDatas {
	SpellInfoDatas spell_info = 1;
	SpellLevelUpInfoDatas spell_level_up_info = 2;
}
message SpellInfoDatas {
	repeated SpellInfoConfigure datas = 1;
}
message SpellInfoConfigure {
	int32 id = 1;
	int32 icon_id = 2;
	repeated SpellConfigure spell_configure_items = 3;
}
message SpellConfigure {
	int32 level = 1;
	int32 cost_id = 2;
	int32 text_id = 3;
	bool is_can_break = 4;
	repeated float custom_break_value = 5;
	repeated float script_params = 6;
	float buffer_time = 7;
	bool is_show_cd = 8;
	float cd = 9;
	int32 cost_mp = 10;
	int32 add_mp_hit = 11;
	int32 add_mp_kill = 12;
	float ultra_cd = 13;
	int32 cost_up = 14;
	int32 add_up_hit = 15;
	int32 add_up_kill = 16;
	int32 add_up_break = 17;
	int32 cost_ap = 18;
	int32 add_ap_hit = 19;
	int32 add_ap_kill = 20;
	int32 add_ap_break = 21;
	bool hide_in_spell_panel = 22;
	int32 new_attack_type = 23;
	int32 new_utrla_spell_timing_type = 24;
	int32 new_spell_type = 25;
	int32 new_damage_type = 26;
	int32 new_spell_tag1 = 27;
	int32 new_spell_tag2 = 28;
	int32 new_spell_tag3 = 29;
}
message SpellLevelUpInfoDatas {
	repeated SpellLevelUpInfoConfigure datas = 1;
}
message SpellLevelUpInfoConfigure {
	int32 id = 1;
	repeated SpellLevelUpInfoItem spell_level_up_info_item = 2;
}
message SpellLevelUpInfoItem {
	repeated int32 item_id = 1;
	repeated int32 num = 2;
}
message AllSpellCardDatas {
	SpellCardDatas spell_card = 1;
	SpellCardPropertyDatas spell_card_property = 2;
}
message SpellCardDatas {
	repeated SpellCardConfigure datas = 1;
}
message SpellCardConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 property_id = 3;
	int32 new_weapon_type = 4;
	int32 new_weapon_system_type = 5;
	int32 new_spell_form_type = 6;
}
message SpellCardPropertyDatas {
	repeated SpellCardPropertyConfigure datas = 1;
}
message SpellCardPropertyConfigure {
	int32 id = 1;
	repeated SpellCardPropertyGroupInfo spell_card_property_group_info = 2;
}
message SpellCardPropertyGroupInfo {
	int32 level = 1;
	int32 spell_id = 2;
	int32 spell_level = 3;
	repeated SpellCardUpItems spell_card_up_item = 4;
}
message SpellCardUpItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message AllSpinDatas {
	SpinLevelDatas spin_level = 1;
	SpinItemDatas spin_item = 2;
	SpinSpellDatas spin_spell = 3;
}
message SpinLevelDatas {
	repeated SpinLevelConfigure datas = 1;
}
message SpinLevelConfigure {
	int32 id = 1;
	int32 upgrade_level_by_proficiency = 2;
	int32 need_item_id = 3;
	int32 need_item_count = 4;
	repeated SpinLevelAchieveConfigureItem spin_level_achieve = 5;
}
message SpinLevelAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 proficiency = 2;
	int32 complete_limit = 3;
}
message SpinItemDatas {
	repeated SpinItemConfigure datas = 1;
}
message SpinItemConfigure {
	int32 id = 1;
	bool is_show = 2;
	bool is_handbook_show = 3;
	int32 need_showbook_item_id = 4;
	int32 need_formula_item_id = 5;
	int32 spin_level = 6;
	int32 need_time = 7;
	string opening_time = 8;
	string closing_time = 9;
	int32 need_item_id = 10;
	int32 need_item_count = 11;
	repeated SpinItemConfigureItem spin_items = 12;
	float successful_probability = 13;
	int32 get_item_id = 14;
	repeated SpinAchieveConfigureItem spin_achieve_rewards = 15;
	int32 new_spin_tool_type = 16;
	int32 new_spin_type = 17;
	int32 new_spin_page_type = 18;
}
message SpinItemConfigureItem {
	int32 item_id = 1;
	int32 item_count = 2;
}
message SpinAchieveConfigureItem {
	int32 achieve_condition_id = 1;
	int32 reward_id = 2;
}
message SpinSpellDatas {
	repeated SpinSpellConfigure datas = 1;
}
message SpinSpellConfigure {
	int32 id = 1;
	repeated SpinSpellItemsConfigureItem spin_spell_items = 2;
}
message SpinSpellItemsConfigureItem {
	int32 level = 1;
	int32 icon_id = 2;
	int32 text_id = 3;
	int32 new_life_spell_effect_type = 4;
	float spell_param1 = 5;
	float spell_param2 = 6;
	int32 need_spin_level = 7;
	int32 need_time = 8;
	int32 need_currency_id = 9;
	int32 need_currency_count = 10;
	repeated SpinNeedItems spin_need_item = 11;
}
message SpinNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message AllStoryDatas {
	StoryChapterDatas story_chapter = 1;
	StoryDatas story = 2;
	StoryReviewDatas story_review = 3;
	ExtraChapterDatas extra_chapter = 4;
}
message StoryChapterDatas {
	repeated StoryChapterConfigure datas = 1;
}
message StoryChapterConfigure {
	int32 id = 1;
	int32 name = 2;
	int32 icon_id = 3;
	int32 pre_chapter_unlock = 4;
	repeated int32 map_completion_unlock = 5;
	int32 lv_unlock = 6;
	repeated int32 story_list = 7;
}
message StoryDatas {
	repeated StoryConfigure datas = 1;
}
message StoryConfigure {
	int32 id = 1;
	int32 pre_story_unlock = 2;
	int32 lv_unlock = 3;
	repeated int32 map_completion_unlock = 4;
	int32 quest_id = 5;
	int32 reward = 6;
	int32 review_id = 7;
}
message StoryReviewDatas {
	repeated StoryReviewConfigure datas = 1;
}
message StoryReviewConfigure {
	int32 id = 1;
	repeated StoryReviewSet story_review_set = 2;
}
message StoryReviewSet {
	int32 name = 1;
	int32 dialog_id = 2;
}
message ExtraChapterDatas {
	repeated ExtraChapterConfigure datas = 1;
}
message ExtraChapterConfigure {
	int32 id = 1;
	repeated ExtraQuest extra_quest = 2;
}
message ExtraQuest {
	int32 text_id = 1;
	int32 icon_id = 2;
	int32 quest_unlock = 3;
	int32 lv_unlock = 4;
	int32 quest_id = 5;
	int32 review_id = 6;
}
message AllStringDatas {
	StringItemTextDatas string_item_text = 1;
	StringDungeonDatas string_dungeon = 2;
	StringPosterDatas string_poster = 3;
	StringFlagDatas string_flag = 4;
	StringPlayerNameDatas string_player_name = 5;
	StringCharacterNameDatas string_character_name = 6;
	StringSpellDatas string_spell = 7;
	StringNpcDatas string_npc = 8;
	StringBattleNormalTextDatas string_battle_normal_text = 9;
	StringBattleGuideTextDatas string_battle_guide_text = 10;
	StringBattleWeaponTextDatas string_battle_weapon_text = 11;
	StringBattleGatherTextDatas string_battle_gather_text = 12;
	StringBattleDefenderTextDatas string_battle_defender_text = 13;
	StringQuestDatas string_quest_text = 14;
	StringQuestResourceDatas string_quest_resource_text = 15;
	StringCookDatas string_cook_text = 16;
	PassiveDescDatas passive_desc = 17;
	StringSceneDatas string_scene = 18;
	StringCollectFileDatas string_collect_file_text = 19;
	StringCollectDataDatas string_collect_data_text = 20;
	StringCollectItemDatas string_collect_item_text = 21;
	StringCollectTapeDatas string_collect_tape_text = 22;
	StringCollectBookDatas string_collect_book_text = 23;
	StringCollectPortalDatas string_collect_portal_text = 24;
	StringCollectPhotoItemDatas string_collect_photo_item = 25;
	StringAreaDatas string_area_text = 26;
	StringMoonStoneDatas string_moon_stone_text = 27;
	StringRandomEventDatas string_random_event_text = 28;
	StringShopDatas string_shop = 29;
	StringGachaDatas string_gacha = 30;
	StringGlobalDatas string_global = 31;
	StringAbilityDatas string_ability = 32;
	StringAchieveDatas string_achieve = 33;
	StringRiddleDatas string_riddle = 34;
	StringChallengeDatas string_challenge = 35;
	StringExploreDatas string_explore = 36;
	StringNpcQuestDatas string_npc_quest = 37;
	StringChatDatas string_chat = 38;
	StringPlayerLevelDatas string_player_level = 39;
	StringBuffDatas string_buff = 40;
	StringExpressionDatas string_expression = 41;
	StringStoryDatas string_story = 42;
	StringExtraChapterDatas string_extra_chapter = 43;
	StringExtraChapterTitleDatas string_extra_chapter_title = 44;
	StringGlobalBuffDatas string_global_buff = 45;
	StringDialogDatas string_dialog_text = 46;
	StringFishDatas string_fish_text = 47;
	StringMakeDatas string_make_text = 48;
	StringHandicraftDatas string_handicraft_text = 49;
	StringSpinDatas string_spin_text = 50;
	StringManualDatas string_manual_text = 51;
	StringMailDatas string_mail = 52;
	StringAbyssDatas string_abyss = 53;
	StringHeadDatas string_head = 54;
	StringItemSourceDatas string_item_source = 55;
	StringMiniMapDatas string_mini_map = 56;
	StringAchieveQuestDatas string_achieve_quest = 57;
	StringWorldLevelDatas string_world_level = 58;
	StringActivityDatas string_activity = 59;
	StringLifeGatherDatas string_life_gather = 60;
	StringHelpDatas string_help = 61;
}
message StringItemTextDatas {
	repeated StringItemTextConfigure datas = 1;
}
message StringItemTextConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringDungeonDatas {
	repeated StringDungeonConfigure datas = 1;
}
message StringDungeonConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringPosterDatas {
	repeated StringPosterConfigure datas = 1;
}
message StringPosterConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringFlagDatas {
	repeated StringFlagConfigure datas = 1;
}
message StringFlagConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringPlayerNameDatas {
	repeated StringPlayerNameConfigure datas = 1;
}
message StringPlayerNameConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCharacterNameDatas {
	repeated StringCharacterNameConfigure datas = 1;
}
message StringCharacterNameConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringSpellDatas {
	repeated StringSpellConfigure datas = 1;
}
message StringSpellConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringNpcDatas {
	repeated StringNpcConfigure datas = 1;
}
message StringNpcConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringBattleNormalTextDatas {
	repeated StringBattleNormalTextConfigure datas = 1;
}
message StringBattleNormalTextConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringBattleGuideTextDatas {
	repeated StringBattleGuideTextConfigure datas = 1;
}
message StringBattleGuideTextConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringBattleWeaponTextDatas {
	repeated StringBattleWeaponTextConfigure datas = 1;
}
message StringBattleWeaponTextConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringBattleGatherTextDatas {
	repeated StringBattleGatherTextConfigure datas = 1;
}
message StringBattleGatherTextConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringBattleDefenderTextDatas {
	repeated StringBattleDefenderTextConfigure datas = 1;
}
message StringBattleDefenderTextConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringQuestDatas {
	repeated StringQuestConfigure datas = 1;
}
message StringQuestConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringQuestResourceDatas {
	repeated StringQuestResourceConfigure datas = 1;
}
message StringQuestResourceConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCookDatas {
	repeated StringCookConfigure datas = 1;
}
message StringCookConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message PassiveDescDatas {
	repeated PassiveDescConfigure datas = 1;
}
message PassiveDescConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringSceneDatas {
	repeated StringSceneConfigure datas = 1;
}
message StringSceneConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectFileDatas {
	repeated StringCollectFileConfigure datas = 1;
}
message StringCollectFileConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectDataDatas {
	repeated StringCollectDataConfigure datas = 1;
}
message StringCollectDataConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectItemDatas {
	repeated StringCollectItemConfigure datas = 1;
}
message StringCollectItemConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectTapeDatas {
	repeated StringCollectTapeConfigure datas = 1;
}
message StringCollectTapeConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectBookDatas {
	repeated StringCollectBookConfigure datas = 1;
}
message StringCollectBookConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectPortalDatas {
	repeated StringCollectPortalConfigure datas = 1;
}
message StringCollectPortalConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringCollectPhotoItemDatas {
	repeated StringCollectPhotoItemConfigure datas = 1;
}
message StringCollectPhotoItemConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringAreaDatas {
	repeated StringAreaConfigure datas = 1;
}
message StringAreaConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringMoonStoneDatas {
	repeated StringMoonStoneConfigure datas = 1;
}
message StringMoonStoneConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringRandomEventDatas {
	repeated StringRandomEventConfigure datas = 1;
}
message StringRandomEventConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringShopDatas {
	repeated StringShopConfigure datas = 1;
}
message StringShopConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringGachaDatas {
	repeated StringGachaConfigure datas = 1;
}
message StringGachaConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringGlobalDatas {
	repeated StringGlobalConfigure datas = 1;
}
message StringGlobalConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringAbilityDatas {
	repeated StringAbilityConfigure datas = 1;
}
message StringAbilityConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringAchieveDatas {
	repeated StringAchieveConfigure datas = 1;
}
message StringAchieveConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringRiddleDatas {
	repeated StringRiddleConfigure datas = 1;
}
message StringRiddleConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringChallengeDatas {
	repeated StringChallengeConfigure datas = 1;
}
message StringChallengeConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringExploreDatas {
	repeated StringExploreConfigure datas = 1;
}
message StringExploreConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringNpcQuestDatas {
	repeated StringNpcQuestConfigure datas = 1;
}
message StringNpcQuestConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringChatDatas {
	repeated StringChatConfigure datas = 1;
}
message StringChatConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringPlayerLevelDatas {
	repeated StringPlayerLevelConfigure datas = 1;
}
message StringPlayerLevelConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringBuffDatas {
	repeated StringBuffConfigure datas = 1;
}
message StringBuffConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringExpressionDatas {
	repeated StringExpressionConfigure datas = 1;
}
message StringExpressionConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringStoryDatas {
	repeated StringStoryConfigure datas = 1;
}
message StringStoryConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringExtraChapterDatas {
	repeated StringExtraChapterConfigure datas = 1;
}
message StringExtraChapterConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringExtraChapterTitleDatas {
	repeated StringExtraChapterTitleConfigure datas = 1;
}
message StringExtraChapterTitleConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringGlobalBuffDatas {
	repeated StringGlobalBuffConfigure datas = 1;
}
message StringGlobalBuffConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringDialogDatas {
	repeated StringDialogConfigure datas = 1;
}
message StringDialogConfigure {
	int32 id = 1;
	string key = 2;
	string title = 3;
	string content = 4;
}
message StringFishDatas {
	repeated StringFishConfigure datas = 1;
}
message StringFishConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringMakeDatas {
	repeated StringMakeConfigure datas = 1;
}
message StringMakeConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringHandicraftDatas {
	repeated StringHandicraftConfigure datas = 1;
}
message StringHandicraftConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringSpinDatas {
	repeated StringSpinConfigure datas = 1;
}
message StringSpinConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringManualDatas {
	repeated StringManualConfigure datas = 1;
}
message StringManualConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringMailDatas {
	repeated StringMailConfigure datas = 1;
}
message StringMailConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringAbyssDatas {
	repeated StringAbyssConfigure datas = 1;
}
message StringAbyssConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringHeadDatas {
	repeated StringHeadConfigure datas = 1;
}
message StringHeadConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringItemSourceDatas {
	repeated StringItemSourceConfigure datas = 1;
}
message StringItemSourceConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringMiniMapDatas {
	repeated StringMiniMapConfigure datas = 1;
}
message StringMiniMapConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringAchieveQuestDatas {
	repeated StringAchieveQuestConfigure datas = 1;
}
message StringAchieveQuestConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringWorldLevelDatas {
	repeated StringWorldLevelConfigure datas = 1;
}
message StringWorldLevelConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringActivityDatas {
	repeated StringActivityConfigure datas = 1;
}
message StringActivityConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringLifeGatherDatas {
	repeated StringLifeGatherConfigure datas = 1;
}
message StringLifeGatherConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message StringHelpDatas {
	repeated StringHelpConfigure datas = 1;
}
message StringHelpConfigure {
	int32 id = 1;
	repeated string text = 2;
}
message AllTeleportKeyDatas {
	TeleportKeyDatas teleport_key = 1;
}
message TeleportKeyDatas {
	repeated TeleportKeyConfigure datas = 1;
}
message TeleportKeyConfigure {
	int32 id = 1;
	repeated TeleportKeyItem teleport_key_item = 2;
}
message TeleportKeyItem {
	int32 need_unlock_scene_id = 1;
}
message AllTextDatas {
	UITextDatas ui_text = 1;
}
message UITextDatas {
	repeated UITextConfigure datas = 1;
}
message UITextConfigure {
	int32 id = 1;
	string key = 2;
	string chinese_simplified = 3;
	string chinese_traditional = 4;
	string english = 5;
	string japanese = 6;
	string korea = 7;
}
message AllTreasureBoxDatas {
	TreasureBoxDatas treasure_box = 1;
	CollectionTreasureBoxDatas collection_treasure_box = 2;
	EncounterTreasureBoxDatas encounter_treasure_box = 3;
	RiddleTreasureBoxDatas riddle_treasure_box = 4;
	GameTreasureBoxDatas game_treasure_box = 5;
}
message TreasureBoxDatas {
	repeated TreasureBoxConfigure datas = 1;
}
message TreasureBoxConfigure {
	int32 id = 1;
	int32 relate_id = 2;
	int32 new_treasure_box_type = 3;
	int32 new_treasure_box_reward_show_type = 4;
	int32 new_treasure_box_reward_type = 5;
}
message CollectionTreasureBoxDatas {
	repeated CollectionTreasureBoxConfigure datas = 1;
}
message CollectionTreasureBoxConfigure {
	int32 id = 1;
	repeated int32 refresh_time = 2;
	int32 new_refresh_type = 3;
}
message EncounterTreasureBoxDatas {
	repeated EncounterTreasureBoxConfigure datas = 1;
}
message EncounterTreasureBoxConfigure {
	int32 id = 1;
	string treasure_res = 2;
	int32 auto_disappear = 3;
	int32 disappear = 4;
}
message RiddleTreasureBoxDatas {
	repeated RiddleTreasureBoxConfigure datas = 1;
}
message RiddleTreasureBoxConfigure {
	int32 id = 1;
	string treasure_res = 2;
	int32 auto_disappear = 3;
	int32 disappear = 4;
}
message GameTreasureBoxDatas {
	repeated GameTreasureBoxConfigure datas = 1;
}
message GameTreasureBoxConfigure {
	int32 id = 1;
	string treasure_res = 2;
	int32 auto_disappear = 3;
	int32 disappear = 4;
}
message AllUIDatas {
	UIItemIconDatas icon = 1;
	UIPlayerIconDatas player_icon = 2;
	UISpellDatas ui_spell = 3;
	UIPosterIconDatas poster_icon = 4;
	UIDungeonDatas ui_dungeon = 5;
	UIAbyssDatas ui_abyss = 6;
	UISceneIconDatas ui_scene_icon = 7;
	UINPCIconDatas uinpc_icon = 8;
	UICollectPhotoIconDatas collect_photo_icon = 9;
	UICollectDataIconDatas collect_data_icon = 10;
	UIPassiveIconDatas passive_icon = 11;
	UIMoonStoneDataIconDatas moon_stone_data_icon = 12;
	UIShopIconDatas ui_shop_icon = 13;
	UIGachaIconDatas ui_gacha_icon = 14;
	UIAbilityIconDatas ui_ability_icon = 15;
	UIExploreIconDatas ui_explore_icon = 16;
	UIChatIconDatas ui_chat_icon = 17;
	UIExpressionIconDatas ui_expression_icon = 18;
	UIStoryIconDatas ui_story_icon = 19;
	UIExtraChaptertIconDatas ui_extra_chapter_icon = 20;
	UIGlobalBuffIconDatas ui_global_buff_icon = 21;
	UIBattleIconDatas ui_battle_icon = 22;
	UIFlagIconDatas ui_flag_icon = 23;
	UIRiddleIconDatas ui_riddle_icon = 24;
	UIChallengeIconDatas ui_challenge_icon = 25;
	UIQuestTextureDatas ui_quest_texture = 26;
	UILifeSpellIconDatas ui_life_spell_icon = 27;
	UIManualIconDatas ui_manual_icon = 28;
	UIBuffIconDatas ui_buff_icon = 29;
	UIMiniMapDatas ui_mini_map = 30;
	UIHeadDatas ui_head = 31;
	UIAchieveQuestDatas ui_achieve_quest = 32;
	UIActivityDatas ui_activity = 33;
	UIHelpDatas ui_help = 34;
}
message UIItemIconDatas {
	repeated UIItemIconConfigure datas = 1;
}
message UIItemIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIPlayerIconDatas {
	repeated UIPlayerIconConfigure datas = 1;
}
message UIPlayerIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UISpellDatas {
	repeated UISpellConfigure datas = 1;
}
message UISpellConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIPosterIconDatas {
	repeated UIPosterIconConfigure datas = 1;
}
message UIPosterIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIDungeonDatas {
	repeated UIDungeonConfigure datas = 1;
}
message UIDungeonConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIAbyssDatas {
	repeated UIAbyssConfigure datas = 1;
}
message UIAbyssConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UISceneIconDatas {
	repeated UISceneIconConfigure datas = 1;
}
message UISceneIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UINPCIconDatas {
	repeated UINPCIconConfigure datas = 1;
}
message UINPCIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UICollectPhotoIconDatas {
	repeated UICollectPhotoIconConfigure datas = 1;
}
message UICollectPhotoIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UICollectDataIconDatas {
	repeated UICollectDataIconConfigure datas = 1;
}
message UICollectDataIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIPassiveIconDatas {
	repeated UIPassiveIconConfigure datas = 1;
}
message UIPassiveIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIMoonStoneDataIconDatas {
	repeated UIMoonStoneDataIconConfigure datas = 1;
}
message UIMoonStoneDataIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIShopIconDatas {
	repeated UIShopIconConfigure datas = 1;
}
message UIShopIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIGachaIconDatas {
	repeated UIGachaIconConfigure datas = 1;
}
message UIGachaIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIAbilityIconDatas {
	repeated UIAbilityIconConfigure datas = 1;
}
message UIAbilityIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIExploreIconDatas {
	repeated UIExploreIconConfigure datas = 1;
}
message UIExploreIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIChatIconDatas {
	repeated UIChatIconConfigure datas = 1;
}
message UIChatIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIExpressionIconDatas {
	repeated UIExpressionIconConfigure datas = 1;
}
message UIExpressionIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIStoryIconDatas {
	repeated UIStoryIconConfigure datas = 1;
}
message UIStoryIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIExtraChaptertIconDatas {
	repeated UIExtraChaptertIconConfigure datas = 1;
}
message UIExtraChaptertIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIGlobalBuffIconDatas {
	repeated UIGlobalBuffIconConfigure datas = 1;
}
message UIGlobalBuffIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIBattleIconDatas {
	repeated UIBattleIconConfigure datas = 1;
}
message UIBattleIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIFlagIconDatas {
	repeated UIFlagIconConfigure datas = 1;
}
message UIFlagIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIRiddleIconDatas {
	repeated UIRiddleIconConfigure datas = 1;
}
message UIRiddleIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIChallengeIconDatas {
	repeated UIChallengeIconConfigure datas = 1;
}
message UIChallengeIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIQuestTextureDatas {
	repeated UIQuestTextureConfigure datas = 1;
}
message UIQuestTextureConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UILifeSpellIconDatas {
	repeated UILifeSpellIconConfigure datas = 1;
}
message UILifeSpellIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIManualIconDatas {
	repeated UIManualIconConfigure datas = 1;
}
message UIManualIconConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIBuffIconDatas {
	repeated UIBuffIconConfigure datas = 1;
}
message UIBuffIconConfigure {
	int32 id = 1;
	string asset_full_name = 2;
}
message UIMiniMapDatas {
	repeated UIMiniMapConfigure datas = 1;
}
message UIMiniMapConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIHeadDatas {
	repeated UIHeadConfigure datas = 1;
}
message UIHeadConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIAchieveQuestDatas {
	repeated UIAchieveQuestConfigure datas = 1;
}
message UIAchieveQuestConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIActivityDatas {
	repeated UIActivityConfigure datas = 1;
}
message UIActivityConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIHelpDatas {
	repeated UIHelpConfigure datas = 1;
}
message UIHelpConfigure {
	int32 id = 1;
	repeated string asset_full_name = 2;
}
message UIConfigure {
	int32 id = 1;
	string asset_full_name = 4;
}
message AllUIStaticTextDatas {
	UIStaticTextDatas ui_static_text = 1;
}
message UIStaticTextDatas {
	repeated UIStaticTextConfigure datas = 1;
}
message UIStaticTextConfigure {
	int32 id = 1;
	string key = 2;
	string chinese_simplified = 3;
	string chinese_traditional = 4;
	string english = 5;
	string japanese = 6;
	string korea = 7;
}
message AllUmbrellaDatas {
	UmbrellaDatas umbrella = 1;
}
message UmbrellaDatas {
	repeated UmbrellaConfigure datas = 1;
}
message UmbrellaConfigure {
	int32 id = 1;
	int32 item_id = 2;
	string asset_full_name = 3;
}
message BasePropertyConfigure {
}
message BasePropertyConfigureFloatItem {
}
message BasePropertyRandomConfigure {
}
message BasePropertyRandomConfigureFloatItem {
}
message Util_ItemIDWithCountConfigure {
}
message MapMomentsItem {
}
message AllVideoDatas {
	VideoDatas video = 1;
}
message VideoDatas {
	repeated VideoConfigure datas = 1;
}
message VideoConfigure {
	int32 id = 1;
	string asset_path = 2;
}
message AllVoiceDatas {
	VoiceCollectPhotoDatas voice_collect_photo = 1;
	VoiceCollectDataDatas voice_collect_data = 2;
	VoiceCollectFileDatas voice_collect_file = 3;
	VoiceCollectBookDatas voice_collect_book = 4;
	VoiceCollectTapeDatas voice_collect_tape = 5;
	VoiceCollectItemDatas voice_collect_item = 6;
	VoiceCollectPortalDatas voice_collect_portal = 7;
	VoiceCollectPhotoItemDatas voice_collect_photo_item = 8;
	VoiceScenicDatas voice_scenic = 9;
	VoiceCollectCrystalDatas voice_collect_crystal = 10;
	VoiceAreaDatas voice_area = 11;
	VoiceQuestDatas voice_quest = 12;
	VoiceAchieveDatas voice_achieve = 13;
	VoiceRegionDatas voice_region = 14;
	VoiceGatherDatas voice_gather = 15;
	VoiceBattleDatas voice_battle = 16;
	VoiceCharacterDatas voice_character = 17;
	VoiceItemLevelDatas voice_item_level = 18;
}
message VoiceCollectPhotoDatas {
	repeated VoiceCollectPhotoConfigure datas = 1;
}
message VoiceCollectPhotoConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectDataDatas {
	repeated VoiceCollectDataConfigure datas = 1;
}
message VoiceCollectDataConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectFileDatas {
	repeated VoiceCollectFileConfigure datas = 1;
}
message VoiceCollectFileConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectBookDatas {
	repeated VoiceCollectBookConfigure datas = 1;
}
message VoiceCollectBookConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectTapeDatas {
	repeated VoiceCollectTapeConfigure datas = 1;
}
message VoiceCollectTapeConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectItemDatas {
	repeated VoiceCollectItemConfigure datas = 1;
}
message VoiceCollectItemConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectPortalDatas {
	repeated VoiceCollectPortalConfigure datas = 1;
}
message VoiceCollectPortalConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectPhotoItemDatas {
	repeated VoiceCollectPhotoItemConfigure datas = 1;
}
message VoiceCollectPhotoItemConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceScenicDatas {
	repeated VoiceScenicConfigure datas = 1;
}
message VoiceScenicConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCollectCrystalDatas {
	repeated VoiceCollectCrystalConfigure datas = 1;
}
message VoiceCollectCrystalConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceAreaDatas {
	repeated VoiceAreaConfigure datas = 1;
}
message VoiceAreaConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceQuestDatas {
	repeated VoiceQuestConfigure datas = 1;
}
message VoiceQuestConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceAchieveDatas {
	repeated VoiceAchieveConfigure datas = 1;
}
message VoiceAchieveConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceRegionDatas {
	repeated VoiceRegionConfigure datas = 1;
}
message VoiceRegionConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceGatherDatas {
	repeated VoiceGatherConfigure datas = 1;
}
message VoiceGatherConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceBattleDatas {
	repeated VoiceBattleConfigure datas = 1;
}
message VoiceBattleConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message VoiceCharacterDatas {
	repeated VoiceCharacterConfigure datas = 1;
}
message VoiceCharacterConfigure {
	int32 id = 1;
	repeated VoiceCharacterItem voice_character_item = 2;
}
message VoiceCharacterItem {
	string sound_path = 1;
	float sound_volume = 2;
	int32 level = 3;
	int32 new_voice_type = 4;
	string text_value = 5;
	string voice_name = 6;
}
message VoiceItemLevelDatas {
	repeated VoiceItemLevelConfigure datas = 1;
}
message VoiceItemLevelConfigure {
	int32 id = 1;
	string sound_path = 2;
	float sound_volume = 3;
	repeated string text_speaker = 4;
	repeated string text_content = 5;
	repeated float text_start_time = 6;
	repeated float text_end_time = 7;
}
message AllVoiceRegionDatas {
	RegionDatas region = 1;
}
message RegionDatas {
	repeated RegionConfigure datas = 1;
}
message RegionConfigure {
	int32 id = 1;
	int32 guide_voice = 2;
	int32 new_voice_region_refresh_type = 3;
}
message AllWeaponDatas {
	WeaponDatas weapon = 1;
	WeaponPropertyDatas weapon_property = 2;
	WeaponDisassembleDatas weapon_disassemble = 3;
	WeaponStrengthenDatas weapon_strengthen = 4;
	WeaponRandomPropertyDatas weapon_random_property = 5;
	WeaponRandomValueDatas weapon_random_value = 6;
	WeaponSpellDatas weapon_spell = 7;
}
message WeaponDatas {
	repeated WeaponConfigure datas = 1;
}
message WeaponConfigure {
	int32 id = 1;
	int32 item_id = 2;
	int32 durability = 3;
	int32 weapon_property_id = 4;
	int32 base_score = 5;
	repeated int32 passive_spell_i_ds = 6;
	int32 roll_spell_group_id = 7;
	int32 normal_spell_id = 8;
	int32 air_normal_spell_id = 9;
	string asset_full_name = 10;
	int32 new_ai_type = 11;
	int32 new_weapon_system_type = 12;
	int32 new_chopping_correction_type = 13;
	int32 new_shooting_correction_type = 14;
	int32 new_strike_correction_type = 15;
	int32 new_magic_correction_type = 16;
	int32 new_weapon_type = 17;
}
message WeaponPropertyDatas {
	repeated WeaponPropertyConfigure datas = 1;
}
message WeaponPropertyConfigure {
	int32 id = 1;
	repeated WeaponPropertyGroupInfo weapon_property_group_info = 2;
}
message WeaponPropertyGroupInfo {
	int32 min_level = 1;
	int32 max_level = 2;
	int32 weapon_level = 3;
	float min_attack = 4;
	float max_attack = 5;
	float min_damage_balance = 6;
	float max_damage_balance = 7;
	float min_critical_ratio = 8;
	float max_critical_ratio = 9;
	repeated float weapon_params = 10;
	float min_float_value = 11;
	float max_float_value = 12;
	int32 random_property1_id = 13;
	int32 random_property2_id = 14;
	int32 random_property3_id = 15;
	int32 random_property4_id = 16;
	int32 strengthen_id = 17;
	int32 disassemble_id = 18;
}
message WeaponDisassembleDatas {
	repeated WeaponDisassembleConfigure datas = 1;
}
message WeaponDisassembleConfigure {
	int32 id = 1;
	repeated WeaponDisassembleItem weapon_disassemble_item = 2;
}
message WeaponDisassembleItem {
	int32 item_id = 1;
	int32 item_min_count = 2;
	int32 item_max_count = 3;
	float item_rate = 4;
}
message WeaponStrengthenDatas {
	repeated WeaponStrengthenConfigure datas = 1;
}
message WeaponStrengthenConfigure {
	int32 id = 1;
	repeated WeaponStrengthenGroupInfo weapon_strengthen_group_info = 2;
}
message WeaponStrengthenGroupInfo {
	int32 level = 1;
	float add_attack = 2;
	float add_attack_ratio = 3;
	int32 need_gold_count = 4;
	repeated WeaponStrengthNeedItems weapon_strength_need_item = 5;
}
message WeaponStrengthNeedItems {
	int32 need_item_id = 1;
	int32 need_item_count = 2;
}
message WeaponRandomPropertyDatas {
	repeated WeaponRandomPropertyConfigure datas = 1;
}
message WeaponRandomPropertyConfigure {
	int32 id = 1;
	repeated WeaponRandomPropertyGroupInfo weapon_random_property_group_info = 2;
}
message WeaponRandomPropertyGroupInfo {
	int32 new_property_type = 1;
	int32 random_value_id = 2;
}
message WeaponRandomValueDatas {
	repeated WeaponRandomValueConfigure datas = 1;
}
message WeaponRandomValueConfigure {
	int32 id = 1;
	repeated WeaponRandomValueGroupInfo weapon_random_group_info = 2;
}
message WeaponRandomValueGroupInfo {
	float min_level = 1;
	float max_level = 2;
	float min = 3;
	float max = 4;
}
message WeaponSpellDatas {
	repeated WeaponSpellConfigure datas = 1;
}
message WeaponSpellConfigure {
	int32 id = 1;
	repeated int32 roll_spell_i_ds = 2;
}
message AllWeatherDatas {
	WeatherDatas weather = 1;
}
message WeatherDatas {
	repeated WeatherConfigure datas = 1;
}
message WeatherConfigure {
	int32 id = 1;
	int32 new_season_type = 2;
}
enum PackType {
  PackType_Inventory = 0;
  PackType_TempPack = 1;
  PackType_TempStorageArea = 2;
  PackType_None = 3;
}
enum AchievementStatus {
  AchievementStatus_Doing = 0;
  AchievementStatus_CanReward = 1;
  AchievementStatus_Rewarded = 2;
}
enum PosterIndex {
  PosterIndex_First = 0;
  PosterIndex_Second = 1;
  PosterIndex_Third = 2;
}
enum NoticeType {
  NoticeType_System = 0;
  NoticeType_Activity = 1;
  NoticeType_Image = 2;
  NoticeType_Carousel = 3;
}
enum BuffSystemType {
  BuffSystemType_None = 0;
  BuffSystemType_Global = 1;
  BuffSystemType_Life = 2;
}
enum DiceWonResult {
  DiceWonResult_Loss = 0;
  DiceWonResult_Win = 1;
  DiceWonResult_Draw = 2;
}
enum DungeonOperateType {
  DungeonOperateType_Start = 0;
  DungeonOperateType_End = 1;
}
enum LockEquip_EquipType {
  LockEquip_EquipType_Weapon = 0;
  LockEquip_EquipType_Armor = 1;
}
enum NpcTalkType {
  NpcTalkType_Npc = 0;
  NpcTalkType_Mechanism = 1;
}
